{"version":3,"sources":["../node_modules/@emotion/memoize/dist/memoize.esm.js","../node_modules/@emotion/unitless/dist/unitless.esm.js","../node_modules/@emotion/hash/dist/hash.esm.js","../node_modules/@emotion/stylis/dist/stylis.esm.js","../node_modules/stylis-rule-sheet/index.js","../node_modules/create-emotion/dist/index.esm.js","../node_modules/emotion/dist/index.esm.js","js/theme/Theme.js","js/theme/Global.js","js/nori/util/NumberUtils.js","js/nori/util/ArrayUtils.js","js/nori/util/ElementIDCreator.js","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/isarray/index.js","../node_modules/buffer/index.js","../node_modules/lodash/lodash.js","js/nori/LifecycleQueue.js","../node_modules/ramda/es/internal/_isPlaceholder.js","../node_modules/ramda/es/internal/_curry1.js","../node_modules/ramda/es/always.js","../node_modules/ramda/es/F.js","../node_modules/ramda/es/T.js","../node_modules/ramda/es/__.js","../node_modules/ramda/es/internal/_curry2.js","../node_modules/ramda/es/add.js","../node_modules/ramda/es/internal/_concat.js","../node_modules/ramda/es/internal/_arity.js","../node_modules/ramda/es/internal/_curryN.js","../node_modules/ramda/es/curryN.js","../node_modules/ramda/es/addIndex.js","../node_modules/ramda/es/internal/_curry3.js","../node_modules/ramda/es/adjust.js","../node_modules/ramda/es/internal/_isArray.js","../node_modules/ramda/es/internal/_isTransformer.js","../node_modules/ramda/es/internal/_dispatchable.js","../node_modules/ramda/es/internal/_reduced.js","../node_modules/ramda/es/internal/_xfBase.js","../node_modules/ramda/es/internal/_xall.js","../node_modules/ramda/es/all.js","../node_modules/ramda/es/max.js","../node_modules/ramda/es/internal/_map.js","../node_modules/ramda/es/internal/_isString.js","../node_modules/ramda/es/internal/_isArrayLike.js","../node_modules/ramda/es/internal/_xwrap.js","../node_modules/ramda/es/bind.js","../node_modules/ramda/es/internal/_reduce.js","../node_modules/ramda/es/internal/_xmap.js","../node_modules/ramda/es/internal/_has.js","../node_modules/ramda/es/internal/_isArguments.js","../node_modules/ramda/es/keys.js","../node_modules/ramda/es/map.js","../node_modules/ramda/es/path.js","../node_modules/ramda/es/prop.js","../node_modules/ramda/es/pluck.js","../node_modules/ramda/es/reduce.js","../node_modules/ramda/es/allPass.js","../node_modules/ramda/es/and.js","../node_modules/ramda/es/internal/_xany.js","../node_modules/ramda/es/any.js","../node_modules/ramda/es/anyPass.js","../node_modules/ramda/es/ap.js","../node_modules/ramda/es/internal/_aperture.js","../node_modules/ramda/es/internal/_xaperture.js","../node_modules/ramda/es/aperture.js","../node_modules/ramda/es/append.js","../node_modules/ramda/es/apply.js","../node_modules/ramda/es/values.js","../node_modules/ramda/es/applySpec.js","../node_modules/ramda/es/applyTo.js","../node_modules/ramda/es/ascend.js","../node_modules/ramda/es/assoc.js","../node_modules/ramda/es/internal/_isInteger.js","../node_modules/ramda/es/isNil.js","../node_modules/ramda/es/assocPath.js","../node_modules/ramda/es/nAry.js","../node_modules/ramda/es/binary.js","../node_modules/ramda/es/internal/_isFunction.js","../node_modules/ramda/es/liftN.js","../node_modules/ramda/es/lift.js","../node_modules/ramda/es/both.js","../node_modules/ramda/es/curry.js","../node_modules/ramda/es/call.js","../node_modules/ramda/es/internal/_makeFlat.js","../node_modules/ramda/es/internal/_forceReduced.js","../node_modules/ramda/es/internal/_flatCat.js","../node_modules/ramda/es/internal/_xchain.js","../node_modules/ramda/es/chain.js","../node_modules/ramda/es/clamp.js","../node_modules/ramda/es/internal/_cloneRegExp.js","../node_modules/ramda/es/type.js","../node_modules/ramda/es/internal/_clone.js","../node_modules/ramda/es/clone.js","../node_modules/ramda/es/comparator.js","../node_modules/ramda/es/not.js","../node_modules/ramda/es/complement.js","../node_modules/ramda/es/internal/_pipe.js","../node_modules/ramda/es/internal/_checkForMethod.js","../node_modules/ramda/es/slice.js","../node_modules/ramda/es/tail.js","../node_modules/ramda/es/pipe.js","../node_modules/ramda/es/reverse.js","../node_modules/ramda/es/compose.js","../node_modules/ramda/es/composeK.js","../node_modules/ramda/es/internal/_pipeP.js","../node_modules/ramda/es/pipeP.js","../node_modules/ramda/es/composeP.js","../node_modules/ramda/es/internal/_arrayFromIterator.js","../node_modules/ramda/es/internal/_containsWith.js","../node_modules/ramda/es/internal/_functionName.js","../node_modules/ramda/es/identical.js","../node_modules/ramda/es/internal/_equals.js","../node_modules/ramda/es/equals.js","../node_modules/ramda/es/internal/_indexOf.js","../node_modules/ramda/es/internal/_contains.js","../node_modules/ramda/es/internal/_quote.js","../node_modules/ramda/es/internal/_toISOString.js","../node_modules/ramda/es/internal/_complement.js","../node_modules/ramda/es/internal/_filter.js","../node_modules/ramda/es/internal/_isObject.js","../node_modules/ramda/es/internal/_xfilter.js","../node_modules/ramda/es/filter.js","../node_modules/ramda/es/reject.js","../node_modules/ramda/es/internal/_toString.js","../node_modules/ramda/es/toString.js","../node_modules/ramda/es/concat.js","../node_modules/ramda/es/cond.js","../node_modules/ramda/es/constructN.js","../node_modules/ramda/es/construct.js","../node_modules/ramda/es/contains.js","../node_modules/ramda/es/converge.js","../node_modules/ramda/es/internal/_xreduceBy.js","../node_modules/ramda/es/reduceBy.js","../node_modules/ramda/es/countBy.js","../node_modules/ramda/es/dec.js","../node_modules/ramda/es/defaultTo.js","../node_modules/ramda/es/descend.js","../node_modules/ramda/es/difference.js","../node_modules/ramda/es/differenceWith.js","../node_modules/ramda/es/dissoc.js","../node_modules/ramda/es/remove.js","../node_modules/ramda/es/update.js","../node_modules/ramda/es/dissocPath.js","../node_modules/ramda/es/divide.js","../node_modules/ramda/es/internal/_xdrop.js","../node_modules/ramda/es/drop.js","../node_modules/ramda/es/internal/_xtake.js","../node_modules/ramda/es/take.js","../node_modules/ramda/es/internal/_dropLast.js","../node_modules/ramda/es/internal/_xdropLast.js","../node_modules/ramda/es/dropLast.js","../node_modules/ramda/es/internal/_dropLastWhile.js","../node_modules/ramda/es/internal/_xdropLastWhile.js","../node_modules/ramda/es/dropLastWhile.js","../node_modules/ramda/es/internal/_xdropRepeatsWith.js","../node_modules/ramda/es/nth.js","../node_modules/ramda/es/last.js","../node_modules/ramda/es/dropRepeatsWith.js","../node_modules/ramda/es/dropRepeats.js","../node_modules/ramda/es/internal/_xdropWhile.js","../node_modules/ramda/es/dropWhile.js","../node_modules/ramda/es/or.js","../node_modules/ramda/es/either.js","../node_modules/ramda/es/empty.js","../node_modules/ramda/es/takeLast.js","../node_modules/ramda/es/endsWith.js","../node_modules/ramda/es/eqBy.js","../node_modules/ramda/es/eqProps.js","../node_modules/ramda/es/evolve.js","../node_modules/ramda/es/internal/_xfind.js","../node_modules/ramda/es/find.js","../node_modules/ramda/es/internal/_xfindIndex.js","../node_modules/ramda/es/findIndex.js","../node_modules/ramda/es/internal/_xfindLast.js","../node_modules/ramda/es/findLast.js","../node_modules/ramda/es/internal/_xfindLastIndex.js","../node_modules/ramda/es/findLastIndex.js","../node_modules/ramda/es/flatten.js","../node_modules/ramda/es/flip.js","../node_modules/ramda/es/forEach.js","../node_modules/ramda/es/forEachObjIndexed.js","../node_modules/ramda/es/fromPairs.js","../node_modules/ramda/es/groupBy.js","../node_modules/ramda/es/groupWith.js","../node_modules/ramda/es/gt.js","../node_modules/ramda/es/gte.js","../node_modules/ramda/es/has.js","../node_modules/ramda/es/hasIn.js","../node_modules/ramda/es/head.js","../node_modules/ramda/es/internal/_identity.js","../node_modules/ramda/es/identity.js","../node_modules/ramda/es/ifElse.js","../node_modules/ramda/es/inc.js","../node_modules/ramda/es/indexBy.js","../node_modules/ramda/es/indexOf.js","../node_modules/ramda/es/init.js","../node_modules/ramda/es/innerJoin.js","../node_modules/ramda/es/insert.js","../node_modules/ramda/es/insertAll.js","../node_modules/ramda/es/internal/_Set.js","../node_modules/ramda/es/uniqBy.js","../node_modules/ramda/es/uniq.js","../node_modules/ramda/es/intersection.js","../node_modules/ramda/es/intersperse.js","../node_modules/ramda/es/internal/_objectAssign.js","../node_modules/ramda/es/internal/_assign.js","../node_modules/ramda/es/objOf.js","../node_modules/ramda/es/internal/_stepCat.js","../node_modules/ramda/es/into.js","../node_modules/ramda/es/invert.js","../node_modules/ramda/es/invertObj.js","../node_modules/ramda/es/invoker.js","../node_modules/ramda/es/is.js","../node_modules/ramda/es/isEmpty.js","../node_modules/ramda/es/join.js","../node_modules/ramda/es/juxt.js","../node_modules/ramda/es/keysIn.js","../node_modules/ramda/es/lastIndexOf.js","../node_modules/ramda/es/internal/_isNumber.js","../node_modules/ramda/es/length.js","../node_modules/ramda/es/lens.js","../node_modules/ramda/es/lensIndex.js","../node_modules/ramda/es/lensPath.js","../node_modules/ramda/es/lensProp.js","../node_modules/ramda/es/lt.js","../node_modules/ramda/es/lte.js","../node_modules/ramda/es/mapAccum.js","../node_modules/ramda/es/mapAccumRight.js","../node_modules/ramda/es/mapObjIndexed.js","../node_modules/ramda/es/match.js","../node_modules/ramda/es/mathMod.js","../node_modules/ramda/es/maxBy.js","../node_modules/ramda/es/sum.js","../node_modules/ramda/es/mean.js","../node_modules/ramda/es/median.js","../node_modules/ramda/es/memoizeWith.js","../node_modules/ramda/es/memoize.js","../node_modules/ramda/es/merge.js","../node_modules/ramda/es/mergeAll.js","../node_modules/ramda/es/mergeWithKey.js","../node_modules/ramda/es/mergeDeepWithKey.js","../node_modules/ramda/es/mergeDeepLeft.js","../node_modules/ramda/es/mergeDeepRight.js","../node_modules/ramda/es/mergeDeepWith.js","../node_modules/ramda/es/mergeWith.js","../node_modules/ramda/es/min.js","../node_modules/ramda/es/minBy.js","../node_modules/ramda/es/modulo.js","../node_modules/ramda/es/multiply.js","../node_modules/ramda/es/negate.js","../node_modules/ramda/es/none.js","../node_modules/ramda/es/nthArg.js","../node_modules/ramda/es/o.js","../node_modules/ramda/es/internal/_of.js","../node_modules/ramda/es/of.js","../node_modules/ramda/es/omit.js","../node_modules/ramda/es/once.js","../node_modules/ramda/es/over.js","../node_modules/ramda/es/pair.js","../node_modules/ramda/es/internal/_createPartialApplicator.js","../node_modules/ramda/es/partial.js","../node_modules/ramda/es/partialRight.js","../node_modules/ramda/es/partition.js","../node_modules/ramda/es/pathEq.js","../node_modules/ramda/es/pathOr.js","../node_modules/ramda/es/pathSatisfies.js","../node_modules/ramda/es/pick.js","../node_modules/ramda/es/pickAll.js","../node_modules/ramda/es/pickBy.js","../node_modules/ramda/es/pipeK.js","../node_modules/ramda/es/prepend.js","../node_modules/ramda/es/product.js","../node_modules/ramda/es/useWith.js","../node_modules/ramda/es/project.js","../node_modules/ramda/es/propEq.js","../node_modules/ramda/es/propIs.js","../node_modules/ramda/es/propOr.js","../node_modules/ramda/es/propSatisfies.js","../node_modules/ramda/es/props.js","../node_modules/ramda/es/range.js","../node_modules/ramda/es/reduceRight.js","../node_modules/ramda/es/reduceWhile.js","../node_modules/ramda/es/reduced.js","../node_modules/ramda/es/times.js","../node_modules/ramda/es/repeat.js","../node_modules/ramda/es/replace.js","../node_modules/ramda/es/scan.js","../node_modules/ramda/es/sequence.js","../node_modules/ramda/es/set.js","../node_modules/ramda/es/sort.js","../node_modules/ramda/es/sortBy.js","../node_modules/ramda/es/sortWith.js","../node_modules/ramda/es/split.js","../node_modules/ramda/es/splitAt.js","../node_modules/ramda/es/splitEvery.js","../node_modules/ramda/es/splitWhen.js","../node_modules/ramda/es/startsWith.js","../node_modules/ramda/es/subtract.js","../node_modules/ramda/es/symmetricDifference.js","../node_modules/ramda/es/symmetricDifferenceWith.js","../node_modules/ramda/es/takeLastWhile.js","../node_modules/ramda/es/internal/_xtakeWhile.js","../node_modules/ramda/es/takeWhile.js","../node_modules/ramda/es/internal/_xtap.js","../node_modules/ramda/es/tap.js","../node_modules/ramda/es/internal/_isRegExp.js","../node_modules/ramda/es/test.js","../node_modules/ramda/es/toLower.js","../node_modules/ramda/es/toPairs.js","../node_modules/ramda/es/toPairsIn.js","../node_modules/ramda/es/toUpper.js","../node_modules/ramda/es/transduce.js","../node_modules/ramda/es/transpose.js","../node_modules/ramda/es/traverse.js","../node_modules/ramda/es/trim.js","../node_modules/ramda/es/tryCatch.js","../node_modules/ramda/es/unapply.js","../node_modules/ramda/es/unary.js","../node_modules/ramda/es/uncurryN.js","../node_modules/ramda/es/unfold.js","../node_modules/ramda/es/union.js","../node_modules/ramda/es/uniqWith.js","../node_modules/ramda/es/unionWith.js","../node_modules/ramda/es/unless.js","../node_modules/ramda/es/unnest.js","../node_modules/ramda/es/until.js","../node_modules/ramda/es/valuesIn.js","../node_modules/ramda/es/view.js","../node_modules/ramda/es/when.js","../node_modules/ramda/es/where.js","../node_modules/ramda/es/whereEq.js","../node_modules/ramda/es/without.js","../node_modules/ramda/es/xprod.js","../node_modules/ramda/es/zip.js","../node_modules/ramda/es/zipObj.js","../node_modules/ramda/es/zipWith.js","../node_modules/ramda/es/index.js","js/nori/browser/DOMToolbox.js","js/nori/NoriDOM.js","../node_modules/deep-diff/index.js","js/nori/Nori.js","js/nori/util/is.js","js/nori/NoriComponent.js","js/components/Box.js","js/nori/util/StringUtils.js","js/nori/util/Lorem.js","js/components/Lorem.js","js/components/Ticker.js","js/components/Greeter.js","js/components/Lister.js","js/index.js"],"names":["memoize","fn","cache","arg","undefined","unitlessKeys","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","WebkitLineClamp","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","murmurhash2_32_gc","str","l","length","h","i","k","charCodeAt","toString","stylis_min","W","M","d","c","e","a","m","b","v","n","q","g","x","K","u","r","I","t","B","J","y","f","p","F","G","C","replace","N","trim","charAt","substring","ca","O","A","X","H","D","z","join","da","ea","fa","w","L","P","Y","E","ha","Q","split","ia","Z","indexOf","ja","ka","test","aa","ba","la","ma","R","na","oa","S","call","T","constructor","Array","Function","Boolean","U","prefix","V","use","set","hyphenateRegex","processStyleName","styleName","toLowerCase","processStyleValue","key","value","unitless","isNaN","contentValuePattern","contentValues","oldProcessStyleValue","console","error","classnames","args","len","cls","toAdd","isArray","isBrowser","document","sheetForTag","tag","sheet","styleSheets","ownerNode","makeStyleTag","opts","createElement","setAttribute","nonce","appendChild","createTextNode","container","head","StyleSheet","options","isSpeedy","tags","ctr","_proto","prototype","inject","injected","Error","speedy","bool","insert","rule","sourceMap","insertRule","cssRules","warn","_tag","push","flush","forEach","parentNode","removeChild","createEmotion","context","__SECRET_EMOTION__","current","currentSourceMap","insertionPlugin","stylisOptions","caches","registered","inserted","stylis","Stylis","stylisPlugins","handleInterpolation","interpolation","couldBeSelectorInterpolation","__emotion_styles","selector","mergedProps","createStringFromObject","cached","objectToStringCache","WeakMap","obj","has","get","string","Object","keys","name","stylesWithLabel","labelPattern","createClassName","styles","identifierName","oldCreateClassName","sourceMappingUrlPattern","createStyles","strings","stringMode","raw","_len","arguments","interpolations","_key","match","p1","oldStylis","scope","css","apply","keyframes","animation","injectGlobal","getRegisteredStyles","registeredStyles","classNames","rawClassName","className","merge","cx","_len2","_key2","hydrateSingleId","id","hydrate","ids","chunks","querySelectorAll","node","insertBefore","getAttribute","emotion","global","_createEmotion","modularScale","ms10","ms9","ms8","ms7","ms6","ms5","ms4","ms3","ms2","ms1","ms0","BASE_MEASURE","theme","colors","black","gray","silver","white","transparent","blacks","whites","gradients","space","baseUnit","fonts","sansSerif","shadows","textLight","textDark","textDarkSmall","textEmboss","dropShadow","xs","sm","lg","xl","bigsoft","radii","fontSizes","vfast","fast","default","slow","vslow","isInteger","rndNumber","min","max","Math","floor","random","clamp","val","isBetween","distanceTL","point1","point2","xd","left","yd","top","sqrt","arrify","slice","mergeAll","results","subArr","elm","unique","arry","o","removeIndex","arr","idx","splice","removeItem","item","rndElement","getRandomSetOfElements","srcarry","getDifferences","arr1","arr2","dif","present","arryArryToArryObj","src","reduce","row","col","shuffleArray","array","j","range","flatten","concat","count","resetId","getNextId","didMountQueue","didUpdateQueue","enqueueDidMount","getDidMountQueue","_","performDidMountQueue","enqueueDidUpdate","getDidUpdateQueue","performDidUpdateQueue","map","componentDidUpdate","_isPlaceholder","_curry1","f1","always","_curry2","f2","_b","_a","add","Number","_concat","set1","set2","len1","len2","result","_arity","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","_curryN","received","combined","argsIdx","combinedIdx","curryN","addIndex","origFn","list","_curry3","f3","_c","adjust","start","_idx","_list","_isArray","_isTransformer","_dispatchable","methodNames","xf","pop","transducer","_reduced","init","XAll","all","_xfBase","input","_xall","_map","functor","_isString","_isArrayLike","isArrayLike","nodeType","hasOwnProperty","XWrap","acc","_xwrap","bind","thisObj","_arrayReduce","_iterableReduce","iter","step","next","done","_methodReduce","methodName","symIterator","Symbol","iterator","_reduce","TypeError","XMap","_xmap","_has","prop","_isArguments","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","hasArgsEnumBug","contains","_keys","nIdx","ks","checkArgsLength","path","paths","pluck","allPass","preds","and","XAny","any","_xany","anyPass","ap","applyF","applyX","_aperture","limit","XAperture","pos","full","store","getCopy","_xaperture","aperture","append","el","values","props","vals","applySpec","spec","applyTo","ascend","bb","assoc","_isInteger","isNil","assocPath","nextObj","nAry","binary","_isFunction","liftN","arity","lifted","lift","both","_both","curry","_makeFlat","recursive","flatt","jlen","ilen","_forceReduced","preservingReduced","ret","_flatCat","_xcat","rxf","_xchain","chain","monad","_cloneRegExp","pattern","RegExp","source","ignoreCase","multiline","sticky","unicode","type","_clone","refFrom","refTo","deep","copy","copiedValue","Date","valueOf","clone","comparator","pred","not","complement","_pipe","_checkForMethod","methodname","fromIndex","toIndex","tail","Infinity","pipe","reverse","compose","composeK","last","_pipeP","ctx","then","pipeP","composeP","_arrayFromIterator","_containsWith","_functionName","String","identical","_uniqContentEquals","aIterator","bIterator","stackA","stackB","eq","_equals","aItem","typeA","equals","message","size","entries","keysA","extendedStackA","extendedStackB","_indexOf","inf","_contains","_quote","s","escaped","pad","_toISOString","toISOString","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","_complement","_filter","_isObject","XFilter","_xfilter","filter","filterable","reject","_toString","seen","recur","mapPairs","sort","NaN","repr","cond","pairs","pair","constructN","Fn","$0","$1","$2","$3","$4","$5","$6","$7","$8","$9","construct","converge","after","fns","XReduceBy","valueFn","valueAcc","keyFn","inputs","_xreduceBy","reduceBy","elt","countBy","elem","dec","defaultTo","descend","difference","first","second","out","firstLen","differenceWith","dissoc","remove","update","dissocPath","divide","XDrop","_xdrop","drop","XTake","_xtake","take","dropLast","XDropLast","_xdropLast","_dropLast","dropLastWhile","XDropLastWhile","retained","retain","_xdropLastWhile","_dropLastWhile","XDropRepeatsWith","lastValue","seenFirstValue","sameAsLast","_xdropRepeatsWith","nth","offset","dropRepeatsWith","dropRepeats","XDropWhile","_xdropWhile","dropWhile","or","either","_either","empty","takeLast","endsWith","suffix","eqBy","eqProps","obj1","obj2","evolve","transformations","object","transformation","XFind","found","_xfind","find","XFindIndex","_xfindIndex","findIndex","XFindLast","_xfindLast","findLast","XFindLastIndex","lastIdx","_xfindLastIndex","findLastIndex","flip","forEachObjIndexed","keyList","fromPairs","groupBy","groupWith","res","nextidx","gt","gte","hasIn","_identity","identity","ifElse","condition","onTrue","onFalse","_ifElse","inc","indexBy","target","innerJoin","ys","insertAll","elts","_Set","_nativeSet","Set","_items","hasOrAdd","shouldAdd","prevSize","newSize","bIdx","uniqBy","appliedItem","uniq","intersection","list1","list2","lookupList","filteredList","intersperse","separator","_objectAssign","output","nextKey","assign","objOf","_stepCatArray","_stepCatString","_stepCatObject","_stepCat","into","invert","invertObj","invoker","method","is","Ctor","isEmpty","juxt","keysIn","lastIndexOf","_isNumber","lens","getter","setter","toFunctorFn","focus","lensIndex","lensPath","lensProp","lt","lte","mapAccum","tuple","mapAccumRight","mapObjIndexed","rx","mathMod","maxBy","sum","mean","median","width","memoizeWith","mFn","_assign","mergeWithKey","mergeDeepWithKey","lObj","rObj","lVal","rVal","mergeDeepLeft","mergeDeepRight","mergeDeepWith","mergeWith","_l","_r","minBy","modulo","multiply","negate","none","nthArg","_of","of","omit","names","index","once","called","Identity","over","fst","snd","_createPartialApplicator","partial","partialRight","partition","pathEq","_path","pathOr","pathSatisfies","propPath","pick","pickAll","pickBy","pipeK","prepend","product","useWith","transformers","project","propEq","propIs","propOr","propSatisfies","ps","from","to","reduceRight","reduceWhile","_reduceWhile","reduced","times","RangeError","repeat","regex","replacement","scan","sequence","traversable","sortBy","sortWith","splitAt","splitEvery","splitWhen","startsWith","subtract","symmetricDifference","symmetricDifferenceWith","takeLastWhile","XTakeWhile","_xtakeWhile","takeWhile","XTap","_xtap","tap","_isRegExp","toLower","toPairs","toPairsIn","toUpper","transduce","transpose","outerlist","innerlist","traverse","ws","zeroWidth","hasProtoTrim","_trim","beginRx","endRx","tryCatch","_tryCatch","tryer","catcher","unapply","unary","uncurryN","depth","currentDepth","endIdx","unfold","seed","union","uniqWith","unionWith","unless","whenFalseFn","unnest","until","valuesIn","vs","Const","view","when","whenTrueFn","where","testObj","whereEq","without","xprod","zip","rv","zipObj","zipWith","$","querySelector","$$","getElStyle","window","getComputedStyle","getElStyleProp","getPropertyValue","pxToInt","parseInt","substr","isElementEntirelyInViewport","rect","getBoundingClientRect","bottom","innerHeight","documentElement","clientHeight","right","innerWidth","clientWidth","isElementInViewport","isDomObj","position","offsetLeft","offsetTop","ol","ot","offsetParent","removeAllElements","firstChild","removeElement","appendElement","root","parent","replaceElement","parentElement","nextSibling","replaceElementWith","oldEl","newEl","parentEl","escapeHTML","HTMLStrToNode","createRange","createContextualFragment","wrapElement","wrapperStr","wrapperEl","elParent","closest","matchesSelector","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","hasClass","classList","addClass","removeClass","toggleClass","applyCSS","style","computeWindowScale","config","hScale","height","wScale","scale","maxScale","minScale","querySelectorAllAsArray","centerElementInViewPort","vpH","vpW","elR","elH","elW","ID_KEY","isEvent","event","getEventName","specialProps","isSpecialProp","includes","eventMap","$documentHostNode","render","component","hostNode","time","vdom","patch","timeEnd","correlateVDOMNode","vdomNode","$domRoot","$element","newvdom","currentvdom","patches","updateDOM","$newElement","vnode","$toRemove","changed","oldNode","childNodes","replaceChild","updateProps","newLength","children","oldLength","newNode","ownerComp","owner","componentDidMount","setProps","setEvents","mapActions","evt","nodeId","internalHandler","handleEventTrigger","addEventListener","removeEventListener","externalHandler","createEventObject","removeEvents","newProps","oldProps","updateProp","newValue","oldValue","removeProp","setProp","setBooleanProp","removeBooleanProp","removeAttribute","currentHostTree","componentInstanceMap","updateTimeOut","isNoriComponent","$$typeof","keyFor","setCurrentHostTree","tree","getCurrentHostTree","cloneNode","isVDOMNode","hasOwnerComponent","STAGE_UNITIALIZED","STAGE_RENDERING","STAGE_UPDATING","STAGE_STEADY","currentStage","isInitialized","isRendering","isUpdating","isSteady","renderVDOM","renderComponentVDOM","enqueueUpdate","setTimeout","performUpdates","log","clearTimeout","updatedVDOMTree","updateComponentVDOM","renderComponentNode","instantiateNewComponent","renderChildFunctions","child","resultIndex","childResult","unshift","getNodeKeyOrID","instance","internalRender","removeComponentInstance","componentWillUnmount","existy","truthy","falsey","func","objectEmpty","promise","observable","subscribe","element","HTMLElement","DocumentFragment","nodeName","integer","NoriComponent","Is","tweens","internalState","state","isDirty","internalCurrent","internalVDOM","memoRenderResult","for","nextProps","nextState","shouldComponentUpdate","componentWillUpdate","Box","rest","capitalizeFirstLetter","toUpperCase","toTitleCase","txt","ellipses","removeTags","removeEntities","unescapeHTML","capitalize","underscore","dasherize","DOMtoCSSStyle","removeWhiteSpace","slugify","unslugify","_currentText","_defaultTextSet","_maleFirstNames","_femaleFirstNames","_lastNames","_punctuation","_months","_days","rNumber","oneOf","severalOf","num","sentence","text","title","paragraph","delim","getFirstName","getLastName","firstLastName","lastFirstName","date","month","wkday","monthNumber","monthName","monthDay","weekDayNumber","weekDay","year","guid","s4","module","exports","Lorem","baseElement","mode","lorem","TEXT","PARAGRAPH","TITLE","SENTENCE","DATE","FULLNAMEFL","red","Ticker","tickerID","setInterval","$updateTicker","counter","clearInterval","blue","Greeter","$onClick","$onRender","onOver","onOut","bordered","Lister","$onAddClick","$onRemoveClick","appContainerBG","require","appContainer","whiteBox","blackBox","Sfc","testBox"],"mappings":"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CnT,CAAD,CAAhB,CAFkB;AAExCmT,IAAAA,KAAK,CAACnT,CAAD,CAFmC;AAE9BmT,IAAAA,KAAK,CAACC,CAAD,CAFyB;AAG1C;;AACD,SAAOD,KAAP;AACD,CANM;;;;AAQA,IAAME,KAAK,GAAG,SAARA,KAAQ,CAAArN,GAAG;AAAA,4BAASxB,KAAK,CAACwB,GAAD,CAAL,CAAWwE,IAAX,EAAT;AAAA,CAAjB;;;;AAEA,IAAM8I,OAAO,GAAG,SAAVA,OAAU,CAAAzB,IAAI;AAAA,SAAI,GAAG0B,MAAH,CAAUzH,KAAV,CAAgB,EAAhB,EAAoB+F,IAApB,CAAJ;AAAA,CAApB;;;;;;;;;;AC3GP;AAEA,IAAI2B,KAAK,GAAG,CAAZ;;AAEO,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAC3BD,EAAAA,KAAK,GAAG,CAAR;AACD,CAFM;;;;AAIA,IAAME,SAAS,GAAG,SAAZA,SAAY,GAAM;AAC7B,8BAAqBF,KAAK,EAA1B;AACD,CAFM;;;;ACRP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnthBA;;AAEA,IAAIG,aAAa,GAAI,EAArB;AAAA,IACIC,cAAc,GAAG,EADrB;;AAGO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAjH,EAAE;AAAA,SAAI+G,aAAa,CAACpL,IAAd,CAAmBqE,EAAnB,CAAJ;AAAA,CAA1B;;;;AAEA,IAAMkH,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,CAAC;AAAA,SAAI,mBAAMJ,aAAN,CAAJ;AAAA,CAA1B;;;;AAEA,IAAMK,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;A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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","file":"js.00a46daa.map","sourceRoot":"../src","sourcesContent":["function memoize(fn) {\n  var cache = {};\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\nexport default memoize;\n","var unitlessKeys = {\n  animationIterationCount: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n};\n\nexport default unitlessKeys;\n","/* eslint-disable */\n// murmurhash2 via https://github.com/garycourt/murmurhash-js/blob/master/murmurhash2_gc.js\nfunction murmurhash2_32_gc(str) {\n  var l = str.length,\n      h = l ^ l,\n      i = 0,\n      k;\n\n  while (l >= 4) {\n    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;\n    k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n    k ^= k >>> 24;\n    k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n    h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16) ^ k;\n    l -= 4;\n    ++i;\n  }\n\n  switch (l) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff;\n      h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n  }\n\n  h ^= h >>> 13;\n  h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n  h ^= h >>> 15;\n  return (h >>> 0).toString(36);\n}\n\nexport default murmurhash2_32_gc;\n","function stylis_min (W) {\n  function M(d, c, e, h, a) {\n    for (var m = 0, b = 0, v = 0, n = 0, q, g, x = 0, K = 0, k, u = k = q = 0, l = 0, r = 0, I = 0, t = 0, B = e.length, J = B - 1, y, f = '', p = '', F = '', G = '', C; l < B;) {\n      g = e.charCodeAt(l);\n      l === J && 0 !== b + n + v + m && (0 !== b && (g = 47 === b ? 10 : 47), n = v = m = 0, B++, J++);\n\n      if (0 === b + n + v + m) {\n        if (l === J && (0 < r && (f = f.replace(N, '')), 0 < f.trim().length)) {\n          switch (g) {\n            case 32:\n            case 9:\n            case 59:\n            case 13:\n            case 10:\n              break;\n\n            default:\n              f += e.charAt(l);\n          }\n\n          g = 59;\n        }\n\n        switch (g) {\n          case 123:\n            f = f.trim();\n            q = f.charCodeAt(0);\n            k = 1;\n\n            for (t = ++l; l < B;) {\n              switch (g = e.charCodeAt(l)) {\n                case 123:\n                  k++;\n                  break;\n\n                case 125:\n                  k--;\n                  break;\n\n                case 47:\n                  switch (g = e.charCodeAt(l + 1)) {\n                    case 42:\n                    case 47:\n                      a: {\n                        for (u = l + 1; u < J; ++u) {\n                          switch (e.charCodeAt(u)) {\n                            case 47:\n                              if (42 === g && 42 === e.charCodeAt(u - 1) && l + 2 !== u) {\n                                l = u + 1;\n                                break a;\n                              }\n\n                              break;\n\n                            case 10:\n                              if (47 === g) {\n                                l = u + 1;\n                                break a;\n                              }\n\n                          }\n                        }\n\n                        l = u;\n                      }\n\n                  }\n\n                  break;\n\n                case 91:\n                  g++;\n\n                case 40:\n                  g++;\n\n                case 34:\n                case 39:\n                  for (; l++ < J && e.charCodeAt(l) !== g;) {\n                  }\n\n              }\n\n              if (0 === k) break;\n              l++;\n            }\n\n            k = e.substring(t, l);\n            0 === q && (q = (f = f.replace(ca, '').trim()).charCodeAt(0));\n\n            switch (q) {\n              case 64:\n                0 < r && (f = f.replace(N, ''));\n                g = f.charCodeAt(1);\n\n                switch (g) {\n                  case 100:\n                  case 109:\n                  case 115:\n                  case 45:\n                    r = c;\n                    break;\n\n                  default:\n                    r = O;\n                }\n\n                k = M(c, r, k, g, a + 1);\n                t = k.length;\n                0 < A && (r = X(O, f, I), C = H(3, k, r, c, D, z, t, g, a, h), f = r.join(''), void 0 !== C && 0 === (t = (k = C.trim()).length) && (g = 0, k = ''));\n                if (0 < t) switch (g) {\n                  case 115:\n                    f = f.replace(da, ea);\n\n                  case 100:\n                  case 109:\n                  case 45:\n                    k = f + '{' + k + '}';\n                    break;\n\n                  case 107:\n                    f = f.replace(fa, '$1 $2');\n                    k = f + '{' + k + '}';\n                    k = 1 === w || 2 === w && L('@' + k, 3) ? '@-webkit-' + k + '@' + k : '@' + k;\n                    break;\n\n                  default:\n                    k = f + k, 112 === h && (k = (p += k, ''));\n                } else k = '';\n                break;\n\n              default:\n                k = M(c, X(c, f, I), k, h, a + 1);\n            }\n\n            F += k;\n            k = I = r = u = q = 0;\n            f = '';\n            g = e.charCodeAt(++l);\n            break;\n\n          case 125:\n          case 59:\n            f = (0 < r ? f.replace(N, '') : f).trim();\n            if (1 < (t = f.length)) switch (0 === u && (q = f.charCodeAt(0), 45 === q || 96 < q && 123 > q) && (t = (f = f.replace(' ', ':')).length), 0 < A && void 0 !== (C = H(1, f, c, d, D, z, p.length, h, a, h)) && 0 === (t = (f = C.trim()).length) && (f = '\\x00\\x00'), q = f.charCodeAt(0), g = f.charCodeAt(1), q) {\n              case 0:\n                break;\n\n              case 64:\n                if (105 === g || 99 === g) {\n                  G += f + e.charAt(l);\n                  break;\n                }\n\n              default:\n                58 !== f.charCodeAt(t - 1) && (p += P(f, q, g, f.charCodeAt(2)));\n            }\n            I = r = u = q = 0;\n            f = '';\n            g = e.charCodeAt(++l);\n        }\n      }\n\n      switch (g) {\n        case 13:\n        case 10:\n          47 === b ? b = 0 : 0 === 1 + q && 107 !== h && 0 < f.length && (r = 1, f += '\\x00');\n          0 < A * Y && H(0, f, c, d, D, z, p.length, h, a, h);\n          z = 1;\n          D++;\n          break;\n\n        case 59:\n        case 125:\n          if (0 === b + n + v + m) {\n            z++;\n            break;\n          }\n\n        default:\n          z++;\n          y = e.charAt(l);\n\n          switch (g) {\n            case 9:\n            case 32:\n              if (0 === n + m + b) switch (x) {\n                case 44:\n                case 58:\n                case 9:\n                case 32:\n                  y = '';\n                  break;\n\n                default:\n                  32 !== g && (y = ' ');\n              }\n              break;\n\n            case 0:\n              y = '\\\\0';\n              break;\n\n            case 12:\n              y = '\\\\f';\n              break;\n\n            case 11:\n              y = '\\\\v';\n              break;\n\n            case 38:\n              0 === n + b + m && (r = I = 1, y = '\\f' + y);\n              break;\n\n            case 108:\n              if (0 === n + b + m + E && 0 < u) switch (l - u) {\n                case 2:\n                  112 === x && 58 === e.charCodeAt(l - 3) && (E = x);\n\n                case 8:\n                  111 === K && (E = K);\n              }\n              break;\n\n            case 58:\n              0 === n + b + m && (u = l);\n              break;\n\n            case 44:\n              0 === b + v + n + m && (r = 1, y += '\\r');\n              break;\n\n            case 34:\n            case 39:\n              0 === b && (n = n === g ? 0 : 0 === n ? g : n);\n              break;\n\n            case 91:\n              0 === n + b + v && m++;\n              break;\n\n            case 93:\n              0 === n + b + v && m--;\n              break;\n\n            case 41:\n              0 === n + b + m && v--;\n              break;\n\n            case 40:\n              if (0 === n + b + m) {\n                if (0 === q) switch (2 * x + 3 * K) {\n                  case 533:\n                    break;\n\n                  default:\n                    q = 1;\n                }\n                v++;\n              }\n\n              break;\n\n            case 64:\n              0 === b + v + n + m + u + k && (k = 1);\n              break;\n\n            case 42:\n            case 47:\n              if (!(0 < n + m + v)) switch (b) {\n                case 0:\n                  switch (2 * g + 3 * e.charCodeAt(l + 1)) {\n                    case 235:\n                      b = 47;\n                      break;\n\n                    case 220:\n                      t = l, b = 42;\n                  }\n\n                  break;\n\n                case 42:\n                  47 === g && 42 === x && t + 2 !== l && (33 === e.charCodeAt(t + 2) && (p += e.substring(t, l + 1)), y = '', b = 0);\n              }\n          }\n\n          0 === b && (f += y);\n      }\n\n      K = x;\n      x = g;\n      l++;\n    }\n\n    t = p.length;\n\n    if (0 < t) {\n      r = c;\n      if (0 < A && (C = H(2, p, r, d, D, z, t, h, a, h), void 0 !== C && 0 === (p = C).length)) return G + p + F;\n      p = r.join(',') + '{' + p + '}';\n\n      if (0 !== w * E) {\n        2 !== w || L(p, 2) || (E = 0);\n\n        switch (E) {\n          case 111:\n            p = p.replace(ha, ':-moz-$1') + p;\n            break;\n\n          case 112:\n            p = p.replace(Q, '::-webkit-input-$1') + p.replace(Q, '::-moz-$1') + p.replace(Q, ':-ms-input-$1') + p;\n        }\n\n        E = 0;\n      }\n    }\n\n    return G + p + F;\n  }\n\n  function X(d, c, e) {\n    var h = c.trim().split(ia);\n    c = h;\n    var a = h.length,\n        m = d.length;\n\n    switch (m) {\n      case 0:\n      case 1:\n        var b = 0;\n\n        for (d = 0 === m ? '' : d[0] + ' '; b < a; ++b) {\n          c[b] = Z(d, c[b], e, m).trim();\n        }\n\n        break;\n\n      default:\n        var v = b = 0;\n\n        for (c = []; b < a; ++b) {\n          for (var n = 0; n < m; ++n) {\n            c[v++] = Z(d[n] + ' ', h[b], e, m).trim();\n          }\n        }\n\n    }\n\n    return c;\n  }\n\n  function Z(d, c, e) {\n    var h = c.charCodeAt(0);\n    33 > h && (h = (c = c.trim()).charCodeAt(0));\n\n    switch (h) {\n      case 38:\n        return c.replace(F, '$1' + d.trim());\n\n      case 58:\n        return d.trim() + c.replace(F, '$1' + d.trim());\n\n      default:\n        if (0 < 1 * e && 0 < c.indexOf('\\f')) return c.replace(F, (58 === d.charCodeAt(0) ? '' : '$1') + d.trim());\n    }\n\n    return d + c;\n  }\n\n  function P(d, c, e, h) {\n    var a = d + ';',\n        m = 2 * c + 3 * e + 4 * h;\n\n    if (944 === m) {\n      d = a.indexOf(':', 9) + 1;\n      var b = a.substring(d, a.length - 1).trim();\n      b = a.substring(0, d).trim() + b + ';';\n      return 1 === w || 2 === w && L(b, 1) ? '-webkit-' + b + b : b;\n    }\n\n    if (0 === w || 2 === w && !L(a, 1)) return a;\n\n    switch (m) {\n      case 1015:\n        return 97 === a.charCodeAt(10) ? '-webkit-' + a + a : a;\n\n      case 951:\n        return 116 === a.charCodeAt(3) ? '-webkit-' + a + a : a;\n\n      case 963:\n        return 110 === a.charCodeAt(5) ? '-webkit-' + a + a : a;\n\n      case 1009:\n        if (100 !== a.charCodeAt(4)) break;\n\n      case 969:\n      case 942:\n        return '-webkit-' + a + a;\n\n      case 978:\n        return '-webkit-' + a + '-moz-' + a + a;\n\n      case 1019:\n      case 983:\n        return '-webkit-' + a + '-moz-' + a + '-ms-' + a + a;\n\n      case 883:\n        if (45 === a.charCodeAt(8)) return '-webkit-' + a + a;\n        if (0 < a.indexOf('image-set(', 11)) return a.replace(ja, '$1-webkit-$2') + a;\n        break;\n\n      case 932:\n        if (45 === a.charCodeAt(4)) switch (a.charCodeAt(5)) {\n          case 103:\n            return '-webkit-box-' + a.replace('-grow', '') + '-webkit-' + a + '-ms-' + a.replace('grow', 'positive') + a;\n\n          case 115:\n            return '-webkit-' + a + '-ms-' + a.replace('shrink', 'negative') + a;\n\n          case 98:\n            return '-webkit-' + a + '-ms-' + a.replace('basis', 'preferred-size') + a;\n        }\n        return '-webkit-' + a + '-ms-' + a + a;\n\n      case 964:\n        return '-webkit-' + a + '-ms-flex-' + a + a;\n\n      case 1023:\n        if (99 !== a.charCodeAt(8)) break;\n        b = a.substring(a.indexOf(':', 15)).replace('flex-', '').replace('space-between', 'justify');\n        return '-webkit-box-pack' + b + '-webkit-' + a + '-ms-flex-pack' + b + a;\n\n      case 1005:\n        return ka.test(a) ? a.replace(aa, ':-webkit-') + a.replace(aa, ':-moz-') + a : a;\n\n      case 1e3:\n        b = a.substring(13).trim();\n        c = b.indexOf('-') + 1;\n\n        switch (b.charCodeAt(0) + b.charCodeAt(c)) {\n          case 226:\n            b = a.replace(G, 'tb');\n            break;\n\n          case 232:\n            b = a.replace(G, 'tb-rl');\n            break;\n\n          case 220:\n            b = a.replace(G, 'lr');\n            break;\n\n          default:\n            return a;\n        }\n\n        return '-webkit-' + a + '-ms-' + b + a;\n\n      case 1017:\n        if (-1 === a.indexOf('sticky', 9)) break;\n\n      case 975:\n        c = (a = d).length - 10;\n        b = (33 === a.charCodeAt(c) ? a.substring(0, c) : a).substring(d.indexOf(':', 7) + 1).trim();\n\n        switch (m = b.charCodeAt(0) + (b.charCodeAt(7) | 0)) {\n          case 203:\n            if (111 > b.charCodeAt(8)) break;\n\n          case 115:\n            a = a.replace(b, '-webkit-' + b) + ';' + a;\n            break;\n\n          case 207:\n          case 102:\n            a = a.replace(b, '-webkit-' + (102 < m ? 'inline-' : '') + 'box') + ';' + a.replace(b, '-webkit-' + b) + ';' + a.replace(b, '-ms-' + b + 'box') + ';' + a;\n        }\n\n        return a + ';';\n\n      case 938:\n        if (45 === a.charCodeAt(5)) switch (a.charCodeAt(6)) {\n          case 105:\n            return b = a.replace('-items', ''), '-webkit-' + a + '-webkit-box-' + b + '-ms-flex-' + b + a;\n\n          case 115:\n            return '-webkit-' + a + '-ms-flex-item-' + a.replace(ba, '') + a;\n\n          default:\n            return '-webkit-' + a + '-ms-flex-line-pack' + a.replace('align-content', '').replace(ba, '') + a;\n        }\n        break;\n\n      case 973:\n      case 989:\n        if (45 !== a.charCodeAt(3) || 122 === a.charCodeAt(4)) break;\n\n      case 931:\n      case 953:\n        if (!0 === la.test(d)) return 115 === (b = d.substring(d.indexOf(':') + 1)).charCodeAt(0) ? P(d.replace('stretch', 'fill-available'), c, e, h).replace(':fill-available', ':stretch') : a.replace(b, '-webkit-' + b) + a.replace(b, '-moz-' + b.replace('fill-', '')) + a;\n        break;\n\n      case 962:\n        if (a = '-webkit-' + a + (102 === a.charCodeAt(5) ? '-ms-' + a : '') + a, 211 === e + h && 105 === a.charCodeAt(13) && 0 < a.indexOf('transform', 10)) return a.substring(0, a.indexOf(';', 27) + 1).replace(ma, '$1-webkit-$2') + a;\n    }\n\n    return a;\n  }\n\n  function L(d, c) {\n    var e = d.indexOf(1 === c ? ':' : '{'),\n        h = d.substring(0, 3 !== c ? e : 10);\n    e = d.substring(e + 1, d.length - 1);\n    return R(2 !== c ? h : h.replace(na, '$1'), e, c);\n  }\n\n  function ea(d, c) {\n    var e = P(c, c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2));\n    return e !== c + ';' ? e.replace(oa, ' or ($1)').substring(4) : '(' + c + ')';\n  }\n\n  function H(d, c, e, h, a, m, b, v, n, q) {\n    for (var g = 0, x = c, w; g < A; ++g) {\n      switch (w = S[g].call(B, d, x, e, h, a, m, b, v, n, q)) {\n        case void 0:\n        case !1:\n        case !0:\n        case null:\n          break;\n\n        default:\n          x = w;\n      }\n    }\n\n    if (x !== c) return x;\n  }\n\n  function T(d) {\n    switch (d) {\n      case void 0:\n      case null:\n        A = S.length = 0;\n        break;\n\n      default:\n        switch (d.constructor) {\n          case Array:\n            for (var c = 0, e = d.length; c < e; ++c) {\n              T(d[c]);\n            }\n\n            break;\n\n          case Function:\n            S[A++] = d;\n            break;\n\n          case Boolean:\n            Y = !!d | 0;\n        }\n\n    }\n\n    return T;\n  }\n\n  function U(d) {\n    d = d.prefix;\n    void 0 !== d && (R = null, d ? 'function' !== typeof d ? w = 1 : (w = 2, R = d) : w = 0);\n    return U;\n  }\n\n  function B(d, c) {\n    var e = d;\n    33 > e.charCodeAt(0) && (e = e.trim());\n    V = e;\n    e = [V];\n\n    if (0 < A) {\n      var h = H(-1, c, e, e, D, z, 0, 0, 0, 0);\n      void 0 !== h && 'string' === typeof h && (c = h);\n    }\n\n    var a = M(O, e, c, 0, 0);\n    0 < A && (h = H(-2, a, e, e, D, z, a.length, 0, 0, 0), void 0 !== h && (a = h));\n    V = '';\n    E = 0;\n    z = D = 1;\n    return a;\n  }\n\n  var ca = /^\\0+/g,\n      N = /[\\0\\r\\f]/g,\n      aa = /: */g,\n      ka = /zoo|gra/,\n      ma = /([,: ])(transform)/g,\n      ia = /,\\r+?/g,\n      F = /([\\t\\r\\n ])*\\f?&/g,\n      fa = /@(k\\w+)\\s*(\\S*)\\s*/,\n      Q = /::(place)/g,\n      ha = /:(read-only)/g,\n      G = /[svh]\\w+-[tblr]{2}/,\n      da = /\\(\\s*(.*)\\s*\\)/g,\n      oa = /([\\s\\S]*?);/g,\n      ba = /-self|flex-/g,\n      na = /[^]*?(:[rp][el]a[\\w-]+)[^]*/,\n      la = /stretch|:\\s*\\w+\\-(?:conte|avail)/,\n      ja = /([^-])(image-set\\()/,\n      z = 1,\n      D = 1,\n      E = 0,\n      w = 1,\n      O = [],\n      S = [],\n      A = 0,\n      R = null,\n      Y = 0,\n      V = '';\n  B.use = T;\n  B.set = U;\n  void 0 !== W && U(W);\n  return B;\n}\n\nexport default stylis_min;\n","(function (factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? (module['exports'] = factory()) :\n\t\ttypeof define === 'function' && define['amd'] ? define(factory()) :\n\t\t\t(window['stylisRuleSheet'] = factory())\n}(function () {\n\n\t'use strict'\n\n\treturn function (insertRule) {\n\t\tvar delimiter = '/*|*/'\n\t\tvar needle = delimiter+'}'\n\n\t\tfunction toSheet (block) {\n\t\t\tif (block)\n\t\t\t\ttry {\n\t\t\t\t\tinsertRule(block + '}')\n\t\t\t\t} catch (e) {}\n\t\t}\n\n\t\treturn function ruleSheet (context, content, selectors, parents, line, column, length, ns, depth, at) {\n\t\t\tswitch (context) {\n\t\t\t\t// property\n\t\t\t\tcase 1:\n\t\t\t\t\t// @import\n\t\t\t\t\tif (depth === 0 && content.charCodeAt(0) === 64)\n\t\t\t\t\t\treturn insertRule(content+';'), ''\n\t\t\t\t\tbreak\n\t\t\t\t// selector\n\t\t\t\tcase 2:\n\t\t\t\t\tif (ns === 0)\n\t\t\t\t\t\treturn content + delimiter\n\t\t\t\t\tbreak\n\t\t\t\t// at-rule\n\t\t\t\tcase 3:\n\t\t\t\t\tswitch (ns) {\n\t\t\t\t\t\t// @font-face, @page\n\t\t\t\t\t\tcase 102:\n\t\t\t\t\t\tcase 112:\n\t\t\t\t\t\t\treturn insertRule(selectors[0]+content), ''\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn content + (at === 0 ? delimiter : '')\n\t\t\t\t\t}\n\t\t\t\tcase -2:\n\t\t\t\t\tcontent.split(needle).forEach(toSheet)\n\t\t\t}\n\t\t}\n\t}\n}))\n","import memoize from '@emotion/memoize';\nimport unitless from '@emotion/unitless';\nimport hashString from '@emotion/hash';\nimport Stylis from '@emotion/stylis';\nimport stylisRuleSheet from 'stylis-rule-sheet';\n\nvar hyphenateRegex = /[A-Z]|^ms/g;\nvar processStyleName = memoize(function (styleName) {\n  return styleName.replace(hyphenateRegex, '-$&').toLowerCase();\n});\nvar processStyleValue = function processStyleValue(key, value) {\n  if (value == null || typeof value === 'boolean') {\n    return '';\n  }\n\n  if (unitless[key] !== 1 && key.charCodeAt(1) !== 45 && // custom properties\n  !isNaN(value) && value !== 0) {\n    return value + 'px';\n  }\n\n  return value;\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  var contentValuePattern = /(attr|calc|counters?|url)\\(/;\n  var contentValues = ['normal', 'none', 'counter', 'open-quote', 'close-quote', 'no-open-quote', 'no-close-quote', 'initial', 'inherit', 'unset'];\n  var oldProcessStyleValue = processStyleValue;\n\n  processStyleValue = function processStyleValue(key, value) {\n    if (key === 'content') {\n      if (typeof value !== 'string' || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '\"' && value.charAt(0) !== \"'\")) {\n        console.error(\"You seem to be using a value for 'content' without quotes, try replacing it with `content: '\\\"\" + value + \"\\\"'`\");\n      }\n    }\n\n    return oldProcessStyleValue(key, value);\n  };\n}\n\nvar classnames = function classnames(args) {\n  var len = args.length;\n  var i = 0;\n  var cls = '';\n\n  for (; i < len; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'function':\n        if (process.env.NODE_ENV !== 'production') {\n          console.error('Passing functions to cx is deprecated and will be removed in the next major version of Emotion.\\n' + 'Please call the function before passing it to cx.');\n        }\n\n        toAdd = classnames([arg()]);\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\nvar isBrowser = typeof document !== 'undefined';\n\n/*\n\nhigh performance StyleSheet for css-in-js systems\n\n- uses multiple style tags behind the scenes for millions of rules\n- uses `insertRule` for appending in production for *much* faster performance\n- 'polyfills' on server side\n\n// usage\n\nimport StyleSheet from 'glamor/lib/sheet'\nlet styleSheet = new StyleSheet()\n\nstyleSheet.inject()\n- 'injects' the stylesheet into the page (or into memory if on server)\n\nstyleSheet.insert('#box { border: 1px solid red; }')\n- appends a css rule into the stylesheet\n\nstyleSheet.flush()\n- empties the stylesheet of all its contents\n\n*/\n// $FlowFixMe\nfunction sheetForTag(tag) {\n  if (tag.sheet) {\n    // $FlowFixMe\n    return tag.sheet;\n  } // this weirdness brought to you by firefox\n\n\n  for (var i = 0; i < document.styleSheets.length; i++) {\n    if (document.styleSheets[i].ownerNode === tag) {\n      // $FlowFixMe\n      return document.styleSheets[i];\n    }\n  }\n}\n\nfunction makeStyleTag(opts) {\n  var tag = document.createElement('style');\n  tag.setAttribute('data-emotion', opts.key || '');\n\n  if (opts.nonce !== undefined) {\n    tag.setAttribute('nonce', opts.nonce);\n  }\n\n  tag.appendChild(document.createTextNode('')) // $FlowFixMe\n  ;\n  (opts.container !== undefined ? opts.container : document.head).appendChild(tag);\n  return tag;\n}\n\nvar StyleSheet =\n/*#__PURE__*/\nfunction () {\n  function StyleSheet(options) {\n    this.isSpeedy = process.env.NODE_ENV === 'production'; // the big drawback here is that the css won't be editable in devtools\n\n    this.tags = [];\n    this.ctr = 0;\n    this.opts = options;\n  }\n\n  var _proto = StyleSheet.prototype;\n\n  _proto.inject = function inject() {\n    if (this.injected) {\n      throw new Error('already injected!');\n    }\n\n    this.tags[0] = makeStyleTag(this.opts);\n    this.injected = true;\n  };\n\n  _proto.speedy = function speedy(bool) {\n    if (this.ctr !== 0) {\n      // cannot change speedy mode after inserting any rule to sheet. Either call speedy(${bool}) earlier in your app, or call flush() before speedy(${bool})\n      throw new Error(\"cannot change speedy now\");\n    }\n\n    this.isSpeedy = !!bool;\n  };\n\n  _proto.insert = function insert(rule, sourceMap) {\n    // this is the ultrafast version, works across browsers\n    if (this.isSpeedy) {\n      var tag = this.tags[this.tags.length - 1];\n      var sheet = sheetForTag(tag);\n\n      try {\n        sheet.insertRule(rule, sheet.cssRules.length);\n      } catch (e) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn('illegal rule', rule); // eslint-disable-line no-console\n        }\n      }\n    } else {\n      var _tag = makeStyleTag(this.opts);\n\n      this.tags.push(_tag);\n\n      _tag.appendChild(document.createTextNode(rule + (sourceMap || '')));\n    }\n\n    this.ctr++;\n\n    if (this.ctr % 65000 === 0) {\n      this.tags.push(makeStyleTag(this.opts));\n    }\n  };\n\n  _proto.flush = function flush() {\n    // $FlowFixMe\n    this.tags.forEach(function (tag) {\n      return tag.parentNode.removeChild(tag);\n    });\n    this.tags = [];\n    this.ctr = 0; // todo - look for remnants in document.styleSheets\n\n    this.injected = false;\n  };\n\n  return StyleSheet;\n}();\n\nfunction createEmotion(context, options) {\n  if (context.__SECRET_EMOTION__ !== undefined) {\n    return context.__SECRET_EMOTION__;\n  }\n\n  if (options === undefined) options = {};\n  var key = options.key || 'css';\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (/[^a-z-]/.test(key)) {\n      throw new Error(\"Emotion key must only contain lower case alphabetical characters and - but \\\"\" + key + \"\\\" was passed\");\n    }\n  }\n\n  var current;\n\n  function insertRule(rule) {\n    current += rule;\n\n    if (isBrowser) {\n      sheet.insert(rule, currentSourceMap);\n    }\n  }\n\n  var insertionPlugin = stylisRuleSheet(insertRule);\n  var stylisOptions;\n\n  if (options.prefix !== undefined) {\n    stylisOptions = {\n      prefix: options.prefix\n    };\n  }\n\n  var caches = {\n    registered: {},\n    inserted: {},\n    nonce: options.nonce,\n    key: key\n  };\n  var sheet = new StyleSheet(options);\n\n  if (isBrowser) {\n    // 🚀\n    sheet.inject();\n  }\n\n  var stylis = new Stylis(stylisOptions);\n  stylis.use(options.stylisPlugins)(insertionPlugin);\n  var currentSourceMap = '';\n\n  function handleInterpolation(interpolation, couldBeSelectorInterpolation) {\n    if (interpolation == null) {\n      return '';\n    }\n\n    switch (typeof interpolation) {\n      case 'boolean':\n        return '';\n\n      case 'function':\n        if (interpolation.__emotion_styles !== undefined) {\n          var selector = interpolation.toString();\n\n          if (selector === 'NO_COMPONENT_SELECTOR' && process.env.NODE_ENV !== 'production') {\n            throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');\n          }\n\n          return selector;\n        }\n\n        if (this === undefined && process.env.NODE_ENV !== 'production') {\n          console.error('Interpolating functions in css calls is deprecated and will be removed in the next major version of Emotion.\\n' + 'If you want to have a css call based on props, create a function that returns a css call like this\\n' + 'let dynamicStyle = (props) => css`color: ${props.color}`\\n' + 'It can be called directly with props or interpolated in a styled call like this\\n' + \"let SomeComponent = styled('div')`${dynamicStyle}`\");\n        }\n\n        return handleInterpolation.call(this, this === undefined ? interpolation() : // $FlowFixMe\n        interpolation(this.mergedProps, this.context), couldBeSelectorInterpolation);\n\n      case 'object':\n        return createStringFromObject.call(this, interpolation);\n\n      default:\n        var cached = caches.registered[interpolation];\n        return couldBeSelectorInterpolation === false && cached !== undefined ? cached : interpolation;\n    }\n  }\n\n  var objectToStringCache = new WeakMap();\n\n  function createStringFromObject(obj) {\n    if (objectToStringCache.has(obj)) {\n      // $FlowFixMe\n      return objectToStringCache.get(obj);\n    }\n\n    var string = '';\n\n    if (Array.isArray(obj)) {\n      obj.forEach(function (interpolation) {\n        string += handleInterpolation.call(this, interpolation, false);\n      }, this);\n    } else {\n      Object.keys(obj).forEach(function (key) {\n        if (typeof obj[key] !== 'object') {\n          if (caches.registered[obj[key]] !== undefined) {\n            string += key + \"{\" + caches.registered[obj[key]] + \"}\";\n          } else {\n            string += processStyleName(key) + \":\" + processStyleValue(key, obj[key]) + \";\";\n          }\n        } else {\n          if (key === 'NO_COMPONENT_SELECTOR' && process.env.NODE_ENV !== 'production') {\n            throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');\n          }\n\n          if (Array.isArray(obj[key]) && typeof obj[key][0] === 'string' && caches.registered[obj[key][0]] === undefined) {\n            obj[key].forEach(function (value) {\n              string += processStyleName(key) + \":\" + processStyleValue(key, value) + \";\";\n            });\n          } else {\n            string += key + \"{\" + handleInterpolation.call(this, obj[key], false) + \"}\";\n          }\n        }\n      }, this);\n    }\n\n    objectToStringCache.set(obj, string);\n    return string;\n  }\n\n  var name;\n  var stylesWithLabel;\n  var labelPattern = /label:\\s*([^\\s;\\n{]+)\\s*;/g;\n\n  var createClassName = function createClassName(styles, identifierName) {\n    return hashString(styles + identifierName) + identifierName;\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    var oldCreateClassName = createClassName;\n    var sourceMappingUrlPattern = /\\/\\*#\\ssourceMappingURL=data:application\\/json;\\S+\\s+\\*\\//g;\n\n    createClassName = function createClassName(styles, identifierName) {\n      return oldCreateClassName(styles.replace(sourceMappingUrlPattern, function (sourceMap) {\n        currentSourceMap = sourceMap;\n        return '';\n      }), identifierName);\n    };\n  }\n\n  var createStyles = function createStyles(strings) {\n    var stringMode = true;\n    var styles = '';\n    var identifierName = '';\n\n    if (strings == null || strings.raw === undefined) {\n      stringMode = false;\n      styles += handleInterpolation.call(this, strings, false);\n    } else {\n      styles += strings[0];\n    }\n\n    for (var _len = arguments.length, interpolations = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      interpolations[_key - 1] = arguments[_key];\n    }\n\n    interpolations.forEach(function (interpolation, i) {\n      styles += handleInterpolation.call(this, interpolation, styles.charCodeAt(styles.length - 1) === 46 // .\n      );\n\n      if (stringMode === true && strings[i + 1] !== undefined) {\n        styles += strings[i + 1];\n      }\n    }, this);\n    stylesWithLabel = styles;\n    styles = styles.replace(labelPattern, function (match, p1) {\n      identifierName += \"-\" + p1;\n      return '';\n    });\n    name = createClassName(styles, identifierName);\n    return styles;\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    var oldStylis = stylis;\n\n    stylis = function stylis(selector, styles) {\n      oldStylis(selector, styles);\n      currentSourceMap = '';\n    };\n  }\n\n  function insert(scope, styles) {\n    if (caches.inserted[name] === undefined) {\n      current = '';\n      stylis(scope, styles);\n      caches.inserted[name] = current;\n    }\n  }\n\n  var css = function css() {\n    var styles = createStyles.apply(this, arguments);\n    var selector = key + \"-\" + name;\n\n    if (caches.registered[selector] === undefined) {\n      caches.registered[selector] = stylesWithLabel;\n    }\n\n    insert(\".\" + selector, styles);\n    return selector;\n  };\n\n  var keyframes = function keyframes() {\n    var styles = createStyles.apply(this, arguments);\n    var animation = \"animation-\" + name;\n    insert('', \"@keyframes \" + animation + \"{\" + styles + \"}\");\n    return animation;\n  };\n\n  var injectGlobal = function injectGlobal() {\n    var styles = createStyles.apply(this, arguments);\n    insert('', styles);\n  };\n\n  function getRegisteredStyles(registeredStyles, classNames) {\n    var rawClassName = '';\n    classNames.split(' ').forEach(function (className) {\n      if (caches.registered[className] !== undefined) {\n        registeredStyles.push(className);\n      } else {\n        rawClassName += className + \" \";\n      }\n    });\n    return rawClassName;\n  }\n\n  function merge(className, sourceMap) {\n    var registeredStyles = [];\n    var rawClassName = getRegisteredStyles(registeredStyles, className);\n\n    if (registeredStyles.length < 2) {\n      return className;\n    }\n\n    return rawClassName + css(registeredStyles, sourceMap);\n  }\n\n  function cx() {\n    for (var _len2 = arguments.length, classNames = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      classNames[_key2] = arguments[_key2];\n    }\n\n    return merge(classnames(classNames));\n  }\n\n  function hydrateSingleId(id) {\n    caches.inserted[id] = true;\n  }\n\n  function hydrate(ids) {\n    ids.forEach(hydrateSingleId);\n  }\n\n  function flush() {\n    if (isBrowser) {\n      sheet.flush();\n      sheet.inject();\n    }\n\n    caches.inserted = {};\n    caches.registered = {};\n  }\n\n  if (isBrowser) {\n    var chunks = document.querySelectorAll(\"[data-emotion-\" + key + \"]\");\n    Array.prototype.forEach.call(chunks, function (node) {\n      // $FlowFixMe\n      sheet.tags[0].parentNode.insertBefore(node, sheet.tags[0]); // $FlowFixMe\n\n      node.getAttribute(\"data-emotion-\" + key).split(' ').forEach(hydrateSingleId);\n    });\n  }\n\n  var emotion = {\n    flush: flush,\n    hydrate: hydrate,\n    cx: cx,\n    merge: merge,\n    getRegisteredStyles: getRegisteredStyles,\n    injectGlobal: injectGlobal,\n    keyframes: keyframes,\n    css: css,\n    sheet: sheet,\n    caches: caches\n  };\n  context.__SECRET_EMOTION__ = emotion;\n  return emotion;\n}\n\nexport default createEmotion;\n","import createEmotion from 'create-emotion';\n\nvar context = typeof global !== 'undefined' ? global : {};\n\nvar _createEmotion = createEmotion(context),\n    flush = _createEmotion.flush,\n    hydrate = _createEmotion.hydrate,\n    cx = _createEmotion.cx,\n    merge = _createEmotion.merge,\n    getRegisteredStyles = _createEmotion.getRegisteredStyles,\n    injectGlobal = _createEmotion.injectGlobal,\n    keyframes = _createEmotion.keyframes,\n    css = _createEmotion.css,\n    sheet = _createEmotion.sheet,\n    caches = _createEmotion.caches;\n\nexport { flush, hydrate, cx, merge, getRegisteredStyles, injectGlobal, keyframes, css, sheet, caches };\n","export const modularScale = {\n  ms10  : '11.089rem',\n  ms9   : '8.755rem',\n  ms8   : '6.854rem',\n  ms7   : '5.411rem',\n  ms6   : '4.236rem',\n  ms5   : '3.344rem',\n  ms4   : '2.618rem',\n  ms3   : '2.067rem',\n  ms2   : '1.618rem',\n  ms1   : '1.277rem',\n  ms0   : '1rem',\n  'ms-0': '0.723rem',\n  'ms-1': '0.618rem',\n  'ms-2': '0.382rem',\n  'ms-3': '0.236rem',\n  'ms-4': '0.146rem'\n};\n\n// 16px = 1rem, modular scale 0 entry\nexport const BASE_MEASURE = 1;\n\nexport const theme = {\n  colors   : {\n    black         : '#000',\n    'near-black'  : '#111',\n    'dark-gray'   : '#333',\n    'mid-gray'    : '#555',\n    gray          : ' #777',\n    silver        : '#999',\n    'light-silver': '#aaa',\n    'moon-gray'   : '#ccc',\n    'light-gray'  : '#eee',\n    'near-white'  : '#f4f4f4',\n    white         : '#fff',\n    transparent   : 'transparent',\n    blacks        : [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites        : [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ]\n  },\n  //https://webgradients.com/\n  gradients: {\n    'warm-flame'      : 'linear-gradient(45deg, #ff9a9e 0%, #fad0c4 99%, #fad0c4 100%)',\n    'sunny-morning'   : 'linear-gradient(120deg, #f6d365 0%, #fda085 100%)',\n    'dusty-grass'     : 'linear-gradient(120deg, #d4fc79 0%, #96e6a1 100%)',\n    'winter-neva'     : 'linear-gradient(120deg, #a1c4fd 0%, #c2e9fb 100%)',\n    'tempting-azue'   : 'linear-gradient(120deg, #84fab0 0%, #8fd3f4 100%)',\n    'heavy-rain'      : 'linear-gradient(to top, #cfd9df 0%, #e2ebf0 100%)',\n    'cloudy-knoxville': 'linear-gradient(120deg, #fdfbfb 0%, #ebedee 100%)',\n    'ripe-malinka'    : 'linear-gradient(120deg, #f093fb 0%, #f5576c 100%)',\n    'malibu-beach'    : 'linear-gradient(to right, #4facfe 0%, #00f2fe 100%)',\n    'saint-petersburg': 'linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%)',\n    'strong-bliss'    : 'linear-gradient(to right, #f78ca0 0%, #f9748f 19%, #fd868c 60%, #fe9a8b 100%)',\n    'above-clouds'    : 'linear-gradient(to left, #BDBBBE 0%, #9D9EA3 100%), radial-gradient(88% 271%, rgba(255, 255, 255, 0.25) 0%, rgba(254, 254, 254, 0.25) 1%, rgba(0, 0, 0, 0.25) 100%), radial-gradient(50% 100%, rgba(255, 255, 255, 0.30) 0%, rgba(0, 0, 0, 0.30) 100%)',\n    'premium-dark'    : 'linear-gradient(to right, #434343 0%, black 100%)',\n    'premium-white'   : 'linear-gradient(to top, #d5d4d0 0%, #d5d4d0 1%, #eeeeec 31%, #efeeec 75%, #e9e9e7 100%)'\n  },\n  space    : [BASE_MEASURE * 0.25, BASE_MEASURE * 0.5, BASE_MEASURE * 0.75, BASE_MEASURE, BASE_MEASURE * 1.25, BASE_MEASURE * 1.5, BASE_MEASURE * 2, BASE_MEASURE * 3],\n  baseUnit : 'rem',\n  fonts    : {\n    sansSerif: '\\'Helvetica Neue\\', Helvetica, Arial, sans-serif'\n  },\n  shadows  : {\n    textLight    : '1px 1px 0 rgba(255,255,255,.75)',\n    textDark     : '1px 1px 0 rgba(0,0,0,.25)',\n    textDarkSmall: '1px 1px 3px rgba(0,0,0,.25)',\n    textEmboss   :\n      '-1px -1px 0 rgba(0, 0, 0, .15), 1px 1px 0 rgba(255, 255, 255, .1)',\n    dropShadow   : {\n      xs: '0 1px 2px rgba(0,0,0,0.075)',\n      sm: '0 2px 4px rgba(0,0,0,0.05), 2px 6px 8px -5px rgba(0,0,0,0.15)',\n      m : '0 2px 4px rgba(0,0,0,0.05), 4px 8px 15px -7px rgba(0,0,0,0.1), 4px 8px 20px rgba(0,0,0,0.10)',\n      lg: '0 1px  6px  rgba(0, 0, 0, .1), 0 8px  8px  rgba(0, 0, 0, .05), 4px 23px 40px -15px rgba(0,0,0,0.15), 8px 30px 64px rgba(0, 0, 0, .1)',\n      xl: '0 1px  6px  rgba(0, 0, 0, .05), 0 8px  8px  rgba(0, 0, 0, .1), 0 16px 16px rgba(0, 0, 0, .1), 4px 32px 32px rgba(0, 0, 0, .05), 8px 50px 64px rgba(0, 0, 0, .15)',\n      bigsoft: '0 16px 16px -20px rgba(0, 0, 0, .05), 4px 32px 64px -50px rgba(0, 0, 0, .05), 8px 70px 128px -20px rgba(0, 0, 0, .2)'\n    }\n  },\n  radii    : ['3px', modularScale.ms0],\n  fontSizes: [modularScale['ms-1'], '0.8rem', modularScale.ms0, modularScale.ms2],\n  animation: {\n    vfast: 0.1,\n    fast: 0.2,\n    default: 0.3,\n    slow: 0.4,\n    vslow: 0.5\n  }\n};","import {injectGlobal} from 'emotion';\nimport {modularScale, theme} from './Theme';\n\n// normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css\n// + Customs\ninjectGlobal`\n  @import url('https://fonts.googleapis.com/css?family=Abel');\n\n  *, *::before, *::after {\n    box-sizing: border-box;\n  }\n  html {\n    -ms-text-size-adjust: 100%;\n    -moz-text-size-adjust: 100%;\n    -webkit-text-size-adjust: none;\n    min-height: 100vh;\n    line-height: ${modularScale.ms2};\n    font-size: 100%;\n  }\n  body {\n    margin: 0;\n    padding: 0;\n    min-height: 100vh;\n    font-size: ${theme.fontSizes[2]};\n    font-family: 'Abel', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  }\n  h1 {\n    font-size: 2em;\n    margin: 0.67em 0;\n  }\n  hr {\n    box-sizing: content-box;\n    height: 0;\n    overflow: visible;\n  }\n  pre {\n    font-family: monospace, monospace;\n    font-size: 1em;\n  }\n  a {\n    background-color: transparent;\n  }\n  abbr[title] {\n    border-bottom: none; \n    text-decoration: underline; \n    text-decoration: underline dotted; \n  }\n  b,\n  strong {\n    font-weight: bolder;\n  }\n  code,\n  kbd,\n  samp {\n    font-family: monospace, monospace; \n    font-size: 1em; \n  }\n  small {\n    font-size: 80%;\n  }\n  sub,\n  sup {\n    font-size: 75%;\n    line-height: 0;\n    position: relative;\n    vertical-align: baseline;\n  }\n  sub {\n    bottom: -0.25em;\n  }\n  sup {\n    top: -0.5em;\n  }\n  img {\n    border-style: none;\n  }\n  button,\n  input,\n  optgroup,\n  select,\n  textarea {\n    font-family: inherit; \n    font-size: 100%; \n    line-height: 1.15; \n    margin: 0; \n  }\n  button,\n  input { \n    overflow: visible;\n  }\n  button,\n  select { \n    text-transform: none;\n  }\n  button,\n  [type=\"button\"],\n  [type=\"reset\"],\n  [type=\"submit\"] {\n    -webkit-appearance: button;\n  }\n  button::-moz-focus-inner,\n  [type=\"button\"]::-moz-focus-inner,\n  [type=\"reset\"]::-moz-focus-inner,\n  [type=\"submit\"]::-moz-focus-inner {\n    border-style: none;\n    padding: 0;\n  }\n  button:-moz-focusring,\n  [type=\"button\"]:-moz-focusring,\n  [type=\"reset\"]:-moz-focusring,\n  [type=\"submit\"]:-moz-focusring {\n    outline: 1px dotted ButtonText;\n  }\n  fieldset {\n    padding: 0.35em 0.75em 0.625em;\n  }\n  legend {\n    box-sizing: border-box; \n    color: inherit; \n    display: table; \n    max-width: 100%; \n    padding: 0; \n    white-space: normal; \n  }\n  progress {\n    vertical-align: baseline;\n  }\n  textarea {\n    overflow: auto;\n  }\n  [type=\"checkbox\"],\n  [type=\"radio\"] {\n    box-sizing: border-box; \n    padding: 0; \n  }\n  [type=\"number\"]::-webkit-inner-spin-button,\n  [type=\"number\"]::-webkit-outer-spin-button {\n    height: auto;\n  }\n  [type=\"search\"] {\n    -webkit-appearance: textfield; \n    outline-offset: -2px; \n  }\n  [type=\"search\"]::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n  ::-webkit-file-upload-button {\n    -webkit-appearance: button; \n    font: inherit; \n  }\n  details {\n    display: block;\n  }\n  summary {\n    display: list-item;\n  }\n  template {\n    display: none;\n  }\n  [hidden] {\n    display: none;\n  }\n  p, li {\n    margin-top: 0;\n  }\n  p:last-of-type, li:last-of-type  {\n    margin-bottom: 0;\n  }\n`;","export const isInteger = (str) => {\n  return (/^-?\\d+$/.test(str));\n};\n\nexport const rndNumber = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nexport const clamp = (val, min, max) => {\n  return Math.max(min, Math.min(max, val));\n};\n\nexport const isBetween = (val, min, max) => {\n  return val > min && val < max;\n};\n\nexport const distanceTL = (point1, point2) => {\n  var xd = (point2.left - point1.left),\n      yd = (point2.top - point1.top);\n  return Math.sqrt((xd * xd) + (yd * yd));\n};","import {rndNumber} from './NumberUtils'\n\nexport const arrify = (a) => {\n  return Array.prototype.slice.call(a, 0);\n};\n\n// Reference: http://jhusain.github.io/learnrx/index.html\nexport const mergeAll = () => {\n  let results = [];\n\n  this.forEach(function (subArr) {\n    subArr.forEach(function (elm) {\n      results.push(elm);\n    });\n  });\n\n  return results;\n};\n\n// http://www.shamasis.net/2009/09/fast-algorithm-to-find-unique-items-in-javascript-array/\nexport const unique = (arry) => {\n  let o = {},\n      i,\n      l = arry.length,\n      r = [];\n  for (i = 0; i < l; i += 1) {\n    o[arry[i]] = arry[i];\n  }\n  for (i in o) {\n    r.push(o[i]);\n  }\n  return r;\n};\n\nexport const removeIndex = (arr, idx) => {\n  return arr.splice(idx, 1);\n};\n\nexport const removeItem = (arr, item) => {\n  let idx = arr.indexOf(item);\n  if (idx > -1) {\n    arr.splice(idx, 1);\n  }\n};\n\nexport const rndElement = (arry) => {\n  return arry[rndNumber(0, arry.length - 1)];\n};\n\nexport const getRandomSetOfElements = (srcarry, max) => {\n  let arry = [],\n      i    = 0,\n      len  = rndNumber(1, max);\n\n  for (; i < len; i++) {\n    arry.push(this.rndElement(srcarry));\n  }\n\n  return arry;\n};\n\nexport const getDifferences = (arr1, arr2) => {\n  let dif = [];\n\n  arr1.forEach(function (value) {\n    let present = false,\n        i       = 0,\n        len     = arr2.length;\n\n    for (; i < len; i++) {\n      if (value === arr2[i]) {\n        present = true;\n        break;\n      }\n    }\n\n    if (!present) {\n      dif.push(value);\n    }\n\n  });\n\n  return dif;\n};\n\nexport const arryArryToArryObj = (src, keys) => {\n  return src.reduce((p, c) => {\n    var row = {};\n    keys.forEach((col, i) => {\n      row[col] = c[i];\n    });\n    p.push(row);\n    return p;\n  }, []);\n};\n\n//https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\nexport const shuffleArray = (array) => {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]]; // eslint-disable-line no-param-reassign\n  }\n  return array;\n};\n\nexport const range = len => ([...Array(len).keys()]);\n\nexport const flatten = arry => [].concat.apply([], arry);","//https://gist.githubusercontent.com/davidgilbertson/0377b00b31afc4ac7c9bbb9b8706cca7/raw/ff81c7332d8ec6725ec6749d7459268b82a821b6/elementIdCreator.js\n\nlet count = 1;\n\nexport const resetId = () => {\n  count = 1;\n};\n\nexport const getNextId = () => {\n  return `element-id-${count++}`;\n};","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.11';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n\n        return result;\n      }\n\n      if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n\n        return result;\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || isFunction(objValue)) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array == null ? 0 : array.length,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Gets the value at `key`, unless `key` is \"__proto__\".\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to get.\n     * @returns {*} Returns the property value.\n     */\n    function safeGet(object, key) {\n      if (key == '__proto__') {\n        return;\n      }\n\n      return object[key];\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n","import {clone} from 'lodash';\n\nlet didMountQueue  = [],\n    didUpdateQueue = [];\n\nexport const enqueueDidMount = id => didMountQueue.push(id);\n\nexport const getDidMountQueue = _ => clone(didMountQueue);\n\nexport const performDidMountQueue = () => {\n  didMountQueue.forEach(fn => fn());\n  didMountQueue = [];\n};\n\nexport const enqueueDidUpdate = id => didUpdateQueue.push(id);\n\nexport const getDidUpdateQueue = _ => clone(didUpdateQueue);\n\nexport const performDidUpdateQueue = map => {\n  didUpdateQueue.forEach(id => {\n    if (!map[id]) {\n      console.warn(`performDidUpdateQueue : Can't get component instance ${id}, it's been removed.`);\n    } else if (typeof map[id].componentDidUpdate === 'function') {\n      map[id].componentDidUpdate()\n    }\n  });\n  didUpdateQueue = [];\n};","export default function _isPlaceholder(a) {\n       return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}","import _isPlaceholder from './_isPlaceholder';\n\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}","import _curry1 from './internal/_curry1';\n\n/**\n * Returns a function that always returns the given value. Note that for\n * non-primitives the value returned is a reference to the original value.\n *\n * This function is known as `const`, `constant`, or `K` (for K combinator) in\n * other languages and libraries.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> (* -> a)\n * @param {*} val The value to wrap in a function\n * @return {Function} A Function :: * -> val.\n * @example\n *\n *      var t = R.always('Tee');\n *      t(); //=> 'Tee'\n */\nvar always = /*#__PURE__*/_curry1(function always(val) {\n  return function () {\n    return val;\n  };\n});\nexport default always;","import always from './always';\n\n/**\n * A function that always returns `false`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.always, R.T\n * @example\n *\n *      R.F(); //=> false\n */\nvar F = /*#__PURE__*/always(false);\nexport default F;","import always from './always';\n\n/**\n * A function that always returns `true`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.always, R.F\n * @example\n *\n *      R.T(); //=> true\n */\nvar T = /*#__PURE__*/always(true);\nexport default T;","/**\n * A special placeholder value used to specify \"gaps\" within curried functions,\n * allowing partial application of any combination of arguments, regardless of\n * their positions.\n *\n * If `g` is a curried ternary function and `_` is `R.__`, the following are\n * equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2, _)(1, 3)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @constant\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @example\n *\n *      var greet = R.replace('{name}', R.__, 'Hello, {name}!');\n *      greet('Alice'); //=> 'Hello, Alice!'\n */\nexport default { '@@functional/placeholder': true };","import _curry1 from './_curry1';\nimport _isPlaceholder from './_isPlaceholder';\n\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}","import _curry2 from './internal/_curry2';\n\n/**\n * Adds two values.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a\n * @param {Number} b\n * @return {Number}\n * @see R.subtract\n * @example\n *\n *      R.add(2, 3);       //=>  5\n *      R.add(7)(10);      //=> 17\n */\nvar add = /*#__PURE__*/_curry2(function add(a, b) {\n  return Number(a) + Number(b);\n});\nexport default add;","/**\n * Private `concat` function to merge two array-like objects.\n *\n * @private\n * @param {Array|Arguments} [set1=[]] An array-like object.\n * @param {Array|Arguments} [set2=[]] An array-like object.\n * @return {Array} A new, merged array.\n * @example\n *\n *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n */\nexport default function _concat(set1, set2) {\n  set1 = set1 || [];\n  set2 = set2 || [];\n  var idx;\n  var len1 = set1.length;\n  var len2 = set2.length;\n  var result = [];\n\n  idx = 0;\n  while (idx < len1) {\n    result[result.length] = set1[idx];\n    idx += 1;\n  }\n  idx = 0;\n  while (idx < len2) {\n    result[result.length] = set2[idx];\n    idx += 1;\n  }\n  return result;\n}","export default function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}","import _arity from './_arity';\nimport _isPlaceholder from './_isPlaceholder';\n\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n      combined[combinedIdx] = result;\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n      combinedIdx += 1;\n    }\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n}","import _arity from './internal/_arity';\nimport _curry1 from './internal/_curry1';\nimport _curry2 from './internal/_curry2';\nimport _curryN from './internal/_curryN';\n\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      var sumArgs = (...args) => R.sum(args);\n *\n *      var curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\nvar curryN = /*#__PURE__*/_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n  return _arity(length, _curryN(length, [], fn));\n});\nexport default curryN;","import _concat from './internal/_concat';\nimport _curry1 from './internal/_curry1';\nimport curryN from './curryN';\n\n/**\n * Creates a new list iteration function from an existing one by adding two new\n * parameters to its callback function: the current index, and the entire list.\n *\n * This would turn, for instance, [`R.map`](#map) function into one that\n * more closely resembles `Array.prototype.map`. Note that this will only work\n * for functions in which the iteration callback function is the first\n * parameter, and where the list is the last parameter. (This latter might be\n * unimportant if the list parameter is not used.)\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Function\n * @category List\n * @sig ((a ... -> b) ... -> [a] -> *) -> (a ..., Int, [a] -> b) ... -> [a] -> *)\n * @param {Function} fn A list iteration function that does not pass index or list to its callback\n * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n * @example\n *\n *      var mapIndexed = R.addIndex(R.map);\n *      mapIndexed((val, idx) => idx + '-' + val, ['f', 'o', 'o', 'b', 'a', 'r']);\n *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\n */\nvar addIndex = /*#__PURE__*/_curry1(function addIndex(fn) {\n  return curryN(fn.length, function () {\n    var idx = 0;\n    var origFn = arguments[0];\n    var list = arguments[arguments.length - 1];\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = function () {\n      var result = origFn.apply(this, _concat(arguments, [idx, list]));\n      idx += 1;\n      return result;\n    };\n    return fn.apply(this, args);\n  });\n});\nexport default addIndex;","import _curry1 from './_curry1';\nimport _curry2 from './_curry2';\nimport _isPlaceholder from './_isPlaceholder';\n\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n      case 1:\n        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        });\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _curry1(function (_c) {\n          return fn(a, b, _c);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n          return fn(_a, _b, c);\n        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b, c);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b, c);\n        }) : _isPlaceholder(c) ? _curry1(function (_c) {\n          return fn(a, b, _c);\n        }) : fn(a, b, c);\n    }\n  };\n}","import _concat from './internal/_concat';\nimport _curry3 from './internal/_curry3';\n\n/**\n * Applies a function to the value at the given index of an array, returning a\n * new copy of the array with the element at the given index replaced with the\n * result of the function application.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig (a -> a) -> Number -> [a] -> [a]\n * @param {Function} fn The function to apply.\n * @param {Number} idx The index.\n * @param {Array|Arguments} list An array-like object whose value\n *        at the supplied index will be replaced.\n * @return {Array} A copy of the supplied array-like object with\n *         the element at index `idx` replaced with the value\n *         returned by applying `fn` to the existing element.\n * @see R.update\n * @example\n *\n *      R.adjust(R.add(10), 1, [1, 2, 3]);     //=> [1, 12, 3]\n *      R.adjust(R.add(10))(1)([1, 2, 3]);     //=> [1, 12, 3]\n * @symb R.adjust(f, -1, [a, b]) = [a, f(b)]\n * @symb R.adjust(f, 0, [a, b]) = [f(a), b]\n */\nvar adjust = /*#__PURE__*/_curry3(function adjust(fn, idx, list) {\n  if (idx >= list.length || idx < -list.length) {\n    return list;\n  }\n  var start = idx < 0 ? list.length : 0;\n  var _idx = start + idx;\n  var _list = _concat(list);\n  _list[_idx] = fn(list[_idx]);\n  return _list;\n});\nexport default adjust;","/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nexport default Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};","export default function _isTransformer(obj) {\n  return typeof obj['@@transducer/step'] === 'function';\n}","import _isArray from './_isArray';\nimport _isTransformer from './_isTransformer';\n\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer [xf] to return a new transformer (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} xf transducer to initialize if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\nexport default function _dispatchable(methodNames, xf, fn) {\n  return function () {\n    if (arguments.length === 0) {\n      return fn();\n    }\n    var args = Array.prototype.slice.call(arguments, 0);\n    var obj = args.pop();\n    if (!_isArray(obj)) {\n      var idx = 0;\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, args);\n        }\n        idx += 1;\n      }\n      if (_isTransformer(obj)) {\n        var transducer = xf.apply(null, args);\n        return transducer(obj);\n      }\n    }\n    return fn.apply(this, arguments);\n  };\n}","export default function _reduced(x) {\n  return x && x['@@transducer/reduced'] ? x : {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}","export default {\n  init: function () {\n    return this.xf['@@transducer/init']();\n  },\n  result: function (result) {\n    return this.xf['@@transducer/result'](result);\n  }\n};","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XAll = /*#__PURE__*/function () {\n  function XAll(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.all = true;\n  }\n  XAll.prototype['@@transducer/init'] = _xfBase.init;\n  XAll.prototype['@@transducer/result'] = function (result) {\n    if (this.all) {\n      result = this.xf['@@transducer/step'](result, true);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XAll.prototype['@@transducer/step'] = function (result, input) {\n    if (!this.f(input)) {\n      this.all = false;\n      result = _reduced(this.xf['@@transducer/step'](result, false));\n    }\n    return result;\n  };\n\n  return XAll;\n}();\n\nvar _xall = /*#__PURE__*/_curry2(function _xall(f, xf) {\n  return new XAll(f, xf);\n});\nexport default _xall;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xall from './internal/_xall';\n\n/**\n * Returns `true` if all elements of the list match the predicate, `false` if\n * there are any that don't.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n *         otherwise.\n * @see R.any, R.none, R.transduce\n * @example\n *\n *      var equals3 = R.equals(3);\n *      R.all(equals3)([3, 3, 3, 3]); //=> true\n *      R.all(equals3)([3, 3, 1, 3]); //=> false\n */\nvar all = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['all'], _xall, function all(fn, list) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (!fn(list[idx])) {\n      return false;\n    }\n    idx += 1;\n  }\n  return true;\n}));\nexport default all;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns the larger of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.maxBy, R.min\n * @example\n *\n *      R.max(789, 123); //=> 789\n *      R.max('a', 'b'); //=> 'b'\n */\nvar max = /*#__PURE__*/_curry2(function max(a, b) {\n  return b > a ? b : a;\n});\nexport default max;","export default function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n  return result;\n}","export default function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}","import _curry1 from './_curry1';\nimport _isArray from './_isArray';\nimport _isString from './_isString';\n\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n */\nvar _isArrayLike = /*#__PURE__*/_curry1(function isArrayLike(x) {\n  if (_isArray(x)) {\n    return true;\n  }\n  if (!x) {\n    return false;\n  }\n  if (typeof x !== 'object') {\n    return false;\n  }\n  if (_isString(x)) {\n    return false;\n  }\n  if (x.nodeType === 1) {\n    return !!x.length;\n  }\n  if (x.length === 0) {\n    return true;\n  }\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n  return false;\n});\nexport default _isArrayLike;","var XWrap = /*#__PURE__*/function () {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n  XWrap.prototype['@@transducer/init'] = function () {\n    throw new Error('init not implemented on XWrap');\n  };\n  XWrap.prototype['@@transducer/result'] = function (acc) {\n    return acc;\n  };\n  XWrap.prototype['@@transducer/step'] = function (acc, x) {\n    return this.f(acc, x);\n  };\n\n  return XWrap;\n}();\n\nexport default function _xwrap(fn) {\n  return new XWrap(fn);\n}","import _arity from './internal/_arity';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      var log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\nvar bind = /*#__PURE__*/_curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});\nexport default bind;","import _isArrayLike from './_isArrayLike';\nimport _xwrap from './_xwrap';\nimport bind from '../bind';\n\nfunction _arrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    idx += 1;\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _iterableReduce(xf, acc, iter) {\n  var step = iter.next();\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    step = iter.next();\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _methodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\n\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n\nexport default function _reduce(fn, acc, list) {\n  if (typeof fn === 'function') {\n    fn = _xwrap(fn);\n  }\n  if (_isArrayLike(list)) {\n    return _arrayReduce(fn, acc, list);\n  }\n  if (typeof list['fantasy-land/reduce'] === 'function') {\n    return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n  }\n  if (list[symIterator] != null) {\n    return _iterableReduce(fn, acc, list[symIterator]());\n  }\n  if (typeof list.next === 'function') {\n    return _iterableReduce(fn, acc, list);\n  }\n  if (typeof list.reduce === 'function') {\n    return _methodReduce(fn, acc, list, 'reduce');\n  }\n\n  throw new TypeError('reduce: list must be array or iterable');\n}","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XMap = /*#__PURE__*/function () {\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n  XMap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return XMap;\n}();\n\nvar _xmap = /*#__PURE__*/_curry2(function _xmap(f, xf) {\n  return new XMap(f, xf);\n});\nexport default _xmap;","export default function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}","import _has from './_has';\n\nvar toString = Object.prototype.toString;\nvar _isArguments = function () {\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n};\n\nexport default _isArguments;","import _curry1 from './internal/_curry1';\nimport _has from './internal/_has';\nimport _isArguments from './internal/_isArguments';\n\n// cover IE < 9 keys issues\nvar hasEnumBug = ! /*#__PURE__*/{ toString: null }.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n// Safari bug\nvar hasArgsEnumBug = /*#__PURE__*/function () {\n  'use strict';\n\n  return arguments.propertyIsEnumerable('length');\n}();\n\nvar contains = function contains(list, item) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (list[idx] === item) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n};\n\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\nvar _keys = typeof Object.keys === 'function' && !hasArgsEnumBug ? function keys(obj) {\n  return Object(obj) !== obj ? [] : Object.keys(obj);\n} : function keys(obj) {\n  if (Object(obj) !== obj) {\n    return [];\n  }\n  var prop, nIdx;\n  var ks = [];\n  var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n  for (prop in obj) {\n    if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n      ks[ks.length] = prop;\n    }\n  }\n  if (hasEnumBug) {\n    nIdx = nonEnumerableProps.length - 1;\n    while (nIdx >= 0) {\n      prop = nonEnumerableProps[nIdx];\n      if (_has(prop, obj) && !contains(ks, prop)) {\n        ks[ks.length] = prop;\n      }\n      nIdx -= 1;\n    }\n  }\n  return ks;\n};\nvar keys = /*#__PURE__*/_curry1(_keys);\nexport default keys;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _map from './internal/_map';\nimport _reduce from './internal/_reduce';\nimport _xmap from './internal/_xmap';\nimport curryN from './curryN';\nimport keys from './keys';\n\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex\n * @example\n *\n *      var double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\nvar map = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function () {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n    case '[object Object]':\n      return _reduce(function (acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n    default:\n      return _map(fn, functor);\n  }\n}));\nexport default map;","import _curry2 from './internal/_curry2';\n\n/**\n * Retrieve the value at a given path.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> a | Undefined\n * @param {Array} path The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path`.\n * @see R.prop\n * @example\n *\n *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n */\nvar path = /*#__PURE__*/_curry2(function path(paths, obj) {\n  var val = obj;\n  var idx = 0;\n  while (idx < paths.length) {\n    if (val == null) {\n      return;\n    }\n    val = val[paths[idx]];\n    idx += 1;\n  }\n  return val;\n});\nexport default path;","import _curry2 from './internal/_curry2';\nimport path from './path';\n\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig s -> {s: a} -> a | Undefined\n * @param {String} p The property name\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n */\n\nvar prop = /*#__PURE__*/_curry2(function prop(p, obj) {\n  return path([p], obj);\n});\nexport default prop;","import _curry2 from './internal/_curry2';\nimport map from './map';\nimport prop from './prop';\n\n/**\n * Returns a new list by plucking the same named property off all objects in\n * the list supplied.\n *\n * `pluck` will work on\n * any [functor](https://github.com/fantasyland/fantasy-land#functor) in\n * addition to arrays, as it is equivalent to `R.map(R.prop(k), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => k -> f {k: v} -> f v\n * @param {Number|String} key The key name to pluck off of each object.\n * @param {Array} f The array or functor to consider.\n * @return {Array} The list of values for the given key.\n * @see R.props\n * @example\n *\n *      R.pluck('a')([{a: 1}, {a: 2}]); //=> [1, 2]\n *      R.pluck(0)([[1, 2], [3, 4]]);   //=> [1, 3]\n *      R.pluck('val', {a: {val: 3}, b: {val: 5}}); //=> {a: 3, b: 5}\n * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]\n * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]\n */\nvar pluck = /*#__PURE__*/_curry2(function pluck(p, list) {\n  return map(prop(p), list);\n});\nexport default pluck;","import _curry3 from './internal/_curry3';\nimport _reduce from './internal/_reduce';\n\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\nvar reduce = /*#__PURE__*/_curry3(_reduce);\nexport default reduce;","import _curry1 from './internal/_curry1';\nimport curryN from './curryN';\nimport max from './max';\nimport pluck from './pluck';\nimport reduce from './reduce';\n\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if every one of the provided predicates is satisfied\n * by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.anyPass\n * @example\n *\n *      var isQueen = R.propEq('rank', 'Q');\n *      var isSpade = R.propEq('suit', '♠︎');\n *      var isQueenOfSpades = R.allPass([isQueen, isSpade]);\n *\n *      isQueenOfSpades({rank: 'Q', suit: '♣︎'}); //=> false\n *      isQueenOfSpades({rank: 'Q', suit: '♠︎'}); //=> true\n */\nvar allPass = /*#__PURE__*/_curry1(function allPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function () {\n    var idx = 0;\n    var len = preds.length;\n    while (idx < len) {\n      if (!preds[idx].apply(this, arguments)) {\n        return false;\n      }\n      idx += 1;\n    }\n    return true;\n  });\n});\nexport default allPass;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if both arguments are `true`; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any} the first argument if it is falsy, otherwise the second argument.\n * @see R.both\n * @example\n *\n *      R.and(true, true); //=> true\n *      R.and(true, false); //=> false\n *      R.and(false, true); //=> false\n *      R.and(false, false); //=> false\n */\nvar and = /*#__PURE__*/_curry2(function and(a, b) {\n  return a && b;\n});\nexport default and;","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XAny = /*#__PURE__*/function () {\n  function XAny(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.any = false;\n  }\n  XAny.prototype['@@transducer/init'] = _xfBase.init;\n  XAny.prototype['@@transducer/result'] = function (result) {\n    if (!this.any) {\n      result = this.xf['@@transducer/step'](result, false);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XAny.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.any = true;\n      result = _reduced(this.xf['@@transducer/step'](result, true));\n    }\n    return result;\n  };\n\n  return XAny;\n}();\n\nvar _xany = /*#__PURE__*/_curry2(function _xany(f, xf) {\n  return new XAny(f, xf);\n});\nexport default _xany;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xany from './internal/_xany';\n\n/**\n * Returns `true` if at least one of elements of the list match the predicate,\n * `false` otherwise.\n *\n * Dispatches to the `any` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\n *         otherwise.\n * @see R.all, R.none, R.transduce\n * @example\n *\n *      var lessThan0 = R.flip(R.lt)(0);\n *      var lessThan2 = R.flip(R.lt)(2);\n *      R.any(lessThan0)([1, 2]); //=> false\n *      R.any(lessThan2)([1, 2]); //=> true\n */\nvar any = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['any'], _xany, function any(fn, list) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (fn(list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n}));\nexport default any;","import _curry1 from './internal/_curry1';\nimport curryN from './curryN';\nimport max from './max';\nimport pluck from './pluck';\nimport reduce from './reduce';\n\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if at least one of the provided predicates is\n * satisfied by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.allPass\n * @example\n *\n *      var isClub = R.propEq('suit', '♣');\n *      var isSpade = R.propEq('suit', '♠');\n *      var isBlackCard = R.anyPass([isClub, isSpade]);\n *\n *      isBlackCard({rank: '10', suit: '♣'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♠'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♦'}); //=> false\n */\nvar anyPass = /*#__PURE__*/_curry1(function anyPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function () {\n    var idx = 0;\n    var len = preds.length;\n    while (idx < len) {\n      if (preds[idx].apply(this, arguments)) {\n        return true;\n      }\n      idx += 1;\n    }\n    return false;\n  });\n});\nexport default anyPass;","import _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\nimport _reduce from './internal/_reduce';\nimport map from './map';\n\n/**\n * ap applies a list of functions to a list of values.\n *\n * Dispatches to the `ap` method of the second argument, if present. Also\n * treats curried functions as applicatives.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig [a -> b] -> [a] -> [b]\n * @sig Apply f => f (a -> b) -> f a -> f b\n * @sig (a -> b -> c) -> (a -> b) -> (a -> c)\n * @param {*} applyF\n * @param {*} applyX\n * @return {*}\n * @example\n *\n *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n *      R.ap([R.concat('tasty '), R.toUpper], ['pizza', 'salad']); //=> [\"tasty pizza\", \"tasty salad\", \"PIZZA\", \"SALAD\"]\n *\n *      // R.ap can also be used as S combinator\n *      // when only two functions are passed\n *      R.ap(R.concat, R.toUpper)('Ramda') //=> 'RamdaRAMDA'\n * @symb R.ap([f, g], [a, b]) = [f(a), f(b), g(a), g(b)]\n */\nvar ap = /*#__PURE__*/_curry2(function ap(applyF, applyX) {\n  return typeof applyX['fantasy-land/ap'] === 'function' ? applyX['fantasy-land/ap'](applyF) : typeof applyF.ap === 'function' ? applyF.ap(applyX) : typeof applyF === 'function' ? function (x) {\n    return applyF(x)(applyX(x));\n  } :\n  // else\n  _reduce(function (acc, f) {\n    return _concat(acc, map(f, applyX));\n  }, [], applyF);\n});\nexport default ap;","export default function _aperture(n, list) {\n  var idx = 0;\n  var limit = list.length - (n - 1);\n  var acc = new Array(limit >= 0 ? limit : 0);\n  while (idx < limit) {\n    acc[idx] = Array.prototype.slice.call(list, idx, idx + n);\n    idx += 1;\n  }\n  return acc;\n}","import _concat from './_concat';\nimport _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XAperture = /*#__PURE__*/function () {\n  function XAperture(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n  XAperture.prototype['@@transducer/init'] = _xfBase.init;\n  XAperture.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XAperture.prototype['@@transducer/step'] = function (result, input) {\n    this.store(input);\n    return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;\n  };\n  XAperture.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n  XAperture.prototype.getCopy = function () {\n    return _concat(Array.prototype.slice.call(this.acc, this.pos), Array.prototype.slice.call(this.acc, 0, this.pos));\n  };\n\n  return XAperture;\n}();\n\nvar _xaperture = /*#__PURE__*/_curry2(function _xaperture(n, xf) {\n  return new XAperture(n, xf);\n});\nexport default _xaperture;","import _aperture from './internal/_aperture';\nimport _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xaperture from './internal/_xaperture';\n\n/**\n * Returns a new list, composed of n-tuples of consecutive elements. If `n` is\n * greater than the length of the list, an empty list is returned.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @param {Number} n The size of the tuples to create\n * @param {Array} list The list to split into `n`-length tuples\n * @return {Array} The resulting list of `n`-length tuples\n * @see R.transduce\n * @example\n *\n *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]\n *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]\n *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []\n */\nvar aperture = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xaperture, _aperture));\nexport default aperture;","import _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Returns a new list containing the contents of the given list, followed by\n * the given element.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The element to add to the end of the new list.\n * @param {Array} list The list of elements to add a new item to.\n *        list.\n * @return {Array} A new list containing the elements of the old list followed by `el`.\n * @see R.prepend\n * @example\n *\n *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n *      R.append('tests', []); //=> ['tests']\n *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n */\nvar append = /*#__PURE__*/_curry2(function append(el, list) {\n  return _concat(list, [el]);\n});\nexport default append;","import _curry2 from './internal/_curry2';\n\n/**\n * Applies function `fn` to the argument list `args`. This is useful for\n * creating a fixed-arity function from a variadic function. `fn` should be a\n * bound function if context is significant.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> a) -> [*] -> a\n * @param {Function} fn The function which will be called with `args`\n * @param {Array} args The arguments to call `fn` with\n * @return {*} result The result, equivalent to `fn(...args)`\n * @see R.call, R.unapply\n * @example\n *\n *      var nums = [1, 2, 3, -99, 42, 6, 7];\n *      R.apply(Math.max, nums); //=> 42\n * @symb R.apply(f, [a, b, c]) = f(a, b, c)\n */\nvar apply = /*#__PURE__*/_curry2(function apply(fn, args) {\n  return fn.apply(this, args);\n});\nexport default apply;","import _curry1 from './internal/_curry1';\nimport keys from './keys';\n\n/**\n * Returns a list of all the enumerable own properties of the supplied object.\n * Note that the order of the output array is not guaranteed across different\n * JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own properties.\n * @see R.valuesIn, R.keys\n * @example\n *\n *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n */\nvar values = /*#__PURE__*/_curry1(function values(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var vals = [];\n  var idx = 0;\n  while (idx < len) {\n    vals[idx] = obj[props[idx]];\n    idx += 1;\n  }\n  return vals;\n});\nexport default values;","import _curry1 from './internal/_curry1';\nimport apply from './apply';\nimport curryN from './curryN';\nimport map from './map';\nimport max from './max';\nimport pluck from './pluck';\nimport reduce from './reduce';\nimport values from './values';\n\n/**\n * Given a spec object recursively mapping properties to functions, creates a\n * function producing an object of the same structure, by mapping each property\n * to the result of calling its associated function with the supplied arguments.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig {k: ((a, b, ..., m) -> v)} -> ((a, b, ..., m) -> {k: v})\n * @param {Object} spec an object recursively mapping properties to functions for\n *        producing the values for these properties.\n * @return {Function} A function that returns an object of the same structure\n * as `spec', with each property set to the value returned by calling its\n * associated function with the supplied arguments.\n * @see R.converge, R.juxt\n * @example\n *\n *      var getMetrics = R.applySpec({\n *        sum: R.add,\n *        nested: { mul: R.multiply }\n *      });\n *      getMetrics(2, 4); // => { sum: 6, nested: { mul: 8 } }\n * @symb R.applySpec({ x: f, y: { z: g } })(a, b) = { x: f(a, b), y: { z: g(a, b) } }\n */\nvar applySpec = /*#__PURE__*/_curry1(function applySpec(spec) {\n  spec = map(function (v) {\n    return typeof v == 'function' ? v : applySpec(v);\n  }, spec);\n  return curryN(reduce(max, 0, pluck('length', values(spec))), function () {\n    var args = arguments;\n    return map(function (f) {\n      return apply(f, args);\n    }, spec);\n  });\n});\nexport default applySpec;","import _curry2 from './internal/_curry2';\n\n/**\n* Takes a value and applies a function to it.\n*\n* This function is also known as the `thrush` combinator.\n*\n* @func\n* @memberOf R\n * @since v0.25.0\n* @category Function\n* @sig a -> (a -> b) -> b\n* @param {*} x The value\n* @param {Function} f The function to apply\n* @return {*} The result of applying `f` to `x`\n* @example\n*\n*      var t42 = R.applyTo(42);\n*      t42(R.identity); //=> 42\n*      t42(R.add(1)); //=> 43\n*/\nvar applyTo = /*#__PURE__*/_curry2(function applyTo(x, f) {\n  return f(x);\n});\nexport default applyTo;","import _curry3 from './internal/_curry3';\n\n/**\n * Makes an ascending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) < fn(b), `1` if fn(b) < fn(a), otherwise `0`\n * @see R.descend\n * @example\n *\n *      var byAge = R.ascend(R.prop('age'));\n *      var people = [\n *        // ...\n *      ];\n *      var peopleByYoungestFirst = R.sort(byAge, people);\n */\nvar ascend = /*#__PURE__*/_curry3(function ascend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa < bb ? -1 : aa > bb ? 1 : 0;\n});\nexport default ascend;","import _curry3 from './internal/_curry3';\n\n/**\n * Makes a shallow clone of an object, setting or overriding the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig String -> a -> {k: v} -> {k: v}\n * @param {String} prop The property name to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except for the changed property.\n * @see R.dissoc\n * @example\n *\n *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n */\nvar assoc = /*#__PURE__*/_curry3(function assoc(prop, val, obj) {\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  result[prop] = val;\n  return result;\n});\nexport default assoc;","/**\n * Determine if the passed argument is an integer.\n *\n * @private\n * @param {*} n\n * @category Type\n * @return {Boolean}\n */\nexport default Number.isInteger || function _isInteger(n) {\n  return n << 0 === n;\n};","import _curry1 from './internal/_curry1';\n\n/**\n * Checks if the input value is `null` or `undefined`.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Type\n * @sig * -> Boolean\n * @param {*} x The value to test.\n * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n * @example\n *\n *      R.isNil(null); //=> true\n *      R.isNil(undefined); //=> true\n *      R.isNil(0); //=> false\n *      R.isNil([]); //=> false\n */\nvar isNil = /*#__PURE__*/_curry1(function isNil(x) {\n  return x == null;\n});\nexport default isNil;","import _curry3 from './internal/_curry3';\nimport _has from './internal/_has';\nimport _isArray from './internal/_isArray';\nimport _isInteger from './internal/_isInteger';\nimport assoc from './assoc';\nimport isNil from './isNil';\n\n/**\n * Makes a shallow clone of an object, setting or overriding the nodes required\n * to create the given path, and placing the specific value at the tail end of\n * that path. Note that this copies and flattens prototype properties onto the\n * new object as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> {a}\n * @param {Array} path the path to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except along the specified path.\n * @see R.dissocPath\n * @example\n *\n *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n *\n *      // Any missing or non-object keys in path will be overridden\n *      R.assocPath(['a', 'b', 'c'], 42, {a: 5}); //=> {a: {b: {c: 42}}}\n */\nvar assocPath = /*#__PURE__*/_curry3(function assocPath(path, val, obj) {\n  if (path.length === 0) {\n    return val;\n  }\n  var idx = path[0];\n  if (path.length > 1) {\n    var nextObj = !isNil(obj) && _has(idx, obj) ? obj[idx] : _isInteger(path[1]) ? [] : {};\n    val = assocPath(Array.prototype.slice.call(path, 1), val, nextObj);\n  }\n  if (_isInteger(idx) && _isArray(obj)) {\n    var arr = [].concat(obj);\n    arr[idx] = val;\n    return arr;\n  } else {\n    return assoc(idx, val, obj);\n  }\n});\nexport default assocPath;","import _curry2 from './internal/_curry2';\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly `n` parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} n The desired arity of the new function.\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity `n`.\n * @see R.binary, R.unary\n * @example\n *\n *      var takesTwoArgs = (a, b) => [a, b];\n *\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      var takesOneArg = R.nAry(1, takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only `n` arguments are passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.nAry(0, f)(a, b) = f()\n * @symb R.nAry(1, f)(a, b) = f(a)\n * @symb R.nAry(2, f)(a, b) = f(a, b)\n */\nvar nAry = /*#__PURE__*/_curry2(function nAry(n, fn) {\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.call(this);\n      };\n    case 1:\n      return function (a0) {\n        return fn.call(this, a0);\n      };\n    case 2:\n      return function (a0, a1) {\n        return fn.call(this, a0, a1);\n      };\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.call(this, a0, a1, a2);\n      };\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.call(this, a0, a1, a2, a3);\n      };\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.call(this, a0, a1, a2, a3, a4);\n      };\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5);\n      };\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6);\n      };\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);\n      };\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);\n      };\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n      };\n    default:\n      throw new Error('First argument to nAry must be a non-negative integer no greater than ten');\n  }\n});\nexport default nAry;","import _curry1 from './internal/_curry1';\nimport nAry from './nAry';\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 2 parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (* -> c) -> (a, b -> c)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 2.\n * @see R.nAry, R.unary\n * @example\n *\n *      var takesThreeArgs = function(a, b, c) {\n *        return [a, b, c];\n *      };\n *      takesThreeArgs.length; //=> 3\n *      takesThreeArgs(1, 2, 3); //=> [1, 2, 3]\n *\n *      var takesTwoArgs = R.binary(takesThreeArgs);\n *      takesTwoArgs.length; //=> 2\n *      // Only 2 arguments are passed to the wrapped function\n *      takesTwoArgs(1, 2, 3); //=> [1, 2, undefined]\n * @symb R.binary(f)(a, b, c) = f(a, b)\n */\nvar binary = /*#__PURE__*/_curry1(function binary(fn) {\n  return nAry(2, fn);\n});\nexport default binary;","export default function _isFunction(x) {\n  return Object.prototype.toString.call(x) === '[object Function]';\n}","import _curry2 from './internal/_curry2';\nimport _reduce from './internal/_reduce';\nimport ap from './ap';\nimport curryN from './curryN';\nimport map from './map';\n\n/**\n * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\n * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig Number -> (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.lift, R.ap\n * @example\n *\n *      var madd3 = R.liftN(3, (...args) => R.sum(args));\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n */\nvar liftN = /*#__PURE__*/_curry2(function liftN(arity, fn) {\n  var lifted = curryN(arity, fn);\n  return curryN(arity, function () {\n    return _reduce(ap, map(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));\n  });\n});\nexport default liftN;","import _curry1 from './internal/_curry1';\nimport liftN from './liftN';\n\n/**\n * \"lifts\" a function of arity > 1 so that it may \"map over\" a list, Function or other\n * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.liftN\n * @example\n *\n *      var madd3 = R.lift((a, b, c) => a + b + c);\n *\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n *\n *      var madd5 = R.lift((a, b, c, d, e) => a + b + c + d + e);\n *\n *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n */\nvar lift = /*#__PURE__*/_curry1(function lift(fn) {\n  return liftN(fn.length, fn);\n});\nexport default lift;","import _curry2 from './internal/_curry2';\nimport _isFunction from './internal/_isFunction';\nimport and from './and';\nimport lift from './lift';\n\n/**\n * A function which calls the two provided functions and returns the `&&`\n * of the results.\n * It returns the result of the first function if it is false-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * false-y value.\n *\n * In addition to functions, `R.both` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f A predicate\n * @param {Function} g Another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\n * @see R.and\n * @example\n *\n *      var gt10 = R.gt(R.__, 10)\n *      var lt20 = R.lt(R.__, 20)\n *      var f = R.both(gt10, lt20);\n *      f(15); //=> true\n *      f(30); //=> false\n */\nvar both = /*#__PURE__*/_curry2(function both(f, g) {\n  return _isFunction(f) ? function _both() {\n    return f.apply(this, arguments) && g.apply(this, arguments);\n  } : lift(and)(f, g);\n});\nexport default both;","import _curry1 from './internal/_curry1';\nimport curryN from './curryN';\n\n/**\n * Returns a curried equivalent of the provided function. The curried function\n * has two unusual capabilities. First, its arguments needn't be provided one\n * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> a) -> (* -> a)\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curryN\n * @example\n *\n *      var addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      var curriedAddFourNumbers = R.curry(addFourNumbers);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\nvar curry = /*#__PURE__*/_curry1(function curry(fn) {\n  return curryN(fn.length, fn);\n});\nexport default curry;","import curry from './curry';\n\n/**\n * Returns the result of calling its first argument with the remaining\n * arguments. This is occasionally useful as a converging function for\n * [`R.converge`](#converge): the first branch can produce a function while the\n * remaining branches produce values to be passed to that function as its\n * arguments.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig (*... -> a),*... -> a\n * @param {Function} fn The function to apply to the remaining arguments.\n * @param {...*} args Any number of positional arguments.\n * @return {*}\n * @see R.apply\n * @example\n *\n *      R.call(R.add, 1, 2); //=> 3\n *\n *      var indentN = R.pipe(R.repeat(' '),\n *                           R.join(''),\n *                           R.replace(/^(?!$)/gm));\n *\n *      var format = R.converge(R.call, [\n *                                  R.pipe(R.prop('indent'), indentN),\n *                                  R.prop('value')\n *                              ]);\n *\n *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n * @symb R.call(f, a, b) = f(a, b)\n */\nvar call = /*#__PURE__*/curry(function call(fn) {\n  return fn.apply(this, Array.prototype.slice.call(arguments, 1));\n});\nexport default call;","import _isArrayLike from './_isArrayLike';\n\n/**\n * `_makeFlat` is a helper function that returns a one-level or fully recursive\n * function based on the flag passed in.\n *\n * @private\n */\nexport default function _makeFlat(recursive) {\n  return function flatt(list) {\n    var value, jlen, j;\n    var result = [];\n    var idx = 0;\n    var ilen = list.length;\n\n    while (idx < ilen) {\n      if (_isArrayLike(list[idx])) {\n        value = recursive ? flatt(list[idx]) : list[idx];\n        j = 0;\n        jlen = value.length;\n        while (j < jlen) {\n          result[result.length] = value[j];\n          j += 1;\n        }\n      } else {\n        result[result.length] = list[idx];\n      }\n      idx += 1;\n    }\n    return result;\n  };\n}","export default function _forceReduced(x) {\n  return {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}","import _forceReduced from './_forceReduced';\nimport _isArrayLike from './_isArrayLike';\nimport _reduce from './_reduce';\nimport _xfBase from './_xfBase';\n\nvar preservingReduced = function (xf) {\n  return {\n    '@@transducer/init': _xfBase.init,\n    '@@transducer/result': function (result) {\n      return xf['@@transducer/result'](result);\n    },\n    '@@transducer/step': function (result, input) {\n      var ret = xf['@@transducer/step'](result, input);\n      return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\n    }\n  };\n};\n\nvar _flatCat = function _xcat(xf) {\n  var rxf = preservingReduced(xf);\n  return {\n    '@@transducer/init': _xfBase.init,\n    '@@transducer/result': function (result) {\n      return rxf['@@transducer/result'](result);\n    },\n    '@@transducer/step': function (result, input) {\n      return !_isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);\n    }\n  };\n};\n\nexport default _flatCat;","import _curry2 from './_curry2';\nimport _flatCat from './_flatCat';\nimport map from '../map';\n\nvar _xchain = /*#__PURE__*/_curry2(function _xchain(f, xf) {\n  return map(f, _flatCat(xf));\n});\nexport default _xchain;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _makeFlat from './internal/_makeFlat';\nimport _xchain from './internal/_xchain';\nimport map from './map';\n\n/**\n * `chain` maps a function over a list and concatenates the results. `chain`\n * is also known as `flatMap` in some libraries\n *\n * Dispatches to the `chain` method of the second argument, if present,\n * according to the [FantasyLand Chain spec](https://github.com/fantasyland/fantasy-land#chain).\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain m => (a -> m b) -> m a -> m b\n * @param {Function} fn The function to map with\n * @param {Array} list The list to map over\n * @return {Array} The result of flat-mapping `list` with `fn`\n * @example\n *\n *      var duplicate = n => [n, n];\n *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]\n *\n *      R.chain(R.append, R.head)([1, 2, 3]); //=> [1, 2, 3, 1]\n */\nvar chain = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['fantasy-land/chain', 'chain'], _xchain, function chain(fn, monad) {\n  if (typeof monad === 'function') {\n    return function (x) {\n      return fn(monad(x))(x);\n    };\n  }\n  return _makeFlat(false)(map(fn, monad));\n}));\nexport default chain;","import _curry3 from './internal/_curry3';\n\n/**\n * Restricts a number to be within a range.\n *\n * Also works for other ordered types such as Strings and Dates.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Relation\n * @sig Ord a => a -> a -> a -> a\n * @param {Number} minimum The lower limit of the clamp (inclusive)\n * @param {Number} maximum The upper limit of the clamp (inclusive)\n * @param {Number} value Value to be clamped\n * @return {Number} Returns `minimum` when `val < minimum`, `maximum` when `val > maximum`, returns `val` otherwise\n * @example\n *\n *      R.clamp(1, 10, -5) // => 1\n *      R.clamp(1, 10, 15) // => 10\n *      R.clamp(1, 10, 4)  // => 4\n */\nvar clamp = /*#__PURE__*/_curry3(function clamp(min, max, value) {\n  if (min > max) {\n    throw new Error('min must not be greater than max in clamp(min, max, value)');\n  }\n  return value < min ? min : value > max ? max : value;\n});\nexport default clamp;","export default function _cloneRegExp(pattern) {\n                                  return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));\n}","import _curry1 from './internal/_curry1';\n\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(undefined); //=> \"Undefined\"\n */\nvar type = /*#__PURE__*/_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\nexport default type;","import _cloneRegExp from './_cloneRegExp';\nimport type from '../type';\n\n/**\n * Copies an object.\n *\n * @private\n * @param {*} value The value to be copied\n * @param {Array} refFrom Array containing the source references\n * @param {Array} refTo Array containing the copied source references\n * @param {Boolean} deep Whether or not to perform deep cloning.\n * @return {*} The copied value.\n */\nexport default function _clone(value, refFrom, refTo, deep) {\n  var copy = function copy(copiedValue) {\n    var len = refFrom.length;\n    var idx = 0;\n    while (idx < len) {\n      if (value === refFrom[idx]) {\n        return refTo[idx];\n      }\n      idx += 1;\n    }\n    refFrom[idx + 1] = value;\n    refTo[idx + 1] = copiedValue;\n    for (var key in value) {\n      copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];\n    }\n    return copiedValue;\n  };\n  switch (type(value)) {\n    case 'Object':\n      return copy({});\n    case 'Array':\n      return copy([]);\n    case 'Date':\n      return new Date(value.valueOf());\n    case 'RegExp':\n      return _cloneRegExp(value);\n    default:\n      return value;\n  }\n}","import _clone from './internal/_clone';\nimport _curry1 from './internal/_curry1';\n\n/**\n * Creates a deep copy of the value which may contain (nested) `Array`s and\n * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are\n * assigned by reference rather than copied\n *\n * Dispatches to a `clone` method if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {*} -> {*}\n * @param {*} value The object or array to clone\n * @return {*} A deeply cloned copy of `val`\n * @example\n *\n *      var objects = [{}, {}, {}];\n *      var objectsClone = R.clone(objects);\n *      objects === objectsClone; //=> false\n *      objects[0] === objectsClone[0]; //=> false\n */\nvar clone = /*#__PURE__*/_curry1(function clone(value) {\n  return value != null && typeof value.clone === 'function' ? value.clone() : _clone(value, [], [], true);\n});\nexport default clone;","import _curry1 from './internal/_curry1';\n\n/**\n * Makes a comparator function out of a function that reports whether the first\n * element is less than the second.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b) -> Boolean) -> ((a, b) -> Number)\n * @param {Function} pred A predicate function of arity two which will return `true` if the first argument\n * is less than the second, `false` otherwise\n * @return {Function} A Function :: a -> b -> Int that returns `-1` if a < b, `1` if b < a, otherwise `0`\n * @example\n *\n *      var byAge = R.comparator((a, b) => a.age < b.age);\n *      var people = [\n *        // ...\n *      ];\n *      var peopleByIncreasingAge = R.sort(byAge, people);\n */\nvar comparator = /*#__PURE__*/_curry1(function comparator(pred) {\n  return function (a, b) {\n    return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;\n  };\n});\nexport default comparator;","import _curry1 from './internal/_curry1';\n\n/**\n * A function that returns the `!` of its argument. It will return `true` when\n * passed false-y value, and `false` when passed a truth-y one.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig * -> Boolean\n * @param {*} a any value\n * @return {Boolean} the logical inverse of passed argument.\n * @see R.complement\n * @example\n *\n *      R.not(true); //=> false\n *      R.not(false); //=> true\n *      R.not(0); //=> true\n *      R.not(1); //=> false\n */\nvar not = /*#__PURE__*/_curry1(function not(a) {\n  return !a;\n});\nexport default not;","import lift from './lift';\nimport not from './not';\n\n/**\n * Takes a function `f` and returns a function `g` such that if called with the same arguments\n * when `f` returns a \"truthy\" value, `g` returns `false` and when `f` returns a \"falsy\" value `g` returns `true`.\n *\n * `R.complement` may be applied to any functor\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> *) -> (*... -> Boolean)\n * @param {Function} f\n * @return {Function}\n * @see R.not\n * @example\n *\n *      var isNotNil = R.complement(R.isNil);\n *      isNil(null); //=> true\n *      isNotNil(null); //=> false\n *      isNil(7); //=> false\n *      isNotNil(7); //=> true\n */\nvar complement = /*#__PURE__*/lift(not);\nexport default complement;","export default function _pipe(f, g) {\n  return function () {\n    return g.call(this, f.apply(this, arguments));\n  };\n}","import _isArray from './_isArray';\n\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\nexport default function _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n    if (length === 0) {\n      return fn();\n    }\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}","import _checkForMethod from './internal/_checkForMethod';\nimport _curry3 from './internal/_curry3';\n\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\nvar slice = /*#__PURE__*/_curry3( /*#__PURE__*/_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\nexport default slice;","import _checkForMethod from './internal/_checkForMethod';\nimport _curry1 from './internal/_curry1';\nimport slice from './slice';\n\n/**\n * Returns all but the first element of the given list or string (or object\n * with a `tail` method).\n *\n * Dispatches to the `slice` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.head, R.init, R.last\n * @example\n *\n *      R.tail([1, 2, 3]);  //=> [2, 3]\n *      R.tail([1, 2]);     //=> [2]\n *      R.tail([1]);        //=> []\n *      R.tail([]);         //=> []\n *\n *      R.tail('abc');  //=> 'bc'\n *      R.tail('ab');   //=> 'b'\n *      R.tail('a');    //=> ''\n *      R.tail('');     //=> ''\n */\nvar tail = /*#__PURE__*/_curry1( /*#__PURE__*/_checkForMethod('tail', /*#__PURE__*/slice(1, Infinity)));\nexport default tail;","import _arity from './internal/_arity';\nimport _pipe from './internal/_pipe';\nimport reduce from './reduce';\nimport tail from './tail';\n\n/**\n * Performs left-to-right function composition. The leftmost function may have\n * any arity; the remaining functions must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      var f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n */\nexport default function pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n}","import _curry1 from './internal/_curry1';\nimport _isString from './internal/_isString';\n\n/**\n * Returns a new list or string with the elements or characters in reverse\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {Array|String} list\n * @return {Array|String}\n * @example\n *\n *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n *      R.reverse([1, 2]);     //=> [2, 1]\n *      R.reverse([1]);        //=> [1]\n *      R.reverse([]);         //=> []\n *\n *      R.reverse('abc');      //=> 'cba'\n *      R.reverse('ab');       //=> 'ba'\n *      R.reverse('a');        //=> 'a'\n *      R.reverse('');         //=> ''\n */\nvar reverse = /*#__PURE__*/_curry1(function reverse(list) {\n  return _isString(list) ? list.split('').reverse().join('') : Array.prototype.slice.call(list, 0).reverse();\n});\nexport default reverse;","import pipe from './pipe';\nimport reverse from './reverse';\n\n/**\n * Performs right-to-left function composition. The rightmost function may have\n * any arity; the remaining functions must be unary.\n *\n * **Note:** The result of compose is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipe\n * @example\n *\n *      var classyGreeting = (firstName, lastName) => \"The name's \" + lastName + \", \" + firstName + \" \" + lastName\n *      var yellGreeting = R.compose(R.toUpper, classyGreeting);\n *      yellGreeting('James', 'Bond'); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.compose(Math.abs, R.add(1), R.multiply(2))(-4) //=> 7\n *\n * @symb R.compose(f, g, h)(a, b) = f(g(h(a, b)))\n */\nexport default function compose() {\n  if (arguments.length === 0) {\n    throw new Error('compose requires at least one argument');\n  }\n  return pipe.apply(this, reverse(arguments));\n}","import chain from './chain';\nimport compose from './compose';\nimport map from './map';\n\n/**\n * Returns the right-to-left Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.composeK(h, g, f)` is equivalent to `R.compose(R.chain(h), R.chain(g), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((y -> m z), (x -> m y), ..., (a -> m b)) -> (a -> m z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipeK\n * @example\n *\n *       //  get :: String -> Object -> Maybe *\n *       var get = R.curry((propName, obj) => Maybe(obj[propName]))\n *\n *       //  getStateCode :: Maybe String -> Maybe String\n *       var getStateCode = R.composeK(\n *         R.compose(Maybe.of, R.toUpper),\n *         get('state'),\n *         get('address'),\n *         get('user'),\n *       );\n *       getStateCode({\"user\":{\"address\":{\"state\":\"ny\"}}}); //=> Maybe.Just(\"NY\")\n *       getStateCode({}); //=> Maybe.Nothing()\n * @symb R.composeK(f, g, h)(a) = R.chain(f, R.chain(g, h(a)))\n */\nexport default function composeK() {\n  if (arguments.length === 0) {\n    throw new Error('composeK requires at least one argument');\n  }\n  var init = Array.prototype.slice.call(arguments);\n  var last = init.pop();\n  return compose(compose.apply(this, map(chain, init)), last);\n}","export default function _pipeP(f, g) {\n  return function () {\n    var ctx = this;\n    return f.apply(ctx, arguments).then(function (x) {\n      return g.call(ctx, x);\n    });\n  };\n}","import _arity from './internal/_arity';\nimport _pipeP from './internal/_pipeP';\nimport reduce from './reduce';\nimport tail from './tail';\n\n/**\n * Performs left-to-right composition of one or more Promise-returning\n * functions. The leftmost function may have any arity; the remaining functions\n * must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a -> Promise b), (b -> Promise c), ..., (y -> Promise z)) -> (a -> Promise z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.composeP\n * @example\n *\n *      //  followersForUser :: String -> Promise [User]\n *      var followersForUser = R.pipeP(db.getUserById, db.getFollowers);\n */\nexport default function pipeP() {\n  if (arguments.length === 0) {\n    throw new Error('pipeP requires at least one argument');\n  }\n  return _arity(arguments[0].length, reduce(_pipeP, arguments[0], tail(arguments)));\n}","import pipeP from './pipeP';\nimport reverse from './reverse';\n\n/**\n * Performs right-to-left composition of one or more Promise-returning\n * functions. The rightmost function may have any arity; the remaining\n * functions must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((y -> Promise z), (x -> Promise y), ..., (a -> Promise b)) -> (a -> Promise z)\n * @param {...Function} functions The functions to compose\n * @return {Function}\n * @see R.pipeP\n * @example\n *\n *      var db = {\n *        users: {\n *          JOE: {\n *            name: 'Joe',\n *            followers: ['STEVE', 'SUZY']\n *          }\n *        }\n *      }\n *\n *      // We'll pretend to do a db lookup which returns a promise\n *      var lookupUser = (userId) => Promise.resolve(db.users[userId])\n *      var lookupFollowers = (user) => Promise.resolve(user.followers)\n *      lookupUser('JOE').then(lookupFollowers)\n *\n *      //  followersForUser :: String -> Promise [UserId]\n *      var followersForUser = R.composeP(lookupFollowers, lookupUser);\n *      followersForUser('JOE').then(followers => console.log('Followers:', followers))\n *      // Followers: [\"STEVE\",\"SUZY\"]\n */\nexport default function composeP() {\n  if (arguments.length === 0) {\n    throw new Error('composeP requires at least one argument');\n  }\n  return pipeP.apply(this, reverse(arguments));\n}","export default function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n  return list;\n}","export default function _containsWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n}","export default function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n}","import _curry2 from './internal/_curry2';\n\n/**\n * Returns true if its arguments are identical, false otherwise. Values are\n * identical if they reference the same memory. `NaN` is identical to `NaN`;\n * `0` and `-0` are not identical.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      var o = {};\n *      R.identical(o, o); //=> true\n *      R.identical(1, 1); //=> true\n *      R.identical(1, '1'); //=> false\n *      R.identical([], []); //=> false\n *      R.identical(0, -0); //=> false\n *      R.identical(NaN, NaN); //=> true\n */\nvar identical = /*#__PURE__*/_curry2(function identical(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n});\nexport default identical;","import _arrayFromIterator from './_arrayFromIterator';\nimport _containsWith from './_containsWith';\nimport _functionName from './_functionName';\nimport _has from './_has';\nimport identical from '../identical';\nimport keys from '../keys';\nimport type from '../type';\n\n/**\n * private _uniqContentEquals function.\n * That function is checking equality of 2 iterator contents with 2 assumptions\n * - iterators lengths are the same\n * - iterators values are unique\n *\n * false-positive result will be returned for comparision of, e.g.\n * - [1,2,3] and [1,2,3,4]\n * - [1,1,1] and [1,2,3]\n * */\n\nfunction _uniqContentEquals(aIterator, bIterator, stackA, stackB) {\n  var a = _arrayFromIterator(aIterator);\n  var b = _arrayFromIterator(bIterator);\n\n  function eq(_a, _b) {\n    return _equals(_a, _b, stackA.slice(), stackB.slice());\n  }\n\n  // if *a* array contains any element that is not included in *b*\n  return !_containsWith(function (b, aItem) {\n    return !_containsWith(eq, aItem, b);\n  }, b, a);\n}\n\nexport default function _equals(a, b, stackA, stackB) {\n  if (identical(a, b)) {\n    return true;\n  }\n\n  var typeA = type(a);\n\n  if (typeA !== type(b)) {\n    return false;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (typeA) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n      break;\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && identical(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n      break;\n    case 'Date':\n      if (!identical(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n      break;\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n    case 'RegExp':\n      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n        return false;\n      }\n      break;\n  }\n\n  var idx = stackA.length - 1;\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n    idx -= 1;\n  }\n\n  switch (typeA) {\n    case 'Map':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));\n    case 'Set':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n    case 'Date':\n    case 'Error':\n    case 'RegExp':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'ArrayBuffer':\n      break;\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var extendedStackA = stackA.concat([a]);\n  var extendedStackB = stackB.concat([b]);\n\n  idx = keysA.length - 1;\n  while (idx >= 0) {\n    var key = keysA[idx];\n    if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {\n      return false;\n    }\n    idx -= 1;\n  }\n  return true;\n}","import _curry2 from './internal/_curry2';\nimport _equals from './internal/_equals';\n\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      var a = {}; a.v = a;\n *      var b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\nvar equals = /*#__PURE__*/_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\nexport default equals;","import equals from '../equals';\n\nexport default function _indexOf(list, a, idx) {\n  var inf, item;\n  // Array.prototype.indexOf doesn't exist below IE9\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n          while (idx < list.length) {\n            item = list[idx];\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        }\n        // non-zero numbers can utilise Set\n        return list.indexOf(a, idx);\n\n      // all these types can utilise Set\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n    }\n  }\n  // anything else not covered above, defer to R.equals\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n}","import _indexOf from './_indexOf';\n\nexport default function _contains(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n}","export default function _quote(s) {\n  var escaped = s.replace(/\\\\/g, '\\\\\\\\').replace(/[\\b]/g, '\\\\b') // \\b matches word boundary; [\\b] matches backspace\n  .replace(/\\f/g, '\\\\f').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t').replace(/\\v/g, '\\\\v').replace(/\\0/g, '\\\\0');\n\n  return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n}","/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nvar pad = function pad(n) {\n  return (n < 10 ? '0' : '') + n;\n};\n\nvar _toISOString = typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n  return d.toISOString();\n} : function _toISOString(d) {\n  return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n};\n\nexport default _toISOString;","export default function _complement(f) {\n  return function () {\n    return !f.apply(this, arguments);\n  };\n}","export default function _filter(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      result[result.length] = list[idx];\n    }\n    idx += 1;\n  }\n  return result;\n}","export default function _isObject(x) {\n  return Object.prototype.toString.call(x) === '[object Object]';\n}","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XFilter = /*#__PURE__*/function () {\n  function XFilter(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFilter.prototype['@@transducer/init'] = _xfBase.init;\n  XFilter.prototype['@@transducer/result'] = _xfBase.result;\n  XFilter.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n\n  return XFilter;\n}();\n\nvar _xfilter = /*#__PURE__*/_curry2(function _xfilter(f, xf) {\n  return new XFilter(f, xf);\n});\nexport default _xfilter;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _filter from './internal/_filter';\nimport _isObject from './internal/_isObject';\nimport _reduce from './internal/_reduce';\nimport _xfilter from './internal/_xfilter';\nimport keys from './keys';\n\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      var isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nvar filter = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['filter'], _xfilter, function (pred, filterable) {\n  return _isObject(filterable) ? _reduce(function (acc, key) {\n    if (pred(filterable[key])) {\n      acc[key] = filterable[key];\n    }\n    return acc;\n  }, {}, keys(filterable)) :\n  // else\n  _filter(pred, filterable);\n}));\nexport default filter;","import _complement from './internal/_complement';\nimport _curry2 from './internal/_curry2';\nimport filter from './filter';\n\n/**\n * The complement of [`filter`](#filter).\n *\n * Acts as a transducer if a transformer is given in list position. Filterable\n * objects include plain objects or any object that has a filter method such\n * as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      var isOdd = (n) => n % 2 === 1;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nvar reject = /*#__PURE__*/_curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\nexport default reject;","import _contains from './_contains';\nimport _map from './_map';\nimport _quote from './_quote';\nimport _toISOString from './_toISOString';\nimport keys from '../keys';\nimport reject from '../reject';\n\nexport default function _toString(x, seen) {\n  var recur = function recur(y) {\n    var xs = seen.concat([x]);\n    return _contains(y, xs) ? '<Circular>' : _toString(y, xs);\n  };\n\n  //  mapPairs :: (Object, [String]) -> [String]\n  var mapPairs = function (obj, keys) {\n    return _map(function (k) {\n      return _quote(k) + ': ' + recur(obj[k]);\n    }, keys.slice().sort());\n  };\n\n  switch (Object.prototype.toString.call(x)) {\n    case '[object Arguments]':\n      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n    case '[object Array]':\n      return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n        return (/^\\d+$/.test(k)\n        );\n      }, keys(x)))).join(', ') + ']';\n    case '[object Boolean]':\n      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n    case '[object Date]':\n      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n    case '[object Null]':\n      return 'null';\n    case '[object Number]':\n      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n    case '[object String]':\n      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n    case '[object Undefined]':\n      return 'undefined';\n    default:\n      if (typeof x.toString === 'function') {\n        var repr = x.toString();\n        if (repr !== '[object Object]') {\n          return repr;\n        }\n      }\n      return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n  }\n}","import _curry1 from './internal/_curry1';\nimport _toString from './internal/_toString';\n\n/**\n * Returns the string representation of the given value. `eval`'ing the output\n * should result in a value equivalent to the input value. Many of the built-in\n * `toString` methods do not satisfy this requirement.\n *\n * If the given value is an `[object Object]` with a `toString` method other\n * than `Object.prototype.toString`, this method is invoked with no arguments\n * to produce the return value. This means user-defined constructor functions\n * can provide a suitable `toString` method. For example:\n *\n *     function Point(x, y) {\n *       this.x = x;\n *       this.y = y;\n *     }\n *\n *     Point.prototype.toString = function() {\n *       return 'new Point(' + this.x + ', ' + this.y + ')';\n *     };\n *\n *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category String\n * @sig * -> String\n * @param {*} val\n * @return {String}\n * @example\n *\n *      R.toString(42); //=> '42'\n *      R.toString('abc'); //=> '\"abc\"'\n *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n */\nvar toString = /*#__PURE__*/_curry1(function toString(val) {\n  return _toString(val, []);\n});\nexport default toString;","import _curry2 from './internal/_curry2';\nimport _isArray from './internal/_isArray';\nimport _isFunction from './internal/_isFunction';\nimport _isString from './internal/_isString';\nimport toString from './toString';\n\n/**\n * Returns the result of concatenating the given lists or strings.\n *\n * Note: `R.concat` expects both arguments to be of the same type,\n * unlike the native `Array.prototype.concat` method. It will throw\n * an error if you `concat` an Array with a non-Array value.\n *\n * Dispatches to the `concat` method of the first argument, if present.\n * Can also concatenate two members of a [fantasy-land\n * compatible semigroup](https://github.com/fantasyland/fantasy-land#semigroup).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @sig String -> String -> String\n * @param {Array|String} firstList The first list\n * @param {Array|String} secondList The second list\n * @return {Array|String} A list consisting of the elements of `firstList` followed by the elements of\n * `secondList`.\n *\n * @example\n *\n *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n *      R.concat([], []); //=> []\n */\nvar concat = /*#__PURE__*/_curry2(function concat(a, b) {\n  if (_isArray(a)) {\n    if (_isArray(b)) {\n      return a.concat(b);\n    }\n    throw new TypeError(toString(b) + ' is not an array');\n  }\n  if (_isString(a)) {\n    if (_isString(b)) {\n      return a + b;\n    }\n    throw new TypeError(toString(b) + ' is not a string');\n  }\n  if (a != null && _isFunction(a['fantasy-land/concat'])) {\n    return a['fantasy-land/concat'](b);\n  }\n  if (a != null && _isFunction(a.concat)) {\n    return a.concat(b);\n  }\n  throw new TypeError(toString(a) + ' does not have a method named \"concat\" or \"fantasy-land/concat\"');\n});\nexport default concat;","import _arity from './internal/_arity';\nimport _curry1 from './internal/_curry1';\nimport map from './map';\nimport max from './max';\nimport reduce from './reduce';\n\n/**\n * Returns a function, `fn`, which encapsulates `if/else, if/else, ...` logic.\n * `R.cond` takes a list of [predicate, transformer] pairs. All of the arguments\n * to `fn` are applied to each of the predicates in turn until one returns a\n * \"truthy\" value, at which point `fn` returns the result of applying its\n * arguments to the corresponding transformer. If none of the predicates\n * matches, `fn` returns undefined.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Logic\n * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n * @param {Array} pairs A list of [predicate, transformer]\n * @return {Function}\n * @example\n *\n *      var fn = R.cond([\n *        [R.equals(0),   R.always('water freezes at 0°C')],\n *        [R.equals(100), R.always('water boils at 100°C')],\n *        [R.T,           temp => 'nothing special happens at ' + temp + '°C']\n *      ]);\n *      fn(0); //=> 'water freezes at 0°C'\n *      fn(50); //=> 'nothing special happens at 50°C'\n *      fn(100); //=> 'water boils at 100°C'\n */\nvar cond = /*#__PURE__*/_curry1(function cond(pairs) {\n  var arity = reduce(max, 0, map(function (pair) {\n    return pair[0].length;\n  }, pairs));\n  return _arity(arity, function () {\n    var idx = 0;\n    while (idx < pairs.length) {\n      if (pairs[idx][0].apply(this, arguments)) {\n        return pairs[idx][1].apply(this, arguments);\n      }\n      idx += 1;\n    }\n  });\n});\nexport default cond;","import _curry2 from './internal/_curry2';\nimport curry from './curry';\nimport nAry from './nAry';\n\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type. The arity of the function\n * returned is specified to allow using variadic constructor functions.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Function\n * @sig Number -> (* -> {*}) -> (* -> {*})\n * @param {Number} n The arity of the constructor function.\n * @param {Function} Fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @example\n *\n *      // Variadic Constructor function\n *      function Salad() {\n *        this.ingredients = arguments;\n *      }\n *\n *      Salad.prototype.recipe = function() {\n *        var instructions = R.map(ingredient => 'Add a dollop of ' + ingredient, this.ingredients);\n *        return R.join('\\n', instructions);\n *      };\n *\n *      var ThreeLayerSalad = R.constructN(3, Salad);\n *\n *      // Notice we no longer need the 'new' keyword, and the constructor is curried for 3 arguments.\n *      var salad = ThreeLayerSalad('Mayonnaise')('Potato Chips')('Ketchup');\n *\n *      console.log(salad.recipe());\n *      // Add a dollop of Mayonnaise\n *      // Add a dollop of Potato Chips\n *      // Add a dollop of Ketchup\n */\nvar constructN = /*#__PURE__*/_curry2(function constructN(n, Fn) {\n  if (n > 10) {\n    throw new Error('Constructor with greater than ten arguments');\n  }\n  if (n === 0) {\n    return function () {\n      return new Fn();\n    };\n  }\n  return curry(nAry(n, function ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {\n    switch (arguments.length) {\n      case 1:\n        return new Fn($0);\n      case 2:\n        return new Fn($0, $1);\n      case 3:\n        return new Fn($0, $1, $2);\n      case 4:\n        return new Fn($0, $1, $2, $3);\n      case 5:\n        return new Fn($0, $1, $2, $3, $4);\n      case 6:\n        return new Fn($0, $1, $2, $3, $4, $5);\n      case 7:\n        return new Fn($0, $1, $2, $3, $4, $5, $6);\n      case 8:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7);\n      case 9:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);\n      case 10:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);\n    }\n  }));\n});\nexport default constructN;","import _curry1 from './internal/_curry1';\nimport constructN from './constructN';\n\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> {*}) -> (* -> {*})\n * @param {Function} fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @see R.invoker\n * @example\n *\n *      // Constructor function\n *      function Animal(kind) {\n *        this.kind = kind;\n *      };\n *      Animal.prototype.sighting = function() {\n *        return \"It's a \" + this.kind + \"!\";\n *      }\n *\n *      var AnimalConstructor = R.construct(Animal)\n *\n *      // Notice we no longer need the 'new' keyword:\n *      AnimalConstructor('Pig'); //=> {\"kind\": \"Pig\", \"sighting\": function (){...}};\n *\n *      var animalTypes = [\"Lion\", \"Tiger\", \"Bear\"];\n *      var animalSighting = R.invoker(0, 'sighting');\n *      var sightNewAnimal = R.compose(animalSighting, AnimalConstructor);\n *      R.map(sightNewAnimal, animalTypes); //=> [\"It's a Lion!\", \"It's a Tiger!\", \"It's a Bear!\"]\n */\nvar construct = /*#__PURE__*/_curry1(function construct(Fn) {\n  return constructN(Fn.length, Fn);\n});\nexport default construct;","import _contains from './internal/_contains';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if the specified value is equal, in [`R.equals`](#equals)\n * terms, to at least one element of the given list; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Boolean\n * @param {Object} a The item to compare against.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @see R.any\n * @example\n *\n *      R.contains(3, [1, 2, 3]); //=> true\n *      R.contains(4, [1, 2, 3]); //=> false\n *      R.contains({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n *      R.contains([42], [[42]]); //=> true\n */\nvar contains = /*#__PURE__*/_curry2(_contains);\nexport default contains;","import _curry2 from './internal/_curry2';\nimport _map from './internal/_map';\nimport curryN from './curryN';\nimport max from './max';\nimport pluck from './pluck';\nimport reduce from './reduce';\n\n/**\n * Accepts a converging function and a list of branching functions and returns\n * a new function. When invoked, this new function is applied to some\n * arguments, each branching function is applied to those same arguments. The\n * results of each branching function are passed as arguments to the converging\n * function to produce the return value.\n *\n * @func\n * @memberOf R\n * @since v0.4.2\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [((a, b, ...) -> x1), ((a, b, ...) -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} after A function. `after` will be invoked with the return values of\n *        `fn1` and `fn2` as its arguments.\n * @param {Array} functions A list of functions.\n * @return {Function} A new function.\n * @see R.useWith\n * @example\n *\n *      var average = R.converge(R.divide, [R.sum, R.length])\n *      average([1, 2, 3, 4, 5, 6, 7]) //=> 4\n *\n *      var strangeConcat = R.converge(R.concat, [R.toUpper, R.toLower])\n *      strangeConcat(\"Yodel\") //=> \"YODELyodel\"\n *\n * @symb R.converge(f, [g, h])(a, b) = f(g(a, b), h(a, b))\n */\nvar converge = /*#__PURE__*/_curry2(function converge(after, fns) {\n  return curryN(reduce(max, 0, pluck('length', fns)), function () {\n    var args = arguments;\n    var context = this;\n    return after.apply(context, _map(function (fn) {\n      return fn.apply(context, args);\n    }, fns));\n  });\n});\nexport default converge;","import _curryN from './_curryN';\nimport _has from './_has';\nimport _xfBase from './_xfBase';\n\nvar XReduceBy = /*#__PURE__*/function () {\n  function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n    this.valueFn = valueFn;\n    this.valueAcc = valueAcc;\n    this.keyFn = keyFn;\n    this.xf = xf;\n    this.inputs = {};\n  }\n  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n  XReduceBy.prototype['@@transducer/result'] = function (result) {\n    var key;\n    for (key in this.inputs) {\n      if (_has(key, this.inputs)) {\n        result = this.xf['@@transducer/step'](result, this.inputs[key]);\n        if (result['@@transducer/reduced']) {\n          result = result['@@transducer/value'];\n          break;\n        }\n      }\n    }\n    this.inputs = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XReduceBy.prototype['@@transducer/step'] = function (result, input) {\n    var key = this.keyFn(input);\n    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];\n    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n    return result;\n  };\n\n  return XReduceBy;\n}();\n\nvar _xreduceBy = /*#__PURE__*/_curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {\n  return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n});\nexport default _xreduceBy;","import _curryN from './internal/_curryN';\nimport _dispatchable from './internal/_dispatchable';\nimport _has from './internal/_has';\nimport _reduce from './internal/_reduce';\nimport _xreduceBy from './internal/_xreduceBy';\n\n/**\n * Groups the elements of the list according to the result of calling\n * the String-returning function `keyFn` on each element and reduces the elements\n * of each group to a single value via the reducer function `valueFn`.\n *\n * This function is basically a more general [`groupBy`](#groupBy) function.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category List\n * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n * @param {Function} valueFn The function that reduces the elements of each group to a single\n *        value. Receives two values, accumulator for a particular group and the current element.\n * @param {*} acc The (initial) accumulator value for each group.\n * @param {Function} keyFn The function that maps the list's element into a key.\n * @param {Array} list The array to group.\n * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n *         `valueFn` for elements which produced that key when passed to `keyFn`.\n * @see R.groupBy, R.reduce\n * @example\n *\n *      var reduceToNamesBy = R.reduceBy((acc, student) => acc.concat(student.name), []);\n *      var namesByGrade = reduceToNamesBy(function(student) {\n *        var score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      var students = [{name: 'Lucy', score: 92},\n *                      {name: 'Drew', score: 85},\n *                      // ...\n *                      {name: 'Bart', score: 62}];\n *      namesByGrade(students);\n *      // {\n *      //   'A': ['Lucy'],\n *      //   'B': ['Drew']\n *      //   // ...,\n *      //   'F': ['Bart']\n *      // }\n */\nvar reduceBy = /*#__PURE__*/_curryN(4, [], /*#__PURE__*/_dispatchable([], _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {\n  return _reduce(function (acc, elt) {\n    var key = keyFn(elt);\n    acc[key] = valueFn(_has(key, acc) ? acc[key] : valueAcc, elt);\n    return acc;\n  }, {}, list);\n}));\nexport default reduceBy;","import reduceBy from './reduceBy';\n\n/**\n * Counts the elements of a list according to how many match each value of a\n * key generated by the supplied function. Returns an object mapping the keys\n * produced by `fn` to the number of occurrences in the list. Note that all\n * keys are coerced to strings because of how JavaScript objects work.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig (a -> String) -> [a] -> {*}\n * @param {Function} fn The function used to map values to keys.\n * @param {Array} list The list to count elements from.\n * @return {Object} An object mapping keys to number of occurrences in the list.\n * @example\n *\n *      var numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];\n *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}\n *\n *      var letters = ['a', 'b', 'A', 'a', 'B', 'c'];\n *      R.countBy(R.toLower)(letters);   //=> {'a': 3, 'b': 2, 'c': 1}\n */\nvar countBy = /*#__PURE__*/reduceBy(function (acc, elem) {\n  return acc + 1;\n}, 0);\nexport default countBy;","import add from './add';\n\n/**\n * Decrements its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n - 1\n * @see R.inc\n * @example\n *\n *      R.dec(42); //=> 41\n */\nvar dec = /*#__PURE__*/add(-1);\nexport default dec;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns the second argument if it is not `null`, `undefined` or `NaN`;\n * otherwise the first argument is returned.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {a} default The default value.\n * @param {b} val `val` will be returned instead of `default` unless `val` is `null`, `undefined` or `NaN`.\n * @return {*} The second value if it is not `null`, `undefined` or `NaN`, otherwise the default value\n * @example\n *\n *      var defaultTo42 = R.defaultTo(42);\n *\n *      defaultTo42(null);  //=> 42\n *      defaultTo42(undefined);  //=> 42\n *      defaultTo42('Ramda');  //=> 'Ramda'\n *      // parseInt('string') results in NaN\n *      defaultTo42(parseInt('string')); //=> 42\n */\nvar defaultTo = /*#__PURE__*/_curry2(function defaultTo(d, v) {\n  return v == null || v !== v ? d : v;\n});\nexport default defaultTo;","import _curry3 from './internal/_curry3';\n\n/**\n * Makes a descending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) > fn(b), `1` if fn(b) > fn(a), otherwise `0`\n * @see R.ascend\n * @example\n *\n *      var byAge = R.descend(R.prop('age'));\n *      var people = [\n *        // ...\n *      ];\n *      var peopleByOldestFirst = R.sort(byAge, people);\n */\nvar descend = /*#__PURE__*/_curry3(function descend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa > bb ? -1 : aa < bb ? 1 : 0;\n});\nexport default descend;","import _contains from './internal/_contains';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Objects and Arrays are compared in terms of\n * value equality, not reference equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.differenceWith, R.symmetricDifference, R.symmetricDifferenceWith, R.without\n * @example\n *\n *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n *      R.difference([{a: 1}, {b: 2}], [{a: 1}, {c: 3}]) //=> [{b: 2}]\n */\nvar difference = /*#__PURE__*/_curry2(function difference(first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  while (idx < firstLen) {\n    if (!_contains(first[idx], second) && !_contains(first[idx], out)) {\n      out[out.length] = first[idx];\n    }\n    idx += 1;\n  }\n  return out;\n});\nexport default difference;","import _containsWith from './internal/_containsWith';\nimport _curry3 from './internal/_curry3';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Duplication is determined according to the\n * value returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.difference, R.symmetricDifference, R.symmetricDifferenceWith\n * @example\n *\n *      var cmp = (x, y) => x.a === y.a;\n *      var l1 = [{a: 1}, {a: 2}, {a: 3}];\n *      var l2 = [{a: 3}, {a: 4}];\n *      R.differenceWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}]\n */\nvar differenceWith = /*#__PURE__*/_curry3(function differenceWith(pred, first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  while (idx < firstLen) {\n    if (!_containsWith(pred, first[idx], second) && !_containsWith(pred, first[idx], out)) {\n      out.push(first[idx]);\n    }\n    idx += 1;\n  }\n  return out;\n});\nexport default differenceWith;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns a new object that does not contain a `prop` property.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Object\n * @sig String -> {k: v} -> {k: v}\n * @param {String} prop The name of the property to dissociate\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original but without the specified property\n * @see R.assoc\n * @example\n *\n *      R.dissoc('b', {a: 1, b: 2, c: 3}); //=> {a: 1, c: 3}\n */\nvar dissoc = /*#__PURE__*/_curry2(function dissoc(prop, obj) {\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  delete result[prop];\n  return result;\n});\nexport default dissoc;","import _curry3 from './internal/_curry3';\n\n/**\n * Removes the sub-list of `list` starting at index `start` and containing\n * `count` elements. _Note that this is not destructive_: it returns a copy of\n * the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @param {Number} start The position to start removing elements\n * @param {Number} count The number of elements to remove\n * @param {Array} list The list to remove from\n * @return {Array} A new Array with `count` elements from `start` removed.\n * @example\n *\n *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n */\nvar remove = /*#__PURE__*/_curry3(function remove(start, count, list) {\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(start, count);\n  return result;\n});\nexport default remove;","import _curry3 from './internal/_curry3';\nimport adjust from './adjust';\nimport always from './always';\n\n/**\n * Returns a new copy of the array with the element at the provided index\n * replaced with the given value.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} idx The index to update.\n * @param {*} x The value to exist at the given index of the returned array.\n * @param {Array|Arguments} list The source array-like object to be updated.\n * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n * @see R.adjust\n * @example\n *\n *      R.update(1, 11, [0, 1, 2]);     //=> [0, 11, 2]\n *      R.update(1)(11)([0, 1, 2]);     //=> [0, 11, 2]\n * @symb R.update(-1, a, [b, c]) = [b, a]\n * @symb R.update(0, a, [b, c]) = [a, c]\n * @symb R.update(1, a, [b, c]) = [b, a]\n */\nvar update = /*#__PURE__*/_curry3(function update(idx, x, list) {\n  return adjust(always(x), idx, list);\n});\nexport default update;","import _curry2 from './internal/_curry2';\nimport _isInteger from './internal/_isInteger';\nimport assoc from './assoc';\nimport dissoc from './dissoc';\nimport remove from './remove';\nimport update from './update';\n\n/**\n * Makes a shallow clone of an object, omitting the property at the given path.\n * Note that this copies and flattens prototype properties onto the new object\n * as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.11.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {k: v} -> {k: v}\n * @param {Array} path The path to the value to omit\n * @param {Object} obj The object to clone\n * @return {Object} A new object without the property at path\n * @see R.assocPath\n * @example\n *\n *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n */\nvar dissocPath = /*#__PURE__*/_curry2(function dissocPath(path, obj) {\n  switch (path.length) {\n    case 0:\n      return obj;\n    case 1:\n      return _isInteger(path[0]) ? remove(path[0], 1, obj) : dissoc(path[0], obj);\n    default:\n      var head = path[0];\n      var tail = Array.prototype.slice.call(path, 1);\n      if (obj[head] == null) {\n        return obj;\n      } else if (_isInteger(path[0])) {\n        return update(head, dissocPath(tail, obj[head]), obj);\n      } else {\n        return assoc(head, dissocPath(tail, obj[head]), obj);\n      }\n  }\n});\nexport default dissocPath;","import _curry2 from './internal/_curry2';\n\n/**\n * Divides two numbers. Equivalent to `a / b`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a / b`.\n * @see R.multiply\n * @example\n *\n *      R.divide(71, 100); //=> 0.71\n *\n *      var half = R.divide(R.__, 2);\n *      half(42); //=> 21\n *\n *      var reciprocal = R.divide(1);\n *      reciprocal(4);   //=> 0.25\n */\nvar divide = /*#__PURE__*/_curry2(function divide(a, b) {\n  return a / b;\n});\nexport default divide;","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XDrop = /*#__PURE__*/function () {\n  function XDrop(n, xf) {\n    this.xf = xf;\n    this.n = n;\n  }\n  XDrop.prototype['@@transducer/init'] = _xfBase.init;\n  XDrop.prototype['@@transducer/result'] = _xfBase.result;\n  XDrop.prototype['@@transducer/step'] = function (result, input) {\n    if (this.n > 0) {\n      this.n -= 1;\n      return result;\n    }\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDrop;\n}();\n\nvar _xdrop = /*#__PURE__*/_curry2(function _xdrop(n, xf) {\n  return new XDrop(n, xf);\n});\nexport default _xdrop;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xdrop from './internal/_xdrop';\nimport slice from './slice';\n\n/**\n * Returns all but the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `drop` method).\n *\n * Dispatches to the `drop` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*} A copy of list without the first `n` elements\n * @see R.take, R.transduce, R.dropLast, R.dropWhile\n * @example\n *\n *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(3, 'ramda');               //=> 'da'\n */\nvar drop = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['drop'], _xdrop, function drop(n, xs) {\n  return slice(Math.max(0, n), Infinity, xs);\n}));\nexport default drop;","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XTake = /*#__PURE__*/function () {\n  function XTake(n, xf) {\n    this.xf = xf;\n    this.n = n;\n    this.i = 0;\n  }\n  XTake.prototype['@@transducer/init'] = _xfBase.init;\n  XTake.prototype['@@transducer/result'] = _xfBase.result;\n  XTake.prototype['@@transducer/step'] = function (result, input) {\n    this.i += 1;\n    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);\n    return this.n >= 0 && this.i >= this.n ? _reduced(ret) : ret;\n  };\n\n  return XTake;\n}();\n\nvar _xtake = /*#__PURE__*/_curry2(function _xtake(n, xf) {\n  return new XTake(n, xf);\n});\nexport default _xtake;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xtake from './internal/_xtake';\nimport slice from './slice';\n\n/**\n * Returns the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `take` method).\n *\n * Dispatches to the `take` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*}\n * @see R.drop\n * @example\n *\n *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(3, 'ramda');               //=> 'ram'\n *\n *      var personnel = [\n *        'Dave Brubeck',\n *        'Paul Desmond',\n *        'Eugene Wright',\n *        'Joe Morello',\n *        'Gerry Mulligan',\n *        'Bob Bates',\n *        'Joe Dodge',\n *        'Ron Crotty'\n *      ];\n *\n *      var takeFive = R.take(5);\n *      takeFive(personnel);\n *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n * @symb R.take(-1, [a, b]) = [a, b]\n * @symb R.take(0, [a, b]) = []\n * @symb R.take(1, [a, b]) = [a]\n * @symb R.take(2, [a, b]) = [a, b]\n */\nvar take = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['take'], _xtake, function take(n, xs) {\n  return slice(0, n < 0 ? Infinity : n, xs);\n}));\nexport default take;","import take from '../take';\n\nexport default function dropLast(n, xs) {\n  return take(n < xs.length ? xs.length - n : 0, xs);\n}","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XDropLast = /*#__PURE__*/function () {\n  function XDropLast(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n  XDropLast.prototype['@@transducer/init'] = _xfBase.init;\n  XDropLast.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XDropLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.full) {\n      result = this.xf['@@transducer/step'](result, this.acc[this.pos]);\n    }\n    this.store(input);\n    return result;\n  };\n  XDropLast.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n\n  return XDropLast;\n}();\n\nvar _xdropLast = /*#__PURE__*/_curry2(function _xdropLast(n, xf) {\n  return new XDropLast(n, xf);\n});\nexport default _xdropLast;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _dropLast from './internal/_dropLast';\nimport _xdropLast from './internal/_xdropLast';\n\n/**\n * Returns a list containing all but the last `n` elements of the given `list`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements of `list` to skip.\n * @param {Array} list The list of elements to consider.\n * @return {Array} A copy of the list with only the first `list.length - n` elements\n * @see R.takeLast, R.drop, R.dropWhile, R.dropLastWhile\n * @example\n *\n *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(3, 'ramda');               //=> 'ra'\n */\nvar dropLast = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xdropLast, _dropLast));\nexport default dropLast;","import slice from '../slice';\n\nexport default function dropLastWhile(pred, xs) {\n  var idx = xs.length - 1;\n  while (idx >= 0 && pred(xs[idx])) {\n    idx -= 1;\n  }\n  return slice(0, idx + 1, xs);\n}","import _curry2 from './_curry2';\nimport _reduce from './_reduce';\nimport _xfBase from './_xfBase';\n\nvar XDropLastWhile = /*#__PURE__*/function () {\n  function XDropLastWhile(fn, xf) {\n    this.f = fn;\n    this.retained = [];\n    this.xf = xf;\n  }\n  XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropLastWhile.prototype['@@transducer/result'] = function (result) {\n    this.retained = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XDropLastWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.retain(result, input) : this.flush(result, input);\n  };\n  XDropLastWhile.prototype.flush = function (result, input) {\n    result = _reduce(this.xf['@@transducer/step'], result, this.retained);\n    this.retained = [];\n    return this.xf['@@transducer/step'](result, input);\n  };\n  XDropLastWhile.prototype.retain = function (result, input) {\n    this.retained.push(input);\n    return result;\n  };\n\n  return XDropLastWhile;\n}();\n\nvar _xdropLastWhile = /*#__PURE__*/_curry2(function _xdropLastWhile(fn, xf) {\n  return new XDropLastWhile(fn, xf);\n});\nexport default _xdropLastWhile;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _dropLastWhile from './internal/_dropLastWhile';\nimport _xdropLastWhile from './internal/_xdropLastWhile';\n\n/**\n * Returns a new list excluding all the tailing elements of a given list which\n * satisfy the supplied predicate function. It passes each value from the right\n * to the supplied predicate function, skipping elements until the predicate\n * function returns a `falsy` value. The predicate function is applied to one argument:\n * *(value)*.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} predicate The function to be called on each element\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array without any trailing elements that return `falsy` values from the `predicate`.\n * @see R.takeLastWhile, R.addIndex, R.drop, R.dropWhile\n * @example\n *\n *      var lteThree = x => x <= 3;\n *\n *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3, 4]\n *\n *      R.dropLastWhile(x => x !== 'd' , 'Ramda'); //=> 'Ramd'\n */\nvar dropLastWhile = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xdropLastWhile, _dropLastWhile));\nexport default dropLastWhile;","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XDropRepeatsWith = /*#__PURE__*/function () {\n  function XDropRepeatsWith(pred, xf) {\n    this.xf = xf;\n    this.pred = pred;\n    this.lastValue = undefined;\n    this.seenFirstValue = false;\n  }\n\n  XDropRepeatsWith.prototype['@@transducer/init'] = _xfBase.init;\n  XDropRepeatsWith.prototype['@@transducer/result'] = _xfBase.result;\n  XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {\n    var sameAsLast = false;\n    if (!this.seenFirstValue) {\n      this.seenFirstValue = true;\n    } else if (this.pred(this.lastValue, input)) {\n      sameAsLast = true;\n    }\n    this.lastValue = input;\n    return sameAsLast ? result : this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDropRepeatsWith;\n}();\n\nvar _xdropRepeatsWith = /*#__PURE__*/_curry2(function _xdropRepeatsWith(pred, xf) {\n  return new XDropRepeatsWith(pred, xf);\n});\nexport default _xdropRepeatsWith;","import _curry2 from './internal/_curry2';\nimport _isString from './internal/_isString';\n\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> a | Undefined\n * @sig Number -> String -> String\n * @param {Number} offset\n * @param {*} list\n * @return {*}\n * @example\n *\n *      var list = ['foo', 'bar', 'baz', 'quux'];\n *      R.nth(1, list); //=> 'bar'\n *      R.nth(-1, list); //=> 'quux'\n *      R.nth(-99, list); //=> undefined\n *\n *      R.nth(2, 'abc'); //=> 'c'\n *      R.nth(3, 'abc'); //=> ''\n * @symb R.nth(-1, [a, b, c]) = c\n * @symb R.nth(0, [a, b, c]) = a\n * @symb R.nth(1, [a, b, c]) = b\n */\nvar nth = /*#__PURE__*/_curry2(function nth(offset, list) {\n  var idx = offset < 0 ? list.length + offset : offset;\n  return _isString(list) ? list.charAt(idx) : list[idx];\n});\nexport default nth;","import nth from './nth';\n\n/**\n * Returns the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.init, R.head, R.tail\n * @example\n *\n *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n *      R.last([]); //=> undefined\n *\n *      R.last('abc'); //=> 'c'\n *      R.last(''); //=> ''\n */\nvar last = /*#__PURE__*/nth(-1);\nexport default last;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xdropRepeatsWith from './internal/_xdropRepeatsWith';\nimport last from './last';\n\n/**\n * Returns a new list without any consecutively repeating elements. Equality is\n * determined by applying the supplied predicate to each pair of consecutive elements. The\n * first element in a series of equal elements will be preserved.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *      var l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];\n *      R.dropRepeatsWith(R.eqBy(Math.abs), l); //=> [1, 3, 4, -5, 3]\n */\nvar dropRepeatsWith = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xdropRepeatsWith, function dropRepeatsWith(pred, list) {\n  var result = [];\n  var idx = 1;\n  var len = list.length;\n  if (len !== 0) {\n    result[0] = list[0];\n    while (idx < len) {\n      if (!pred(last(result), list[idx])) {\n        result[result.length] = list[idx];\n      }\n      idx += 1;\n    }\n  }\n  return result;\n}));\nexport default dropRepeatsWith;","import _curry1 from './internal/_curry1';\nimport _dispatchable from './internal/_dispatchable';\nimport _xdropRepeatsWith from './internal/_xdropRepeatsWith';\nimport dropRepeatsWith from './dropRepeatsWith';\nimport equals from './equals';\n\n/**\n * Returns a new list without any consecutively repeating elements.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]\n */\nvar dropRepeats = /*#__PURE__*/_curry1( /*#__PURE__*/_dispatchable([], /*#__PURE__*/_xdropRepeatsWith(equals), /*#__PURE__*/dropRepeatsWith(equals)));\nexport default dropRepeats;","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XDropWhile = /*#__PURE__*/function () {\n  function XDropWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n  XDropWhile.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f) {\n      if (this.f(input)) {\n        return result;\n      }\n      this.f = null;\n    }\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDropWhile;\n}();\n\nvar _xdropWhile = /*#__PURE__*/_curry2(function _xdropWhile(f, xf) {\n  return new XDropWhile(f, xf);\n});\nexport default _xdropWhile;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xdropWhile from './internal/_xdropWhile';\nimport slice from './slice';\n\n/**\n * Returns a new list excluding the leading elements of a given list which\n * satisfy the supplied predicate function. It passes each value to the supplied\n * predicate function, skipping elements while the predicate function returns\n * `true`. The predicate function is applied to one argument: *(value)*.\n *\n * Dispatches to the `dropWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.takeWhile, R.transduce, R.addIndex\n * @example\n *\n *      var lteTwo = x => x <= 2;\n *\n *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]\n *\n *      R.dropWhile(x => x !== 'd' , 'Ramda'); //=> 'da'\n */\nvar dropWhile = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['dropWhile'], _xdropWhile, function dropWhile(pred, xs) {\n  var idx = 0;\n  var len = xs.length;\n  while (idx < len && pred(xs[idx])) {\n    idx += 1;\n  }\n  return slice(idx, Infinity, xs);\n}));\nexport default dropWhile;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if one or both of its arguments are `true`. Returns `false`\n * if both arguments are `false`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any} the first argument if truthy, otherwise the second argument.\n * @see R.either\n * @example\n *\n *      R.or(true, true); //=> true\n *      R.or(true, false); //=> true\n *      R.or(false, true); //=> true\n *      R.or(false, false); //=> false\n */\nvar or = /*#__PURE__*/_curry2(function or(a, b) {\n  return a || b;\n});\nexport default or;","import _curry2 from './internal/_curry2';\nimport _isFunction from './internal/_isFunction';\nimport lift from './lift';\nimport or from './or';\n\n/**\n * A function wrapping calls to the two functions in an `||` operation,\n * returning the result of the first function if it is truth-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * truth-y value.\n *\n * In addition to functions, `R.either` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f a predicate\n * @param {Function} g another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n * @see R.or\n * @example\n *\n *      var gt10 = x => x > 10;\n *      var even = x => x % 2 === 0;\n *      var f = R.either(gt10, even);\n *      f(101); //=> true\n *      f(8); //=> true\n */\nvar either = /*#__PURE__*/_curry2(function either(f, g) {\n  return _isFunction(f) ? function _either() {\n    return f.apply(this, arguments) || g.apply(this, arguments);\n  } : lift(or)(f, g);\n});\nexport default either;","import _curry1 from './internal/_curry1';\nimport _isArguments from './internal/_isArguments';\nimport _isArray from './internal/_isArray';\nimport _isObject from './internal/_isObject';\nimport _isString from './internal/_isString';\n\n/**\n * Returns the empty value of its argument's type. Ramda defines the empty\n * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other\n * types are supported if they define `<Type>.empty`,\n * `<Type>.prototype.empty` or implement the\n * [FantasyLand Monoid spec](https://github.com/fantasyland/fantasy-land#monoid).\n *\n * Dispatches to the `empty` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> a\n * @param {*} x\n * @return {*}\n * @example\n *\n *      R.empty(Just(42));      //=> Nothing()\n *      R.empty([1, 2, 3]);     //=> []\n *      R.empty('unicorns');    //=> ''\n *      R.empty({x: 1, y: 2});  //=> {}\n */\nvar empty = /*#__PURE__*/_curry1(function empty(x) {\n  return x != null && typeof x['fantasy-land/empty'] === 'function' ? x['fantasy-land/empty']() : x != null && x.constructor != null && typeof x.constructor['fantasy-land/empty'] === 'function' ? x.constructor['fantasy-land/empty']() : x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {\n    return arguments;\n  }() :\n  // else\n  void 0;\n});\nexport default empty;","import _curry2 from './internal/_curry2';\nimport drop from './drop';\n\n/**\n * Returns a new list containing the last `n` elements of the given list.\n * If `n > list.length`, returns a list of `list.length` elements.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements to return.\n * @param {Array} xs The collection to consider.\n * @return {Array}\n * @see R.dropLast\n * @example\n *\n *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(3, 'ramda');               //=> 'mda'\n */\nvar takeLast = /*#__PURE__*/_curry2(function takeLast(n, xs) {\n  return drop(n >= 0 ? xs.length - n : 0, xs);\n});\nexport default takeLast;","import _curry2 from './internal/_curry2';\nimport equals from './equals';\nimport takeLast from './takeLast';\n\n/**\n * Checks if a list ends with the provided values\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> Boolean\n * @sig String -> Boolean\n * @param {*} suffix\n * @param {*} list\n * @return {Boolean}\n * @example\n *\n *      R.endsWith('c', 'abc')                //=> true\n *      R.endsWith('b', 'abc')                //=> false\n *      R.endsWith(['c'], ['a', 'b', 'c'])    //=> true\n *      R.endsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\nvar endsWith = /*#__PURE__*/_curry2(function (suffix, list) {\n  return equals(takeLast(suffix.length, list), suffix);\n});\nexport default endsWith;","import _curry3 from './internal/_curry3';\nimport equals from './equals';\n\n/**\n * Takes a function and two values in its domain and returns `true` if the\n * values map to the same value in the codomain; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Relation\n * @sig (a -> b) -> a -> a -> Boolean\n * @param {Function} f\n * @param {*} x\n * @param {*} y\n * @return {Boolean}\n * @example\n *\n *      R.eqBy(Math.abs, 5, -5); //=> true\n */\nvar eqBy = /*#__PURE__*/_curry3(function eqBy(f, x, y) {\n  return equals(f(x), f(y));\n});\nexport default eqBy;","import _curry3 from './internal/_curry3';\nimport equals from './equals';\n\n/**\n * Reports whether two objects have the same value, in [`R.equals`](#equals)\n * terms, for the specified property. Useful as a curried predicate.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig k -> {k: v} -> {k: v} -> Boolean\n * @param {String} prop The name of the property to compare\n * @param {Object} obj1\n * @param {Object} obj2\n * @return {Boolean}\n *\n * @example\n *\n *      var o1 = { a: 1, b: 2, c: 3, d: 4 };\n *      var o2 = { a: 10, b: 20, c: 3, d: 40 };\n *      R.eqProps('a', o1, o2); //=> false\n *      R.eqProps('c', o1, o2); //=> true\n */\nvar eqProps = /*#__PURE__*/_curry3(function eqProps(prop, obj1, obj2) {\n  return equals(obj1[prop], obj2[prop]);\n});\nexport default eqProps;","import _curry2 from './internal/_curry2';\n\n/**\n * Creates a new object by recursively evolving a shallow copy of `object`,\n * according to the `transformation` functions. All non-primitive properties\n * are copied by reference.\n *\n * A `transformation` function will not be invoked if its corresponding key\n * does not exist in the evolved object.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {k: (v -> v)} -> {k: v} -> {k: v}\n * @param {Object} transformations The object specifying transformation functions to apply\n *        to the object.\n * @param {Object} object The object to be transformed.\n * @return {Object} The transformed object.\n * @example\n *\n *      var tomato  = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};\n *      var transformations = {\n *        firstName: R.trim,\n *        lastName: R.trim, // Will not get invoked.\n *        data: {elapsed: R.add(1), remaining: R.add(-1)}\n *      };\n *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}\n */\nvar evolve = /*#__PURE__*/_curry2(function evolve(transformations, object) {\n  var result = {};\n  var transformation, key, type;\n  for (key in object) {\n    transformation = transformations[key];\n    type = typeof transformation;\n    result[key] = type === 'function' ? transformation(object[key]) : transformation && type === 'object' ? evolve(transformation, object[key]) : object[key];\n  }\n  return result;\n});\nexport default evolve;","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XFind = /*#__PURE__*/function () {\n  function XFind(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.found = false;\n  }\n  XFind.prototype['@@transducer/init'] = _xfBase.init;\n  XFind.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, void 0);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XFind.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, input));\n    }\n    return result;\n  };\n\n  return XFind;\n}();\n\nvar _xfind = /*#__PURE__*/_curry2(function _xfind(f, xf) {\n  return new XFind(f, xf);\n});\nexport default _xfind;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xfind from './internal/_xfind';\n\n/**\n * Returns the first element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Dispatches to the `find` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n *        desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n *      R.find(R.propEq('a', 4))(xs); //=> undefined\n */\nvar find = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['find'], _xfind, function find(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n    idx += 1;\n  }\n}));\nexport default find;","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XFindIndex = /*#__PURE__*/function () {\n  function XFindIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.found = false;\n  }\n  XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n  XFindIndex.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, -1);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XFindIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n    }\n    return result;\n  };\n\n  return XFindIndex;\n}();\n\nvar _xfindIndex = /*#__PURE__*/_curry2(function _xfindIndex(f, xf) {\n  return new XFindIndex(f, xf);\n});\nexport default _xfindIndex;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xfindIndex from './internal/_xfindIndex';\n\n/**\n * Returns the index of the first element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\n *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\n */\nvar findIndex = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xfindIndex, function findIndex(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n}));\nexport default findIndex;","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XFindLast = /*#__PURE__*/function () {\n  function XFindLast(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFindLast.prototype['@@transducer/init'] = _xfBase.init;\n  XFindLast.prototype['@@transducer/result'] = function (result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));\n  };\n  XFindLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.last = input;\n    }\n    return result;\n  };\n\n  return XFindLast;\n}();\n\nvar _xfindLast = /*#__PURE__*/_curry2(function _xfindLast(f, xf) {\n  return new XFindLast(f, xf);\n});\nexport default _xfindLast;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xfindLast from './internal/_xfindLast';\n\n/**\n * Returns the last element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLast(R.propEq('a', 1))(xs); //=> {a: 1, b: 1}\n *      R.findLast(R.propEq('a', 4))(xs); //=> undefined\n */\nvar findLast = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xfindLast, function findLast(fn, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n    idx -= 1;\n  }\n}));\nexport default findLast;","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XFindLastIndex = /*#__PURE__*/function () {\n  function XFindLastIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.lastIdx = -1;\n  }\n  XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;\n  XFindLastIndex.prototype['@@transducer/result'] = function (result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));\n  };\n  XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n    if (this.f(input)) {\n      this.lastIdx = this.idx;\n    }\n    return result;\n  };\n\n  return XFindLastIndex;\n}();\n\nvar _xfindLastIndex = /*#__PURE__*/_curry2(function _xfindLastIndex(f, xf) {\n  return new XFindLastIndex(f, xf);\n});\nexport default _xfindLastIndex;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xfindLastIndex from './internal/_xfindLastIndex';\n\n/**\n * Returns the index of the last element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLastIndex(R.propEq('a', 1))(xs); //=> 1\n *      R.findLastIndex(R.propEq('a', 4))(xs); //=> -1\n */\nvar findLastIndex = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xfindLastIndex, function findLastIndex(fn, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n    idx -= 1;\n  }\n  return -1;\n}));\nexport default findLastIndex;","import _curry1 from './internal/_curry1';\nimport _makeFlat from './internal/_makeFlat';\n\n/**\n * Returns a new list by pulling every item out of it (and all its sub-arrays)\n * and putting them in a new array, depth-first.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b]\n * @param {Array} list The array to consider.\n * @return {Array} The flattened list.\n * @see R.unnest\n * @example\n *\n *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n */\nvar flatten = /*#__PURE__*/_curry1( /*#__PURE__*/_makeFlat(true));\nexport default flatten;","import _curry1 from './internal/_curry1';\nimport curryN from './curryN';\n\n/**\n * Returns a new function much like the supplied one, except that the first two\n * arguments' order is reversed.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b, c, ...) -> z) -> (b -> a -> c -> ... -> z)\n * @param {Function} fn The function to invoke with its first two parameters reversed.\n * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n * @example\n *\n *      var mergeThree = (a, b, c) => [].concat(a, b, c);\n *\n *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n *\n *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n * @symb R.flip(f)(a, b, c) = f(b, a, c)\n */\nvar flip = /*#__PURE__*/_curry1(function flip(fn) {\n  return curryN(fn.length, function (a, b) {\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = b;\n    args[1] = a;\n    return fn.apply(this, args);\n  });\n});\nexport default flip;","import _checkForMethod from './internal/_checkForMethod';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Iterate over an input `list`, calling a provided function `fn` for each\n * element in the list.\n *\n * `fn` receives one argument: *(value)*.\n *\n * Note: `R.forEach` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.forEach` method. For more\n * details on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n *\n * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns\n * the original array. In some libraries this function is named `each`.\n *\n * Dispatches to the `forEach` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> *) -> [a] -> [a]\n * @param {Function} fn The function to invoke. Receives one argument, `value`.\n * @param {Array} list The list to iterate over.\n * @return {Array} The original list.\n * @see R.addIndex\n * @example\n *\n *      var printXPlusFive = x => console.log(x + 5);\n *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n *      // logs 6\n *      // logs 7\n *      // logs 8\n * @symb R.forEach(f, [a, b, c]) = [a, b, c]\n */\nvar forEach = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('forEach', function forEach(fn, list) {\n  var len = list.length;\n  var idx = 0;\n  while (idx < len) {\n    fn(list[idx]);\n    idx += 1;\n  }\n  return list;\n}));\nexport default forEach;","import _curry2 from './internal/_curry2';\nimport keys from './keys';\n\n/**\n * Iterate over an input `object`, calling a provided function `fn` for each\n * key and value in the object.\n *\n * `fn` receives three argument: *(value, key, obj)*.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Object\n * @sig ((a, String, StrMap a) -> Any) -> StrMap a -> StrMap a\n * @param {Function} fn The function to invoke. Receives three argument, `value`, `key`, `obj`.\n * @param {Object} obj The object to iterate over.\n * @return {Object} The original object.\n * @example\n *\n *      var printKeyConcatValue = (value, key) => console.log(key + ':' + value);\n *      R.forEachObjIndexed(printKeyConcatValue, {x: 1, y: 2}); //=> {x: 1, y: 2}\n *      // logs x:1\n *      // logs y:2\n * @symb R.forEachObjIndexed(f, {x: a, y: b}) = {x: a, y: b}\n */\nvar forEachObjIndexed = /*#__PURE__*/_curry2(function forEachObjIndexed(fn, obj) {\n  var keyList = keys(obj);\n  var idx = 0;\n  while (idx < keyList.length) {\n    var key = keyList[idx];\n    fn(obj[key], key, obj);\n    idx += 1;\n  }\n  return obj;\n});\nexport default forEachObjIndexed;","import _curry1 from './internal/_curry1';\n\n/**\n * Creates a new object from a list key-value pairs. If a key appears in\n * multiple pairs, the rightmost pair is included in the object.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [[k,v]] -> {k: v}\n * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n * @return {Object} The object made by pairing up `keys` and `values`.\n * @see R.toPairs, R.pair\n * @example\n *\n *      R.fromPairs([['a', 1], ['b', 2], ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n */\nvar fromPairs = /*#__PURE__*/_curry1(function fromPairs(pairs) {\n  var result = {};\n  var idx = 0;\n  while (idx < pairs.length) {\n    result[pairs[idx][0]] = pairs[idx][1];\n    idx += 1;\n  }\n  return result;\n});\nexport default fromPairs;","import _checkForMethod from './internal/_checkForMethod';\nimport _curry2 from './internal/_curry2';\nimport reduceBy from './reduceBy';\n\n/**\n * Splits a list into sub-lists stored in an object, based on the result of\n * calling a String-returning function on each element, and grouping the\n * results according to values returned.\n *\n * Dispatches to the `groupBy` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> String) -> [a] -> {String: [a]}\n * @param {Function} fn Function :: a -> String\n * @param {Array} list The array to group\n * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n *         that produced that key when passed to `fn`.\n * @see R.transduce\n * @example\n *\n *      var byGrade = R.groupBy(function(student) {\n *        var score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      var students = [{name: 'Abby', score: 84},\n *                      {name: 'Eddy', score: 58},\n *                      // ...\n *                      {name: 'Jack', score: 69}];\n *      byGrade(students);\n *      // {\n *      //   'A': [{name: 'Dianne', score: 99}],\n *      //   'B': [{name: 'Abby', score: 84}]\n *      //   // ...,\n *      //   'F': [{name: 'Eddy', score: 58}]\n *      // }\n */\nvar groupBy = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('groupBy', /*#__PURE__*/reduceBy(function (acc, item) {\n  if (acc == null) {\n    acc = [];\n  }\n  acc.push(item);\n  return acc;\n}, null)));\nexport default groupBy;","import _curry2 from './internal/_curry2';\n\n/**\n * Takes a list and returns a list of lists where each sublist's elements are\n * all satisfied pairwise comparison according to the provided function.\n * Only adjacent elements are passed to the comparison function.\n *\n * @func\n * @memberOf R\n * @since v0.21.0\n * @category List\n * @sig ((a, a) → Boolean) → [a] → [[a]]\n * @param {Function} fn Function for determining whether two given (adjacent)\n *        elements should be in the same group\n * @param {Array} list The array to group. Also accepts a string, which will be\n *        treated as a list of characters.\n * @return {List} A list that contains sublists of elements,\n *         whose concatenations are equal to the original list.\n * @example\n *\n * R.groupWith(R.equals, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a + 1 === b, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0, 1], [1, 2, 3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a % 2 === b % 2, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3, 5], [8], [13, 21]]\n *\n * R.groupWith(R.eqBy(isVowel), 'aestiou')\n * //=> ['ae', 'st', 'iou']\n */\nvar groupWith = /*#__PURE__*/_curry2(function (fn, list) {\n  var res = [];\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    var nextidx = idx + 1;\n    while (nextidx < len && fn(list[nextidx - 1], list[nextidx])) {\n      nextidx += 1;\n    }\n    res.push(list.slice(idx, nextidx));\n    idx = nextidx;\n  }\n  return res;\n});\nexport default groupWith;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if the first argument is greater than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.lt\n * @example\n *\n *      R.gt(2, 1); //=> true\n *      R.gt(2, 2); //=> false\n *      R.gt(2, 3); //=> false\n *      R.gt('a', 'z'); //=> false\n *      R.gt('z', 'a'); //=> true\n */\nvar gt = /*#__PURE__*/_curry2(function gt(a, b) {\n  return a > b;\n});\nexport default gt;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if the first argument is greater than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.lte\n * @example\n *\n *      R.gte(2, 1); //=> true\n *      R.gte(2, 2); //=> true\n *      R.gte(2, 3); //=> false\n *      R.gte('a', 'z'); //=> false\n *      R.gte('z', 'a'); //=> true\n */\nvar gte = /*#__PURE__*/_curry2(function gte(a, b) {\n  return a >= b;\n});\nexport default gte;","import _curry2 from './internal/_curry2';\nimport _has from './internal/_has';\n\n/**\n * Returns whether or not an object has an own property with the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      var hasName = R.has('name');\n *      hasName({name: 'alice'});   //=> true\n *      hasName({name: 'bob'});     //=> true\n *      hasName({});                //=> false\n *\n *      var point = {x: 0, y: 0};\n *      var pointHas = R.has(R.__, point);\n *      pointHas('x');  //=> true\n *      pointHas('y');  //=> true\n *      pointHas('z');  //=> false\n */\nvar has = /*#__PURE__*/_curry2(_has);\nexport default has;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns whether or not an object or its prototype chain has a property with\n * the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      function Rectangle(width, height) {\n *        this.width = width;\n *        this.height = height;\n *      }\n *      Rectangle.prototype.area = function() {\n *        return this.width * this.height;\n *      };\n *\n *      var square = new Rectangle(2, 2);\n *      R.hasIn('width', square);  //=> true\n *      R.hasIn('area', square);  //=> true\n */\nvar hasIn = /*#__PURE__*/_curry2(function hasIn(prop, obj) {\n  return prop in obj;\n});\nexport default hasIn;","import nth from './nth';\n\n/**\n * Returns the first element of the given list or string. In some libraries\n * this function is named `first`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {Array|String} list\n * @return {*}\n * @see R.tail, R.init, R.last\n * @example\n *\n *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n *      R.head([]); //=> undefined\n *\n *      R.head('abc'); //=> 'a'\n *      R.head(''); //=> ''\n */\nvar head = /*#__PURE__*/nth(0);\nexport default head;","export default function _identity(x) {\n  return x;\n}","import _curry1 from './internal/_curry1';\nimport _identity from './internal/_identity';\n\n/**\n * A function that does nothing but return the parameter supplied to it. Good\n * as a default or placeholder function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> a\n * @param {*} x The value to return.\n * @return {*} The input value, `x`.\n * @example\n *\n *      R.identity(1); //=> 1\n *\n *      var obj = {};\n *      R.identity(obj) === obj; //=> true\n * @symb R.identity(a) = a\n */\nvar identity = /*#__PURE__*/_curry1(_identity);\nexport default identity;","import _curry3 from './internal/_curry3';\nimport curryN from './curryN';\n\n/**\n * Creates a function that will process either the `onTrue` or the `onFalse`\n * function depending upon the result of the `condition` predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n * @param {Function} condition A predicate function\n * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n * @return {Function} A new unary function that will process either the `onTrue` or the `onFalse`\n *                    function depending upon the result of the `condition` predicate.\n * @see R.unless, R.when\n * @example\n *\n *      var incCount = R.ifElse(\n *        R.has('count'),\n *        R.over(R.lensProp('count'), R.inc),\n *        R.assoc('count', 1)\n *      );\n *      incCount({});           //=> { count: 1 }\n *      incCount({ count: 1 }); //=> { count: 2 }\n */\nvar ifElse = /*#__PURE__*/_curry3(function ifElse(condition, onTrue, onFalse) {\n  return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {\n    return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n  });\n});\nexport default ifElse;","import add from './add';\n\n/**\n * Increments its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n + 1\n * @see R.dec\n * @example\n *\n *      R.inc(42); //=> 43\n */\nvar inc = /*#__PURE__*/add(1);\nexport default inc;","import reduceBy from './reduceBy';\n\n/**\n * Given a function that generates a key, turns a list of objects into an\n * object indexing the objects by the given key. Note that if multiple\n * objects generate the same value for the indexing key only the last value\n * will be included in the generated object.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}\n * @param {Function} fn Function :: a -> String\n * @param {Array} array The array of objects to index\n * @return {Object} An object indexing each array element by the given property.\n * @example\n *\n *      var list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n *      R.indexBy(R.prop('id'), list);\n *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n */\nvar indexBy = /*#__PURE__*/reduceBy(function (acc, elem) {\n  return elem;\n}, null);\nexport default indexBy;","import _curry2 from './internal/_curry2';\nimport _indexOf from './internal/_indexOf';\nimport _isArray from './internal/_isArray';\n\n/**\n * Returns the position of the first occurrence of an item in an array, or -1\n * if the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.lastIndexOf\n * @example\n *\n *      R.indexOf(3, [1,2,3,4]); //=> 2\n *      R.indexOf(10, [1,2,3,4]); //=> -1\n */\nvar indexOf = /*#__PURE__*/_curry2(function indexOf(target, xs) {\n  return typeof xs.indexOf === 'function' && !_isArray(xs) ? xs.indexOf(target) : _indexOf(xs, target, 0);\n});\nexport default indexOf;","import slice from './slice';\n\n/**\n * Returns all but the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.last, R.head, R.tail\n * @example\n *\n *      R.init([1, 2, 3]);  //=> [1, 2]\n *      R.init([1, 2]);     //=> [1]\n *      R.init([1]);        //=> []\n *      R.init([]);         //=> []\n *\n *      R.init('abc');  //=> 'ab'\n *      R.init('ab');   //=> 'a'\n *      R.init('a');    //=> ''\n *      R.init('');     //=> ''\n */\nvar init = /*#__PURE__*/slice(0, -1);\nexport default init;","import _containsWith from './internal/_containsWith';\nimport _curry3 from './internal/_curry3';\nimport _filter from './internal/_filter';\n\n/**\n * Takes a predicate `pred`, a list `xs`, and a list `ys`, and returns a list\n * `xs'` comprising each of the elements of `xs` which is equal to one or more\n * elements of `ys` according to `pred`.\n *\n * `pred` must be a binary function expecting an element from each list.\n *\n * `xs`, `ys`, and `xs'` are treated as sets, semantically, so ordering should\n * not be significant, but since `xs'` is ordered the implementation guarantees\n * that its values are in the same order as they appear in `xs`. Duplicates are\n * not removed, so `xs'` may contain duplicates if `xs` contains duplicates.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Relation\n * @sig ((a, b) -> Boolean) -> [a] -> [b] -> [a]\n * @param {Function} pred\n * @param {Array} xs\n * @param {Array} ys\n * @return {Array}\n * @see R.intersection\n * @example\n *\n *      R.innerJoin(\n *        (record, id) => record.id === id,\n *        [{id: 824, name: 'Richie Furay'},\n *         {id: 956, name: 'Dewey Martin'},\n *         {id: 313, name: 'Bruce Palmer'},\n *         {id: 456, name: 'Stephen Stills'},\n *         {id: 177, name: 'Neil Young'}],\n *        [177, 456, 999]\n *      );\n *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n */\nvar innerJoin = /*#__PURE__*/_curry3(function innerJoin(pred, xs, ys) {\n  return _filter(function (x) {\n    return _containsWith(pred, x, ys);\n  }, xs);\n});\nexport default innerJoin;","import _curry3 from './internal/_curry3';\n\n/**\n * Inserts the supplied element into the list, at the specified `index`. _Note that\n\n * this is not destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} index The position to insert the element\n * @param {*} elt The element to insert into the Array\n * @param {Array} list The list to insert into\n * @return {Array} A new Array with `elt` inserted at `index`.\n * @example\n *\n *      R.insert(2, 'x', [1,2,3,4]); //=> [1,2,'x',3,4]\n */\nvar insert = /*#__PURE__*/_curry3(function insert(idx, elt, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(idx, 0, elt);\n  return result;\n});\nexport default insert;","import _curry3 from './internal/_curry3';\n\n/**\n * Inserts the sub-list into the list, at the specified `index`. _Note that this is not\n * destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig Number -> [a] -> [a] -> [a]\n * @param {Number} index The position to insert the sub-list\n * @param {Array} elts The sub-list to insert into the Array\n * @param {Array} list The list to insert the sub-list into\n * @return {Array} A new Array with `elts` inserted starting at `index`.\n * @example\n *\n *      R.insertAll(2, ['x','y','z'], [1,2,3,4]); //=> [1,2,'x','y','z',3,4]\n */\nvar insertAll = /*#__PURE__*/_curry3(function insertAll(idx, elts, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  return [].concat(Array.prototype.slice.call(list, 0, idx), elts, Array.prototype.slice.call(list, idx));\n});\nexport default insertAll;","import _contains from './_contains';\n\nvar _Set = /*#__PURE__*/function () {\n  function _Set() {\n    /* globals Set */\n    this._nativeSet = typeof Set === 'function' ? new Set() : null;\n    this._items = {};\n  }\n\n  // until we figure out why jsdoc chokes on this\n  // @param item The item to add to the Set\n  // @returns {boolean} true if the item did not exist prior, otherwise false\n  //\n  _Set.prototype.add = function (item) {\n    return !hasOrAdd(item, true, this);\n  };\n\n  //\n  // @param item The item to check for existence in the Set\n  // @returns {boolean} true if the item exists in the Set, otherwise false\n  //\n  _Set.prototype.has = function (item) {\n    return hasOrAdd(item, false, this);\n  };\n\n  //\n  // Combines the logic for checking whether an item is a member of the set and\n  // for adding a new item to the set.\n  //\n  // @param item       The item to check or add to the Set instance.\n  // @param shouldAdd  If true, the item will be added to the set if it doesn't\n  //                   already exist.\n  // @param set        The set instance to check or add to.\n  // @return {boolean} true if the item already existed, otherwise false.\n  //\n  return _Set;\n}();\n\nfunction hasOrAdd(item, shouldAdd, set) {\n  var type = typeof item;\n  var prevSize, newSize;\n  switch (type) {\n    case 'string':\n    case 'number':\n      // distinguish between +0 and -0\n      if (item === 0 && 1 / item === -Infinity) {\n        if (set._items['-0']) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items['-0'] = true;\n          }\n          return false;\n        }\n      }\n      // these types can all utilise the native Set\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n          set._nativeSet.add(item);\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = {};\n            set._items[type][item] = true;\n          }\n          return false;\n        } else if (item in set._items[type]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][item] = true;\n          }\n          return false;\n        }\n      }\n\n    case 'boolean':\n      // set._items['boolean'] holds a two element array\n      // representing [ falseExists, trueExists ]\n      if (type in set._items) {\n        var bIdx = item ? 1 : 0;\n        if (set._items[type][bIdx]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][bIdx] = true;\n          }\n          return false;\n        }\n      } else {\n        if (shouldAdd) {\n          set._items[type] = item ? [false, true] : [true, false];\n        }\n        return false;\n      }\n\n    case 'function':\n      // compare functions for reference equality\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n          set._nativeSet.add(item);\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = [item];\n          }\n          return false;\n        }\n        if (!_contains(item, set._items[type])) {\n          if (shouldAdd) {\n            set._items[type].push(item);\n          }\n          return false;\n        }\n        return true;\n      }\n\n    case 'undefined':\n      if (set._items[type]) {\n        return true;\n      } else {\n        if (shouldAdd) {\n          set._items[type] = true;\n        }\n        return false;\n      }\n\n    case 'object':\n      if (item === null) {\n        if (!set._items['null']) {\n          if (shouldAdd) {\n            set._items['null'] = true;\n          }\n          return false;\n        }\n        return true;\n      }\n    /* falls through */\n    default:\n      // reduce the search size of heterogeneous sets by creating buckets\n      // for each type.\n      type = Object.prototype.toString.call(item);\n      if (!(type in set._items)) {\n        if (shouldAdd) {\n          set._items[type] = [item];\n        }\n        return false;\n      }\n      // scan through all previously applied items\n      if (!_contains(item, set._items[type])) {\n        if (shouldAdd) {\n          set._items[type].push(item);\n        }\n        return false;\n      }\n      return true;\n  }\n}\n\n// A simple Set type that honours R.equals semantics\nexport default _Set;","import _Set from './internal/_Set';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied function to\n * each list element. Prefers the first item if the supplied function produces\n * the same value on two items. [`R.equals`](#equals) is used for comparison.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> b) -> [a] -> [a]\n * @param {Function} fn A function used to produce a value to use during comparisons.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n */\nvar uniqBy = /*#__PURE__*/_curry2(function uniqBy(fn, list) {\n  var set = new _Set();\n  var result = [];\n  var idx = 0;\n  var appliedItem, item;\n\n  while (idx < list.length) {\n    item = list[idx];\n    appliedItem = fn(item);\n    if (set.add(appliedItem)) {\n      result.push(item);\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default uniqBy;","import identity from './identity';\nimport uniqBy from './uniqBy';\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list. [`R.equals`](#equals) is used to determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n *      R.uniq([1, '1']);     //=> [1, '1']\n *      R.uniq([[42], [42]]); //=> [[42]]\n */\nvar uniq = /*#__PURE__*/uniqBy(identity);\nexport default uniq;","import _contains from './internal/_contains';\nimport _curry2 from './internal/_curry2';\nimport _filter from './internal/_filter';\nimport flip from './flip';\nimport uniq from './uniq';\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of those\n * elements common to both lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The list of elements found in both `list1` and `list2`.\n * @see R.innerJoin\n * @example\n *\n *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n */\nvar intersection = /*#__PURE__*/_curry2(function intersection(list1, list2) {\n  var lookupList, filteredList;\n  if (list1.length > list2.length) {\n    lookupList = list1;\n    filteredList = list2;\n  } else {\n    lookupList = list2;\n    filteredList = list1;\n  }\n  return uniq(_filter(flip(_contains)(lookupList), filteredList));\n});\nexport default intersection;","import _checkForMethod from './internal/_checkForMethod';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Creates a new list with the separator interposed between elements.\n *\n * Dispatches to the `intersperse` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} separator The element to add to the list.\n * @param {Array} list The list to be interposed.\n * @return {Array} The new list.\n * @example\n *\n *      R.intersperse('n', ['ba', 'a', 'a']); //=> ['ba', 'n', 'a', 'n', 'a']\n */\nvar intersperse = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('intersperse', function intersperse(separator, list) {\n  var out = [];\n  var idx = 0;\n  var length = list.length;\n  while (idx < length) {\n    if (idx === length - 1) {\n      out.push(list[idx]);\n    } else {\n      out.push(list[idx], separator);\n    }\n    idx += 1;\n  }\n  return out;\n}));\nexport default intersperse;","import _has from './_has';\n\n// Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nexport default function _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n  while (idx < length) {\n    var source = arguments[idx];\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n    idx += 1;\n  }\n  return output;\n}","import _objectAssign from './_objectAssign';\n\nexport default typeof Object.assign === 'function' ? Object.assign : _objectAssign;","import _curry2 from './internal/_curry2';\n\n/**\n * Creates an object containing a single key:value pair.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @sig String -> a -> {String:a}\n * @param {String} key\n * @param {*} val\n * @return {Object}\n * @see R.pair\n * @example\n *\n *      var matchPhrases = R.compose(\n *        R.objOf('must'),\n *        R.map(R.objOf('match_phrase'))\n *      );\n *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n */\nvar objOf = /*#__PURE__*/_curry2(function objOf(key, val) {\n  var obj = {};\n  obj[key] = val;\n  return obj;\n});\nexport default objOf;","import _assign from './_assign';\nimport _identity from './_identity';\nimport _isArrayLike from './_isArrayLike';\nimport _isTransformer from './_isTransformer';\nimport objOf from '../objOf';\n\nvar _stepCatArray = {\n  '@@transducer/init': Array,\n  '@@transducer/step': function (xs, x) {\n    xs.push(x);\n    return xs;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatString = {\n  '@@transducer/init': String,\n  '@@transducer/step': function (a, b) {\n    return a + b;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatObject = {\n  '@@transducer/init': Object,\n  '@@transducer/step': function (result, input) {\n    return _assign(result, _isArrayLike(input) ? objOf(input[0], input[1]) : input);\n  },\n  '@@transducer/result': _identity\n};\n\nexport default function _stepCat(obj) {\n  if (_isTransformer(obj)) {\n    return obj;\n  }\n  if (_isArrayLike(obj)) {\n    return _stepCatArray;\n  }\n  if (typeof obj === 'string') {\n    return _stepCatString;\n  }\n  if (typeof obj === 'object') {\n    return _stepCatObject;\n  }\n  throw new Error('Cannot create transformer for ' + obj);\n}","import _clone from './internal/_clone';\nimport _curry3 from './internal/_curry3';\nimport _isTransformer from './internal/_isTransformer';\nimport _reduce from './internal/_reduce';\nimport _stepCat from './internal/_stepCat';\n\n/**\n * Transforms the items of the list with the transducer and appends the\n * transformed items to the accumulator using an appropriate iterator function\n * based on the accumulator type.\n *\n * The accumulator can be an array, string, object or a transformer. Iterated\n * items will be appended to arrays and concatenated to strings. Objects will\n * be merged directly or 2-item arrays will be merged as key, value pairs.\n *\n * The accumulator can also be a transformer object that provides a 2-arity\n * reducing iterator function, step, 0-arity initial value function, init, and\n * 1-arity result extraction function result. The step function is used as the\n * iterator function in reduce. The result function is used to convert the\n * final accumulator into the return type and in most cases is R.identity. The\n * init function is used to provide the initial accumulator.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the\n * transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig a -> (b -> b) -> [c] -> a\n * @param {*} acc The initial accumulator value.\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n *\n *      R.into([], transducer, numbers); //=> [2, 3]\n *\n *      var intoArray = R.into([]);\n *      intoArray(transducer, numbers); //=> [2, 3]\n */\nvar into = /*#__PURE__*/_curry3(function into(acc, xf, list) {\n  return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), _clone(acc, [], [], false), list);\n});\nexport default into;","import _curry1 from './internal/_curry1';\nimport _has from './internal/_has';\nimport keys from './keys';\n\n/**\n * Same as [`R.invertObj`](#invertObj), however this accounts for objects with\n * duplicate values by putting the values into an array.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: [ s, ... ]}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object with keys in an array.\n * @see R.invertObj\n * @example\n *\n *      var raceResultsByFirstName = {\n *        first: 'alice',\n *        second: 'jake',\n *        third: 'alice',\n *      };\n *      R.invert(raceResultsByFirstName);\n *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n */\nvar invert = /*#__PURE__*/_curry1(function invert(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    var val = obj[key];\n    var list = _has(val, out) ? out[val] : out[val] = [];\n    list[list.length] = key;\n    idx += 1;\n  }\n  return out;\n});\nexport default invert;","import _curry1 from './internal/_curry1';\nimport keys from './keys';\n\n/**\n * Returns a new object with the keys of the given object as values, and the\n * values of the given object, which are coerced to strings, as keys. Note\n * that the last key found is preferred when handling the same value.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: s}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object\n * @see R.invert\n * @example\n *\n *      var raceResults = {\n *        first: 'alice',\n *        second: 'jake'\n *      };\n *      R.invertObj(raceResults);\n *      //=> { 'alice': 'first', 'jake':'second' }\n *\n *      // Alternatively:\n *      var raceResults = ['alice', 'jake'];\n *      R.invertObj(raceResults);\n *      //=> { 'alice': '0', 'jake':'1' }\n */\nvar invertObj = /*#__PURE__*/_curry1(function invertObj(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    out[obj[key]] = key;\n    idx += 1;\n  }\n  return out;\n});\nexport default invertObj;","import _curry2 from './internal/_curry2';\nimport _isFunction from './internal/_isFunction';\nimport curryN from './curryN';\nimport toString from './toString';\n\n/**\n * Turns a named method with a specified arity into a function that can be\n * called directly supplied with arguments and a target object.\n *\n * The returned function is curried and accepts `arity + 1` parameters where\n * the final parameter is the target object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n * @param {Number} arity Number of arguments the returned function should take\n *        before the target object.\n * @param {String} method Name of the method to call.\n * @return {Function} A new curried function.\n * @see R.construct\n * @example\n *\n *      var sliceFrom = R.invoker(1, 'slice');\n *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n *      var sliceFrom6 = R.invoker(2, 'slice')(6);\n *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n * @symb R.invoker(0, 'method')(o) = o['method']()\n * @symb R.invoker(1, 'method')(a, o) = o['method'](a)\n * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)\n */\nvar invoker = /*#__PURE__*/_curry2(function invoker(arity, method) {\n  return curryN(arity + 1, function () {\n    var target = arguments[arity];\n    if (target != null && _isFunction(target[method])) {\n      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n    }\n    throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n  });\n});\nexport default invoker;","import _curry2 from './internal/_curry2';\n\n/**\n * See if an object (`val`) is an instance of the supplied constructor. This\n * function will check up the inheritance chain, if any.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Type\n * @sig (* -> {*}) -> a -> Boolean\n * @param {Object} ctor A constructor\n * @param {*} val The value to test\n * @return {Boolean}\n * @example\n *\n *      R.is(Object, {}); //=> true\n *      R.is(Number, 1); //=> true\n *      R.is(Object, 1); //=> false\n *      R.is(String, 's'); //=> true\n *      R.is(String, new String('')); //=> true\n *      R.is(Object, new String('')); //=> true\n *      R.is(Object, 's'); //=> false\n *      R.is(Number, {}); //=> false\n */\nvar is = /*#__PURE__*/_curry2(function is(Ctor, val) {\n  return val != null && val.constructor === Ctor || val instanceof Ctor;\n});\nexport default is;","import _curry1 from './internal/_curry1';\nimport empty from './empty';\nimport equals from './equals';\n\n/**\n * Returns `true` if the given value is its type's empty value; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> Boolean\n * @param {*} x\n * @return {Boolean}\n * @see R.empty\n * @example\n *\n *      R.isEmpty([1, 2, 3]);   //=> false\n *      R.isEmpty([]);          //=> true\n *      R.isEmpty('');          //=> true\n *      R.isEmpty(null);        //=> false\n *      R.isEmpty({});          //=> true\n *      R.isEmpty({length: 0}); //=> false\n */\nvar isEmpty = /*#__PURE__*/_curry1(function isEmpty(x) {\n  return x != null && equals(x, empty(x));\n});\nexport default isEmpty;","import invoker from './invoker';\n\n/**\n * Returns a string made by inserting the `separator` between each element and\n * concatenating all the elements into a single string.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig String -> [a] -> String\n * @param {Number|String} separator The string used to separate the elements.\n * @param {Array} xs The elements to join into a string.\n * @return {String} str The string made by concatenating `xs` with `separator`.\n * @see R.split\n * @example\n *\n *      var spacer = R.join(' ');\n *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n */\nvar join = /*#__PURE__*/invoker(1, 'join');\nexport default join;","import _curry1 from './internal/_curry1';\nimport converge from './converge';\n\n/**\n * juxt applies a list of functions to a list of values.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Function\n * @sig [(a, b, ..., m) -> n] -> ((a, b, ..., m) -> [n])\n * @param {Array} fns An array of functions\n * @return {Function} A function that returns a list of values after applying each of the original `fns` to its parameters.\n * @see R.applySpec\n * @example\n *\n *      var getRange = R.juxt([Math.min, Math.max]);\n *      getRange(3, 4, 9, -3); //=> [-3, 9]\n * @symb R.juxt([f, g, h])(a, b) = [f(a, b), g(a, b), h(a, b)]\n */\nvar juxt = /*#__PURE__*/_curry1(function juxt(fns) {\n  return converge(function () {\n    return Array.prototype.slice.call(arguments, 0);\n  }, fns);\n});\nexport default juxt;","import _curry1 from './internal/_curry1';\n\n/**\n * Returns a list containing the names of all the properties of the supplied\n * object, including prototype properties.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own and prototype properties.\n * @see R.keys, R.valuesIn\n * @example\n *\n *      var F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      var f = new F();\n *      R.keysIn(f); //=> ['x', 'y']\n */\nvar keysIn = /*#__PURE__*/_curry1(function keysIn(obj) {\n  var prop;\n  var ks = [];\n  for (prop in obj) {\n    ks[ks.length] = prop;\n  }\n  return ks;\n});\nexport default keysIn;","import _curry2 from './internal/_curry2';\nimport _isArray from './internal/_isArray';\nimport equals from './equals';\n\n/**\n * Returns the position of the last occurrence of an item in an array, or -1 if\n * the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.indexOf\n * @example\n *\n *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6\n *      R.lastIndexOf(10, [1,2,3,4]); //=> -1\n */\nvar lastIndexOf = /*#__PURE__*/_curry2(function lastIndexOf(target, xs) {\n  if (typeof xs.lastIndexOf === 'function' && !_isArray(xs)) {\n    return xs.lastIndexOf(target);\n  } else {\n    var idx = xs.length - 1;\n    while (idx >= 0) {\n      if (equals(xs[idx], target)) {\n        return idx;\n      }\n      idx -= 1;\n    }\n    return -1;\n  }\n});\nexport default lastIndexOf;","export default function _isNumber(x) {\n  return Object.prototype.toString.call(x) === '[object Number]';\n}","import _curry1 from './internal/_curry1';\nimport _isNumber from './internal/_isNumber';\n\n/**\n * Returns the number of elements in the array by returning `list.length`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [a] -> Number\n * @param {Array} list The array to inspect.\n * @return {Number} The length of the array.\n * @example\n *\n *      R.length([]); //=> 0\n *      R.length([1, 2, 3]); //=> 3\n */\nvar length = /*#__PURE__*/_curry1(function length(list) {\n  return list != null && _isNumber(list.length) ? list.length : NaN;\n});\nexport default length;","import _curry2 from './internal/_curry2';\nimport map from './map';\n\n/**\n * Returns a lens for the given getter and setter functions. The getter \"gets\"\n * the value of the focus; the setter \"sets\" the value of the focus. The setter\n * should not mutate the data structure.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n * @param {Function} getter\n * @param {Function} setter\n * @return {Lens}\n * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lens(R.prop('x'), R.assoc('x'));\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\nvar lens = /*#__PURE__*/_curry2(function lens(getter, setter) {\n  return function (toFunctorFn) {\n    return function (target) {\n      return map(function (focus) {\n        return setter(focus, target);\n      }, toFunctorFn(getter(target)));\n    };\n  };\n});\nexport default lens;","import _curry1 from './internal/_curry1';\nimport lens from './lens';\nimport nth from './nth';\nimport update from './update';\n\n/**\n * Returns a lens whose focus is the specified index.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Number -> Lens s a\n * @param {Number} n\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var headLens = R.lensIndex(0);\n *\n *      R.view(headLens, ['a', 'b', 'c']);            //=> 'a'\n *      R.set(headLens, 'x', ['a', 'b', 'c']);        //=> ['x', 'b', 'c']\n *      R.over(headLens, R.toUpper, ['a', 'b', 'c']); //=> ['A', 'b', 'c']\n */\nvar lensIndex = /*#__PURE__*/_curry1(function lensIndex(n) {\n  return lens(nth(n), update(n));\n});\nexport default lensIndex;","import _curry1 from './internal/_curry1';\nimport assocPath from './assocPath';\nimport lens from './lens';\nimport path from './path';\n\n/**\n * Returns a lens whose focus is the specified path.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @typedefn Idx = String | Int\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig [Idx] -> Lens s a\n * @param {Array} path The path to use.\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var xHeadYLens = R.lensPath(['x', 0, 'y']);\n *\n *      R.view(xHeadYLens, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> 2\n *      R.set(xHeadYLens, 1, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: 1, z: 3}, {y: 4, z: 5}]}\n *      R.over(xHeadYLens, R.negate, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: -2, z: 3}, {y: 4, z: 5}]}\n */\nvar lensPath = /*#__PURE__*/_curry1(function lensPath(p) {\n  return lens(path(p), assocPath(p));\n});\nexport default lensPath;","import _curry1 from './internal/_curry1';\nimport assoc from './assoc';\nimport lens from './lens';\nimport prop from './prop';\n\n/**\n * Returns a lens whose focus is the specified property.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig String -> Lens s a\n * @param {String} k\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\nvar lensProp = /*#__PURE__*/_curry1(function lensProp(k) {\n  return lens(prop(k), assoc(k));\n});\nexport default lensProp;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if the first argument is less than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.gt\n * @example\n *\n *      R.lt(2, 1); //=> false\n *      R.lt(2, 2); //=> false\n *      R.lt(2, 3); //=> true\n *      R.lt('a', 'z'); //=> true\n *      R.lt('z', 'a'); //=> false\n */\nvar lt = /*#__PURE__*/_curry2(function lt(a, b) {\n  return a < b;\n});\nexport default lt;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns `true` if the first argument is less than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.gte\n * @example\n *\n *      R.lte(2, 1); //=> false\n *      R.lte(2, 2); //=> true\n *      R.lte(2, 3); //=> true\n *      R.lte('a', 'z'); //=> true\n *      R.lte('z', 'a'); //=> false\n */\nvar lte = /*#__PURE__*/_curry2(function lte(a, b) {\n  return a <= b;\n});\nexport default lte;","import _curry3 from './internal/_curry3';\n\n/**\n * The `mapAccum` function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from left to right, and returning a final value of this\n * accumulator together with the new list.\n *\n * The iterator function receives two arguments, *acc* and *value*, and should\n * return a tuple *[acc, value]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((acc, x) -> (acc, y)) -> acc -> [x] -> (acc, [y])\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.addIndex, R.mapAccumRight\n * @example\n *\n *      var digits = ['1', '2', '3', '4'];\n *      var appender = (a, b) => [a + b, a + b];\n *\n *      R.mapAccum(appender, 0, digits); //=> ['01234', ['01', '012', '0123', '01234']]\n * @symb R.mapAccum(f, a, [b, c, d]) = [\n *   f(f(f(a, b)[0], c)[0], d)[0],\n *   [\n *     f(a, b)[1],\n *     f(f(a, b)[0], c)[1],\n *     f(f(f(a, b)[0], c)[0], d)[1]\n *   ]\n * ]\n */\nvar mapAccum = /*#__PURE__*/_curry3(function mapAccum(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var tuple = [acc];\n  while (idx < len) {\n    tuple = fn(tuple[0], list[idx]);\n    result[idx] = tuple[1];\n    idx += 1;\n  }\n  return [tuple[0], result];\n});\nexport default mapAccum;","import _curry3 from './internal/_curry3';\n\n/**\n * The `mapAccumRight` function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from right to left, and returning a final value of this\n * accumulator together with the new list.\n *\n * Similar to [`mapAccum`](#mapAccum), except moves through the input list from\n * the right to the left.\n *\n * The iterator function receives two arguments, *value* and *acc*, and should\n * return a tuple *[value, acc]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((x, acc) -> (y, acc)) -> acc -> [x] -> ([y], acc)\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.addIndex, R.mapAccum\n * @example\n *\n *      var digits = ['1', '2', '3', '4'];\n *      var append = (a, b) => [a + b, a + b];\n *\n *      R.mapAccumRight(append, 5, digits); //=> [['12345', '2345', '345', '45'], '12345']\n * @symb R.mapAccumRight(f, a, [b, c, d]) = [\n *   [\n *     f(b, f(c, f(d, a)[0])[0])[1],\n *     f(c, f(d, a)[0])[1],\n *     f(d, a)[1],\n *   ]\n *   f(b, f(c, f(d, a)[0])[0])[0],\n * ]\n */\nvar mapAccumRight = /*#__PURE__*/_curry3(function mapAccumRight(fn, acc, list) {\n  var idx = list.length - 1;\n  var result = [];\n  var tuple = [acc];\n  while (idx >= 0) {\n    tuple = fn(list[idx], tuple[0]);\n    result[idx] = tuple[1];\n    idx -= 1;\n  }\n  return [result, tuple[0]];\n});\nexport default mapAccumRight;","import _curry2 from './internal/_curry2';\nimport _reduce from './internal/_reduce';\nimport keys from './keys';\n\n/**\n * An Object-specific version of [`map`](#map). The function is applied to three\n * arguments: *(value, key, obj)*. If only the value is significant, use\n * [`map`](#map) instead.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig ((*, String, Object) -> *) -> Object -> Object\n * @param {Function} fn\n * @param {Object} obj\n * @return {Object}\n * @see R.map\n * @example\n *\n *      var values = { x: 1, y: 2, z: 3 };\n *      var prependKeyAndDouble = (num, key, obj) => key + (num * 2);\n *\n *      R.mapObjIndexed(prependKeyAndDouble, values); //=> { x: 'x2', y: 'y4', z: 'z6' }\n */\nvar mapObjIndexed = /*#__PURE__*/_curry2(function mapObjIndexed(fn, obj) {\n  return _reduce(function (acc, key) {\n    acc[key] = fn(obj[key], key, obj);\n    return acc;\n  }, {}, keys(obj));\n});\nexport default mapObjIndexed;","import _curry2 from './internal/_curry2';\n\n/**\n * Tests a regular expression against a String. Note that this function will\n * return an empty array when there are no matches. This differs from\n * [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)\n * which returns `null` when there are no matches.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig RegExp -> String -> [String | Undefined]\n * @param {RegExp} rx A regular expression.\n * @param {String} str The string to match against\n * @return {Array} The list of matches or empty array.\n * @see R.test\n * @example\n *\n *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']\n *      R.match(/a/, 'b'); //=> []\n *      R.match(/a/, null); //=> TypeError: null does not have a method named \"match\"\n */\nvar match = /*#__PURE__*/_curry2(function match(rx, str) {\n  return str.match(rx) || [];\n});\nexport default match;","import _curry2 from './internal/_curry2';\nimport _isInteger from './internal/_isInteger';\n\n/**\n * `mathMod` behaves like the modulo operator should mathematically, unlike the\n * `%` operator (and by extension, [`R.modulo`](#modulo)). So while\n * `-17 % 5` is `-2`, `mathMod(-17, 5)` is `3`. `mathMod` requires Integer\n * arguments, and returns NaN when the modulus is zero or negative.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} m The dividend.\n * @param {Number} p the modulus.\n * @return {Number} The result of `b mod a`.\n * @see R.modulo\n * @example\n *\n *      R.mathMod(-17, 5);  //=> 3\n *      R.mathMod(17, 5);   //=> 2\n *      R.mathMod(17, -5);  //=> NaN\n *      R.mathMod(17, 0);   //=> NaN\n *      R.mathMod(17.2, 5); //=> NaN\n *      R.mathMod(17, 5.3); //=> NaN\n *\n *      var clock = R.mathMod(R.__, 12);\n *      clock(15); //=> 3\n *      clock(24); //=> 0\n *\n *      var seventeenMod = R.mathMod(17);\n *      seventeenMod(3);  //=> 2\n *      seventeenMod(4);  //=> 1\n *      seventeenMod(10); //=> 7\n */\nvar mathMod = /*#__PURE__*/_curry2(function mathMod(m, p) {\n  if (!_isInteger(m)) {\n    return NaN;\n  }\n  if (!_isInteger(p) || p < 1) {\n    return NaN;\n  }\n  return (m % p + p) % p;\n});\nexport default mathMod;","import _curry3 from './internal/_curry3';\n\n/**\n * Takes a function and two values, and returns whichever value produces the\n * larger result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.max, R.minBy\n * @example\n *\n *      //  square :: Number -> Number\n *      var square = n => n * n;\n *\n *      R.maxBy(square, -3, 2); //=> -3\n *\n *      R.reduce(R.maxBy(square), 0, [3, -5, 4, 1, -2]); //=> -5\n *      R.reduce(R.maxBy(square), 0, []); //=> 0\n */\nvar maxBy = /*#__PURE__*/_curry3(function maxBy(f, a, b) {\n  return f(b) > f(a) ? b : a;\n});\nexport default maxBy;","import add from './add';\nimport reduce from './reduce';\n\n/**\n * Adds together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The sum of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.sum([2,4,6,8,100,1]); //=> 121\n */\nvar sum = /*#__PURE__*/reduce(add, 0);\nexport default sum;","import _curry1 from './internal/_curry1';\nimport sum from './sum';\n\n/**\n * Returns the mean of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.median\n * @example\n *\n *      R.mean([2, 7, 9]); //=> 6\n *      R.mean([]); //=> NaN\n */\nvar mean = /*#__PURE__*/_curry1(function mean(list) {\n  return sum(list) / list.length;\n});\nexport default mean;","import _curry1 from './internal/_curry1';\nimport mean from './mean';\n\n/**\n * Returns the median of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.mean\n * @example\n *\n *      R.median([2, 9, 7]); //=> 7\n *      R.median([7, 2, 10, 9]); //=> 8\n *      R.median([]); //=> NaN\n */\nvar median = /*#__PURE__*/_curry1(function median(list) {\n  var len = list.length;\n  if (len === 0) {\n    return NaN;\n  }\n  var width = 2 - len % 2;\n  var idx = (len - width) / 2;\n  return mean(Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n  }).slice(idx, idx + width));\n});\nexport default median;","import _arity from './internal/_arity';\nimport _curry2 from './internal/_curry2';\nimport _has from './internal/_has';\n\n/**\n * A customisable version of [`R.memoize`](#memoize). `memoizeWith` takes an\n * additional function that will be applied to a given argument set and used to\n * create the cache key under which the results of the function to be memoized\n * will be stored. Care must be taken when implementing key generation to avoid\n * clashes that may overwrite previous entries erroneously.\n *\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (*... -> String) -> (*... -> a) -> (*... -> a)\n * @param {Function} fn The function to generate the cache key.\n * @param {Function} fn The function to memoize.\n * @return {Function} Memoized version of `fn`.\n * @see R.memoize\n * @example\n *\n *      let count = 0;\n *      const factorial = R.memoizeWith(R.identity, n => {\n *        count += 1;\n *        return R.product(R.range(1, n + 1));\n *      });\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      count; //=> 1\n */\nvar memoizeWith = /*#__PURE__*/_curry2(function memoizeWith(mFn, fn) {\n  var cache = {};\n  return _arity(fn.length, function () {\n    var key = mFn.apply(this, arguments);\n    if (!_has(key, cache)) {\n      cache[key] = fn.apply(this, arguments);\n    }\n    return cache[key];\n  });\n});\nexport default memoizeWith;","import memoizeWith from './memoizeWith';\nimport toString from './toString';\n\n/**\n * Creates a new function that, when invoked, caches the result of calling `fn`\n * for a given argument set and returns the result. Subsequent calls to the\n * memoized `fn` with the same argument set will not result in an additional\n * call to `fn`; instead, the cached result for that set of arguments will be\n * returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (*... -> a) -> (*... -> a)\n * @param {Function} fn The function to memoize.\n * @return {Function} Memoized version of `fn`.\n * @see R.memoizeWith\n * @deprecated since v0.25.0\n * @example\n *\n *      let count = 0;\n *      const factorial = R.memoize(n => {\n *        count += 1;\n *        return R.product(R.range(1, n + 1));\n *      });\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      count; //=> 1\n */\nvar memoize = /*#__PURE__*/memoizeWith(function () {\n  return toString(arguments);\n});\nexport default memoize;","import _assign from './internal/_assign';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @example\n *\n *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      var resetToDefault = R.merge(R.__, {x: 0});\n *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n * @symb R.merge({ x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: 5, z: 3 }\n */\nvar merge = /*#__PURE__*/_curry2(function merge(l, r) {\n  return _assign({}, l, r);\n});\nexport default merge;","import _assign from './internal/_assign';\nimport _curry1 from './internal/_curry1';\n\n/**\n * Merges a list of objects together into one object.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig [{k: v}] -> {k: v}\n * @param {Array} list An array of objects\n * @return {Object} A merged object.\n * @see R.reduce\n * @example\n *\n *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n * @symb R.mergeAll([{ x: 1 }, { y: 2 }, { z: 3 }]) = { x: 1, y: 2, z: 3 }\n */\nvar mergeAll = /*#__PURE__*/_curry1(function mergeAll(list) {\n  return _assign.apply(null, [{}].concat(list));\n});\nexport default mergeAll;","import _curry3 from './internal/_curry3';\nimport _has from './internal/_has';\n\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the key\n * and the values associated with the key in each object, with the result being\n * used as the value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWithKey, R.merge, R.mergeWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeWithKey(concatValues,\n *                     { a: true, thing: 'foo', values: [10, 20] },\n *                     { b: true, thing: 'bar', values: [15, 35] });\n *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n * @symb R.mergeWithKey(f, { x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: f('y', 2, 5), z: 3 }\n */\nvar mergeWithKey = /*#__PURE__*/_curry3(function mergeWithKey(fn, l, r) {\n  var result = {};\n  var k;\n\n  for (k in l) {\n    if (_has(k, l)) {\n      result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\n    }\n  }\n\n  for (k in r) {\n    if (_has(k, r) && !_has(k, result)) {\n      result[k] = r[k];\n    }\n  }\n\n  return result;\n});\nexport default mergeWithKey;","import _curry3 from './internal/_curry3';\nimport _isObject from './internal/_isObject';\nimport mergeWithKey from './mergeWithKey';\n\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to the key and associated values\n *   using the resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWithKey, R.mergeDeep, R.mergeDeepWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeDeepWithKey(concatValues,\n *                         { a: true, c: { thing: 'foo', values: [10, 20] }},\n *                         { b: true, c: { thing: 'bar', values: [15, 35] }});\n *      //=> { a: true, b: true, c: { thing: 'bar', values: [10, 20, 15, 35] }}\n */\nvar mergeDeepWithKey = /*#__PURE__*/_curry3(function mergeDeepWithKey(fn, lObj, rObj) {\n  return mergeWithKey(function (k, lVal, rVal) {\n    if (_isObject(lVal) && _isObject(rVal)) {\n      return mergeDeepWithKey(fn, lVal, rVal);\n    } else {\n      return fn(k, lVal, rVal);\n    }\n  }, lObj, rObj);\n});\nexport default mergeDeepWithKey;","import _curry2 from './internal/_curry2';\nimport mergeDeepWithKey from './mergeDeepWithKey';\n\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the first object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepRight, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepLeft({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                      { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 10, contact: { email: 'moo@example.com' }}\n */\nvar mergeDeepLeft = /*#__PURE__*/_curry2(function mergeDeepLeft(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return lVal;\n  }, lObj, rObj);\n});\nexport default mergeDeepLeft;","import _curry2 from './internal/_curry2';\nimport mergeDeepWithKey from './mergeDeepWithKey';\n\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepLeft, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepRight({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                       { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 40, contact: { email: 'baa@example.com' }}\n */\nvar mergeDeepRight = /*#__PURE__*/_curry2(function mergeDeepRight(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return rVal;\n  }, lObj, rObj);\n});\nexport default mergeDeepRight;","import _curry3 from './internal/_curry3';\nimport mergeDeepWithKey from './mergeDeepWithKey';\n\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to associated values using the\n *   resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWith, R.mergeDeep, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepWith(R.concat,\n *                      { a: true, c: { values: [10, 20] }},\n *                      { b: true, c: { values: [15, 35] }});\n *      //=> { a: true, b: true, c: { values: [10, 20, 15, 35] }}\n */\nvar mergeDeepWith = /*#__PURE__*/_curry3(function mergeDeepWith(fn, lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return fn(lVal, rVal);\n  }, lObj, rObj);\n});\nexport default mergeDeepWith;","import _curry3 from './internal/_curry3';\nimport mergeWithKey from './mergeWithKey';\n\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the values\n * associated with the key in each object, with the result being used as the\n * value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWith, R.merge, R.mergeWithKey\n * @example\n *\n *      R.mergeWith(R.concat,\n *                  { a: true, values: [10, 20] },\n *                  { b: true, values: [15, 35] });\n *      //=> { a: true, b: true, values: [10, 20, 15, 35] }\n */\nvar mergeWith = /*#__PURE__*/_curry3(function mergeWith(fn, l, r) {\n  return mergeWithKey(function (_, _l, _r) {\n    return fn(_l, _r);\n  }, l, r);\n});\nexport default mergeWith;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns the smaller of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.minBy, R.max\n * @example\n *\n *      R.min(789, 123); //=> 123\n *      R.min('a', 'b'); //=> 'a'\n */\nvar min = /*#__PURE__*/_curry2(function min(a, b) {\n  return b < a ? b : a;\n});\nexport default min;","import _curry3 from './internal/_curry3';\n\n/**\n * Takes a function and two values, and returns whichever value produces the\n * smaller result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.min, R.maxBy\n * @example\n *\n *      //  square :: Number -> Number\n *      var square = n => n * n;\n *\n *      R.minBy(square, -3, 2); //=> 2\n *\n *      R.reduce(R.minBy(square), Infinity, [3, -5, 4, 1, -2]); //=> 1\n *      R.reduce(R.minBy(square), Infinity, []); //=> Infinity\n */\nvar minBy = /*#__PURE__*/_curry3(function minBy(f, a, b) {\n  return f(b) < f(a) ? b : a;\n});\nexport default minBy;","import _curry2 from './internal/_curry2';\n\n/**\n * Divides the first parameter by the second and returns the remainder. Note\n * that this function preserves the JavaScript-style behavior for modulo. For\n * mathematical modulo see [`mathMod`](#mathMod).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The value to the divide.\n * @param {Number} b The pseudo-modulus\n * @return {Number} The result of `b % a`.\n * @see R.mathMod\n * @example\n *\n *      R.modulo(17, 3); //=> 2\n *      // JS behavior:\n *      R.modulo(-17, 3); //=> -2\n *      R.modulo(17, -3); //=> 2\n *\n *      var isOdd = R.modulo(R.__, 2);\n *      isOdd(42); //=> 0\n *      isOdd(21); //=> 1\n */\nvar modulo = /*#__PURE__*/_curry2(function modulo(a, b) {\n  return a % b;\n});\nexport default modulo;","import _curry2 from './internal/_curry2';\n\n/**\n * Multiplies two numbers. Equivalent to `a * b` but curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a * b`.\n * @see R.divide\n * @example\n *\n *      var double = R.multiply(2);\n *      var triple = R.multiply(3);\n *      double(3);       //=>  6\n *      triple(4);       //=> 12\n *      R.multiply(2, 5);  //=> 10\n */\nvar multiply = /*#__PURE__*/_curry2(function multiply(a, b) {\n  return a * b;\n});\nexport default multiply;","import _curry1 from './internal/_curry1';\n\n/**\n * Negates its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number}\n * @example\n *\n *      R.negate(42); //=> -42\n */\nvar negate = /*#__PURE__*/_curry1(function negate(n) {\n  return -n;\n});\nexport default negate;","import _complement from './internal/_complement';\nimport _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xany from './internal/_xany';\nimport any from './any';\n\n/**\n * Returns `true` if no elements of the list match the predicate, `false`\n * otherwise.\n *\n * Dispatches to the `any` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n * @see R.all, R.any\n * @example\n *\n *      var isEven = n => n % 2 === 0;\n *      var isOdd = n => n % 2 === 1;\n *\n *      R.none(isEven, [1, 3, 5, 7, 9, 11]); //=> true\n *      R.none(isOdd, [1, 3, 5, 7, 8, 11]); //=> false\n */\nvar none = /*#__PURE__*/_curry2( /*#__PURE__*/_complement( /*#__PURE__*/_dispatchable(['any'], _xany, any)));\nexport default none;","import _curry1 from './internal/_curry1';\nimport curryN from './curryN';\nimport nth from './nth';\n\n/**\n * Returns a function which returns its nth argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig Number -> *... -> *\n * @param {Number} n\n * @return {Function}\n * @example\n *\n *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'\n *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'\n * @symb R.nthArg(-1)(a, b, c) = c\n * @symb R.nthArg(0)(a, b, c) = a\n * @symb R.nthArg(1)(a, b, c) = b\n */\nvar nthArg = /*#__PURE__*/_curry1(function nthArg(n) {\n  var arity = n < 0 ? 1 : n + 1;\n  return curryN(arity, function () {\n    return nth(n, arguments);\n  });\n});\nexport default nthArg;","import _curry3 from './internal/_curry3';\n\n/**\n * `o` is a curried composition function that returns a unary function.\n * Like [`compose`](#compose), `o` performs right-to-left function composition.\n * Unlike [`compose`](#compose), the rightmost function passed to `o` will be\n * invoked with only one argument.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (b -> c) -> (a -> b) -> a -> c\n * @param {Function} f\n * @param {Function} g\n * @return {Function}\n * @see R.compose, R.pipe\n * @example\n *\n *      var classyGreeting = name => \"The name's \" + name.last + \", \" + name.first + \" \" + name.last\n *      var yellGreeting = R.o(R.toUpper, classyGreeting);\n *      yellGreeting({first: 'James', last: 'Bond'}); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.o(R.multiply(10), R.add(10))(-4) //=> 60\n *\n * @symb R.o(f, g, x) = f(g(x))\n */\nvar o = /*#__PURE__*/_curry3(function o(f, g, x) {\n  return f(g(x));\n});\nexport default o;","export default function _of(x) {\n  return [x];\n}","import _curry1 from './internal/_curry1';\nimport _of from './internal/_of';\n\n/**\n * Returns a singleton array containing the value provided.\n *\n * Note this `of` is different from the ES6 `of`; See\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> [a]\n * @param {*} x any value\n * @return {Array} An array wrapping `x`.\n * @example\n *\n *      R.of(null); //=> [null]\n *      R.of([42]); //=> [[42]]\n */\nvar of = /*#__PURE__*/_curry1(_of);\nexport default of;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns a partial copy of an object omitting the keys specified.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [String] -> {String: *} -> {String: *}\n * @param {Array} names an array of String property names to omit from the new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with properties from `names` not on it.\n * @see R.pick\n * @example\n *\n *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\n */\nvar omit = /*#__PURE__*/_curry2(function omit(names, obj) {\n  var result = {};\n  var index = {};\n  var idx = 0;\n  var len = names.length;\n\n  while (idx < len) {\n    index[names[idx]] = 1;\n    idx += 1;\n  }\n\n  for (var prop in obj) {\n    if (!index.hasOwnProperty(prop)) {\n      result[prop] = obj[prop];\n    }\n  }\n  return result;\n});\nexport default omit;","import _arity from './internal/_arity';\nimport _curry1 from './internal/_curry1';\n\n/**\n * Accepts a function `fn` and returns a function that guards invocation of\n * `fn` such that `fn` can only ever be called once, no matter how many times\n * the returned function is invoked. The first value calculated is returned in\n * subsequent invocations.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a... -> b) -> (a... -> b)\n * @param {Function} fn The function to wrap in a call-only-once wrapper.\n * @return {Function} The wrapped function.\n * @example\n *\n *      var addOneOnce = R.once(x => x + 1);\n *      addOneOnce(10); //=> 11\n *      addOneOnce(addOneOnce(50)); //=> 11\n */\nvar once = /*#__PURE__*/_curry1(function once(fn) {\n  var called = false;\n  var result;\n  return _arity(fn.length, function () {\n    if (called) {\n      return result;\n    }\n    called = true;\n    result = fn.apply(this, arguments);\n    return result;\n  });\n});\nexport default once;","import _curry3 from './internal/_curry3';\n\n// `Identity` is a functor that holds a single value, where `map` simply\n// transforms the held value with the provided function.\nvar Identity = function (x) {\n  return { value: x, map: function (f) {\n      return Identity(f(x));\n    } };\n};\n\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the result of applying the given function to\n * the focused value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> (a -> a) -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var headLens = R.lensIndex(0);\n *\n *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']\n */\nvar over = /*#__PURE__*/_curry3(function over(lens, f, x) {\n  // The value returned by the getter function is first transformed with `f`,\n  // then set as the value of an `Identity`. This is then mapped over with the\n  // setter function of the lens.\n  return lens(function (y) {\n    return Identity(f(y));\n  })(x).value;\n});\nexport default over;","import _curry2 from './internal/_curry2';\n\n/**\n * Takes two arguments, `fst` and `snd`, and returns `[fst, snd]`.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category List\n * @sig a -> b -> (a,b)\n * @param {*} fst\n * @param {*} snd\n * @return {Array}\n * @see R.objOf, R.of\n * @example\n *\n *      R.pair('foo', 'bar'); //=> ['foo', 'bar']\n */\nvar pair = /*#__PURE__*/_curry2(function pair(fst, snd) {\n  return [fst, snd];\n});\nexport default pair;","import _arity from './_arity';\nimport _curry2 from './_curry2';\n\nexport default function _createPartialApplicator(concat) {\n  return _curry2(function (fn, args) {\n    return _arity(Math.max(0, fn.length - args.length), function () {\n      return fn.apply(this, concat(args, arguments));\n    });\n  });\n}","import _concat from './internal/_concat';\nimport _createPartialApplicator from './internal/_createPartialApplicator';\n\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided initially followed by the arguments provided to `g`.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [a, b, c, ...] -> ((d, e, f, ..., n) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partialRight\n * @example\n *\n *      var multiply2 = (a, b) => a * b;\n *      var double = R.partial(multiply2, [2]);\n *      double(2); //=> 4\n *\n *      var greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      var sayHello = R.partial(greet, ['Hello']);\n *      var sayHelloToMs = R.partial(sayHello, ['Ms.']);\n *      sayHelloToMs('Jane', 'Jones'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partial(f, [a, b])(c, d) = f(a, b, c, d)\n */\nvar partial = /*#__PURE__*/_createPartialApplicator(_concat);\nexport default partial;","import _concat from './internal/_concat';\nimport _createPartialApplicator from './internal/_createPartialApplicator';\nimport flip from './flip';\n\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided to `g` followed by the arguments provided initially.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [d, e, f, ..., n] -> ((a, b, c, ...) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partial\n * @example\n *\n *      var greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      var greetMsJaneJones = R.partialRight(greet, ['Ms.', 'Jane', 'Jones']);\n *\n *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partialRight(f, [a, b])(c, d) = f(c, d, a, b)\n */\nvar partialRight = /*#__PURE__*/_createPartialApplicator( /*#__PURE__*/flip(_concat));\nexport default partialRight;","import filter from './filter';\nimport juxt from './juxt';\nimport reject from './reject';\n\n/**\n * Takes a predicate and a list or other `Filterable` object and returns the\n * pair of filterable objects of the same type of elements which do and do not\n * satisfy, the predicate, respectively. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> [f a, f a]\n * @param {Function} pred A predicate to determine which side the element belongs to.\n * @param {Array} filterable the list (or other filterable) to partition.\n * @return {Array} An array, containing first the subset of elements that satisfy the\n *         predicate, and second the subset of elements that do not satisfy.\n * @see R.filter, R.reject\n * @example\n *\n *      R.partition(R.contains('s'), ['sss', 'ttt', 'foo', 'bars']);\n *      // => [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\n *\n *      R.partition(R.contains('s'), { a: 'sss', b: 'ttt', foo: 'bars' });\n *      // => [ { a: 'sss', foo: 'bars' }, { b: 'ttt' }  ]\n */\nvar partition = /*#__PURE__*/juxt([filter, reject]);\nexport default partition;","import _curry3 from './internal/_curry3';\nimport equals from './equals';\nimport path from './path';\n\n/**\n * Determines whether a nested path on an object has a specific value, in\n * [`R.equals`](#equals) terms. Most likely used to filter a list.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Relation\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> Boolean\n * @param {Array} path The path of the nested property to use\n * @param {*} val The value to compare the nested property with\n * @param {Object} obj The object to check the nested property in\n * @return {Boolean} `true` if the value equals the nested object property,\n *         `false` otherwise.\n * @example\n *\n *      var user1 = { address: { zipCode: 90210 } };\n *      var user2 = { address: { zipCode: 55555 } };\n *      var user3 = { name: 'Bob' };\n *      var users = [ user1, user2, user3 ];\n *      var isFamous = R.pathEq(['address', 'zipCode'], 90210);\n *      R.filter(isFamous, users); //=> [ user1 ]\n */\nvar pathEq = /*#__PURE__*/_curry3(function pathEq(_path, val, obj) {\n  return equals(path(_path, obj), val);\n});\nexport default pathEq;","import _curry3 from './internal/_curry3';\nimport defaultTo from './defaultTo';\nimport path from './path';\n\n/**\n * If the given, non-null object has a value at the given path, returns the\n * value at that path. Otherwise returns the provided default value.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig a -> [Idx] -> {a} -> a\n * @param {*} d The default value.\n * @param {Array} p The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path` of the supplied object or the default value.\n * @example\n *\n *      R.pathOr('N/A', ['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.pathOr('N/A', ['a', 'b'], {c: {b: 2}}); //=> \"N/A\"\n */\nvar pathOr = /*#__PURE__*/_curry3(function pathOr(d, p, obj) {\n  return defaultTo(d, path(p, obj));\n});\nexport default pathOr;","import _curry3 from './internal/_curry3';\nimport path from './path';\n\n/**\n * Returns `true` if the specified object property at given path satisfies the\n * given predicate; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Logic\n * @typedefn Idx = String | Int\n * @sig (a -> Boolean) -> [Idx] -> {a} -> Boolean\n * @param {Function} pred\n * @param {Array} propPath\n * @param {*} obj\n * @return {Boolean}\n * @see R.propSatisfies, R.path\n * @example\n *\n *      R.pathSatisfies(y => y > 0, ['x', 'y'], {x: {y: 2}}); //=> true\n */\nvar pathSatisfies = /*#__PURE__*/_curry3(function pathSatisfies(pred, propPath, obj) {\n  return propPath.length > 0 && pred(path(propPath, obj));\n});\nexport default pathSatisfies;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns a partial copy of an object containing only the keys specified. If\n * the key does not exist, the property is ignored.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.omit, R.props\n * @example\n *\n *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n */\nvar pick = /*#__PURE__*/_curry2(function pick(names, obj) {\n  var result = {};\n  var idx = 0;\n  while (idx < names.length) {\n    if (names[idx] in obj) {\n      result[names[idx]] = obj[names[idx]];\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default pick;","import _curry2 from './internal/_curry2';\n\n/**\n * Similar to `pick` except that this one includes a `key: undefined` pair for\n * properties that don't exist.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.pick\n * @example\n *\n *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}\n */\nvar pickAll = /*#__PURE__*/_curry2(function pickAll(names, obj) {\n  var result = {};\n  var idx = 0;\n  var len = names.length;\n  while (idx < len) {\n    var name = names[idx];\n    result[name] = obj[name];\n    idx += 1;\n  }\n  return result;\n});\nexport default pickAll;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns a partial copy of an object containing only the keys that satisfy\n * the supplied predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig ((v, k) -> Boolean) -> {k: v} -> {k: v}\n * @param {Function} pred A predicate to determine whether or not a key\n *        should be included on the output object.\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties that satisfy `pred`\n *         on it.\n * @see R.pick, R.filter\n * @example\n *\n *      var isUpperCase = (val, key) => key.toUpperCase() === key;\n *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n */\nvar pickBy = /*#__PURE__*/_curry2(function pickBy(test, obj) {\n  var result = {};\n  for (var prop in obj) {\n    if (test(obj[prop], prop, obj)) {\n      result[prop] = obj[prop];\n    }\n  }\n  return result;\n});\nexport default pickBy;","import composeK from './composeK';\nimport reverse from './reverse';\n\n/**\n * Returns the left-to-right Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.pipeK(f, g, h)` is equivalent to `R.pipe(f, R.chain(g), R.chain(h))`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((a -> m b), (b -> m c), ..., (y -> m z)) -> (a -> m z)\n * @param {...Function}\n * @return {Function}\n * @see R.composeK\n * @example\n *\n *      //  parseJson :: String -> Maybe *\n *      //  get :: String -> Object -> Maybe *\n *\n *      //  getStateCode :: Maybe String -> Maybe String\n *      var getStateCode = R.pipeK(\n *        parseJson,\n *        get('user'),\n *        get('address'),\n *        get('state'),\n *        R.compose(Maybe.of, R.toUpper)\n *      );\n *\n *      getStateCode('{\"user\":{\"address\":{\"state\":\"ny\"}}}');\n *      //=> Just('NY')\n *      getStateCode('[Invalid JSON]');\n *      //=> Nothing()\n * @symb R.pipeK(f, g, h)(a) = R.chain(h, R.chain(g, f(a)))\n */\nexport default function pipeK() {\n  if (arguments.length === 0) {\n    throw new Error('pipeK requires at least one argument');\n  }\n  return composeK.apply(this, reverse(arguments));\n}","import _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Returns a new list with the given element at the front, followed by the\n * contents of the list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The item to add to the head of the output list.\n * @param {Array} list The array to add to the tail of the output list.\n * @return {Array} A new array.\n * @see R.append\n * @example\n *\n *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n */\nvar prepend = /*#__PURE__*/_curry2(function prepend(el, list) {\n  return _concat([el], list);\n});\nexport default prepend;","import multiply from './multiply';\nimport reduce from './reduce';\n\n/**\n * Multiplies together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The product of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.product([2,4,6,8,100,1]); //=> 38400\n */\nvar product = /*#__PURE__*/reduce(multiply, 1);\nexport default product;","import _curry2 from './internal/_curry2';\nimport curryN from './curryN';\n\n/**\n * Accepts a function `fn` and a list of transformer functions and returns a\n * new curried function. When the new function is invoked, it calls the\n * function `fn` with parameters consisting of the result of calling each\n * supplied handler on successive arguments to the new function.\n *\n * If more arguments are passed to the returned function than transformer\n * functions, those arguments are passed directly to `fn` as additional\n * parameters. If you expect additional arguments that don't need to be\n * transformed, although you can ignore them, it's best to pass an identity\n * function so that the new function reports the correct arity.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [(a -> x1), (b -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} fn The function to wrap.\n * @param {Array} transformers A list of transformer functions\n * @return {Function} The wrapped function.\n * @see R.converge\n * @example\n *\n *      R.useWith(Math.pow, [R.identity, R.identity])(3, 4); //=> 81\n *      R.useWith(Math.pow, [R.identity, R.identity])(3)(4); //=> 81\n *      R.useWith(Math.pow, [R.dec, R.inc])(3, 4); //=> 32\n *      R.useWith(Math.pow, [R.dec, R.inc])(3)(4); //=> 32\n * @symb R.useWith(f, [g, h])(a, b) = f(g(a), h(b))\n */\nvar useWith = /*#__PURE__*/_curry2(function useWith(fn, transformers) {\n  return curryN(transformers.length, function () {\n    var args = [];\n    var idx = 0;\n    while (idx < transformers.length) {\n      args.push(transformers[idx].call(this, arguments[idx]));\n      idx += 1;\n    }\n    return fn.apply(this, args.concat(Array.prototype.slice.call(arguments, transformers.length)));\n  });\n});\nexport default useWith;","import _map from './internal/_map';\nimport identity from './identity';\nimport pickAll from './pickAll';\nimport useWith from './useWith';\n\n/**\n * Reasonable analog to SQL `select` statement.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @category Relation\n * @sig [k] -> [{k: v}] -> [{k: v}]\n * @param {Array} props The property names to project\n * @param {Array} objs The objects to query\n * @return {Array} An array of objects with just the `props` properties.\n * @example\n *\n *      var abby = {name: 'Abby', age: 7, hair: 'blond', grade: 2};\n *      var fred = {name: 'Fred', age: 12, hair: 'brown', grade: 7};\n *      var kids = [abby, fred];\n *      R.project(['name', 'grade'], kids); //=> [{name: 'Abby', grade: 2}, {name: 'Fred', grade: 7}]\n */\nvar project = /*#__PURE__*/useWith(_map, [pickAll, identity]); // passing `identity` gives correct arity\nexport default project;","import _curry3 from './internal/_curry3';\nimport equals from './equals';\n\n/**\n * Returns `true` if the specified object property is equal, in\n * [`R.equals`](#equals) terms, to the given value; `false` otherwise.\n * You can test multiple properties with [`R.where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig String -> a -> Object -> Boolean\n * @param {String} name\n * @param {*} val\n * @param {*} obj\n * @return {Boolean}\n * @see R.whereEq, R.propSatisfies, R.equals\n * @example\n *\n *      var abby = {name: 'Abby', age: 7, hair: 'blond'};\n *      var fred = {name: 'Fred', age: 12, hair: 'brown'};\n *      var rusty = {name: 'Rusty', age: 10, hair: 'brown'};\n *      var alois = {name: 'Alois', age: 15, disposition: 'surly'};\n *      var kids = [abby, fred, rusty, alois];\n *      var hasBrownHair = R.propEq('hair', 'brown');\n *      R.filter(hasBrownHair, kids); //=> [fred, rusty]\n */\nvar propEq = /*#__PURE__*/_curry3(function propEq(name, val, obj) {\n  return equals(val, obj[name]);\n});\nexport default propEq;","import _curry3 from './internal/_curry3';\nimport is from './is';\n\n/**\n * Returns `true` if the specified object property is of the given type;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Type\n * @sig Type -> String -> Object -> Boolean\n * @param {Function} type\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.is, R.propSatisfies\n * @example\n *\n *      R.propIs(Number, 'x', {x: 1, y: 2});  //=> true\n *      R.propIs(Number, 'x', {x: 'foo'});    //=> false\n *      R.propIs(Number, 'x', {});            //=> false\n */\nvar propIs = /*#__PURE__*/_curry3(function propIs(type, name, obj) {\n  return is(type, obj[name]);\n});\nexport default propIs;","import _curry3 from './internal/_curry3';\nimport _has from './internal/_has';\n\n/**\n * If the given, non-null object has an own property with the specified name,\n * returns the value of that property. Otherwise returns the provided default\n * value.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Object\n * @sig a -> String -> Object -> a\n * @param {*} val The default value.\n * @param {String} p The name of the property to return.\n * @param {Object} obj The object to query.\n * @return {*} The value of given property of the supplied object or the default value.\n * @example\n *\n *      var alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      var favorite = R.prop('favoriteLibrary');\n *      var favoriteWithDefault = R.propOr('Ramda', 'favoriteLibrary');\n *\n *      favorite(alice);  //=> undefined\n *      favoriteWithDefault(alice);  //=> 'Ramda'\n */\nvar propOr = /*#__PURE__*/_curry3(function propOr(val, p, obj) {\n  return obj != null && _has(p, obj) ? obj[p] : val;\n});\nexport default propOr;","import _curry3 from './internal/_curry3';\n\n/**\n * Returns `true` if the specified object property satisfies the given\n * predicate; `false` otherwise. You can test multiple properties with\n * [`R.where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Logic\n * @sig (a -> Boolean) -> String -> {String: a} -> Boolean\n * @param {Function} pred\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.where, R.propEq, R.propIs\n * @example\n *\n *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true\n */\nvar propSatisfies = /*#__PURE__*/_curry3(function propSatisfies(pred, name, obj) {\n  return pred(obj[name]);\n});\nexport default propSatisfies;","import _curry2 from './internal/_curry2';\n\n/**\n * Acts as multiple `prop`: array of keys in, array of values out. Preserves\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> [v]\n * @param {Array} ps The property names to fetch\n * @param {Object} obj The object to query\n * @return {Array} The corresponding values or partially applied function.\n * @example\n *\n *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]\n *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]\n *\n *      var fullName = R.compose(R.join(' '), R.props(['first', 'last']));\n *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'\n */\nvar props = /*#__PURE__*/_curry2(function props(ps, obj) {\n  var len = ps.length;\n  var out = [];\n  var idx = 0;\n\n  while (idx < len) {\n    out[idx] = obj[ps[idx]];\n    idx += 1;\n  }\n\n  return out;\n});\nexport default props;","import _curry2 from './internal/_curry2';\nimport _isNumber from './internal/_isNumber';\n\n/**\n * Returns a list of numbers from `from` (inclusive) to `to` (exclusive).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> Number -> [Number]\n * @param {Number} from The first number in the list.\n * @param {Number} to One more than the last number in the list.\n * @return {Array} The list of numbers in tthe set `[a, b)`.\n * @example\n *\n *      R.range(1, 5);    //=> [1, 2, 3, 4]\n *      R.range(50, 53);  //=> [50, 51, 52]\n */\nvar range = /*#__PURE__*/_curry2(function range(from, to) {\n  if (!(_isNumber(from) && _isNumber(to))) {\n    throw new TypeError('Both arguments to range must be numbers');\n  }\n  var result = [];\n  var n = from;\n  while (n < to) {\n    result.push(n);\n    n += 1;\n  }\n  return result;\n});\nexport default range;","import _curry3 from './internal/_curry3';\n\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * Similar to [`reduce`](#reduce), except moves through the input list from the\n * right to the left.\n *\n * The iterator function receives two values: *(value, acc)*, while the arguments'\n * order of `reduce`'s iterator function is *(acc, value)*.\n *\n * Note: `R.reduceRight` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduceRight` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> b) -> b -> [a] -> b\n * @param {Function} fn The iterator function. Receives two values, the current element from the array\n *        and the accumulator.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.addIndex\n * @example\n *\n *      R.reduceRight(R.subtract, 0, [1, 2, 3, 4]) // => (1 - (2 - (3 - (4 - 0)))) = -2\n *      //    -               -2\n *      //   / \\              / \\\n *      //  1   -            1   3\n *      //     / \\              / \\\n *      //    2   -     ==>    2  -1\n *      //       / \\              / \\\n *      //      3   -            3   4\n *      //         / \\              / \\\n *      //        4   0            4   0\n *\n * @symb R.reduceRight(f, a, [b, c, d]) = f(b, f(c, f(d, a)))\n */\nvar reduceRight = /*#__PURE__*/_curry3(function reduceRight(fn, acc, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    acc = fn(list[idx], acc);\n    idx -= 1;\n  }\n  return acc;\n});\nexport default reduceRight;","import _curryN from './internal/_curryN';\nimport _reduce from './internal/_reduce';\nimport _reduced from './internal/_reduced';\n\n/**\n * Like [`reduce`](#reduce), `reduceWhile` returns a single item by iterating\n * through the list, successively calling the iterator function. `reduceWhile`\n * also takes a predicate that is evaluated before each step. If the predicate\n * returns `false`, it \"short-circuits\" the iteration and returns the current\n * value of the accumulator.\n *\n * @func\n * @memberOf R\n * @since v0.22.0\n * @category List\n * @sig ((a, b) -> Boolean) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} pred The predicate. It is passed the accumulator and the\n *        current element.\n * @param {Function} fn The iterator function. Receives two values, the\n *        accumulator and the current element.\n * @param {*} a The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced\n * @example\n *\n *      var isOdd = (acc, x) => x % 2 === 1;\n *      var xs = [1, 3, 5, 60, 777, 800];\n *      R.reduceWhile(isOdd, R.add, 0, xs); //=> 9\n *\n *      var ys = [2, 4, 6]\n *      R.reduceWhile(isOdd, R.add, 111, ys); //=> 111\n */\nvar reduceWhile = /*#__PURE__*/_curryN(4, [], function _reduceWhile(pred, fn, a, list) {\n  return _reduce(function (acc, x) {\n    return pred(acc, x) ? fn(acc, x) : _reduced(acc);\n  }, a, list);\n});\nexport default reduceWhile;","import _curry1 from './internal/_curry1';\nimport _reduced from './internal/_reduced';\n\n/**\n * Returns a value wrapped to indicate that it is the final value of the reduce\n * and transduce functions. The returned value should be considered a black\n * box: the internal structure is not guaranteed to be stable.\n *\n * Note: this optimization is unavailable to functions not explicitly listed\n * above. For instance, it is not currently supported by\n * [`reduceRight`](#reduceRight).\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category List\n * @sig a -> *\n * @param {*} x The final value of the reduce.\n * @return {*} The wrapped value.\n * @see R.reduce, R.transduce\n * @example\n *\n *     R.reduce(\n *       (acc, item) => item > 3 ? R.reduced(acc) : acc.concat(item),\n *       [],\n *       [1, 2, 3, 4, 5]) // [1, 2, 3]\n */\nvar reduced = /*#__PURE__*/_curry1(_reduced);\nexport default reduced;","import _curry2 from './internal/_curry2';\n\n/**\n * Calls an input function `n` times, returning an array containing the results\n * of those function calls.\n *\n * `fn` is passed one argument: The current value of `n`, which begins at `0`\n * and is gradually incremented to `n - 1`.\n *\n * @func\n * @memberOf R\n * @since v0.2.3\n * @category List\n * @sig (Number -> a) -> Number -> [a]\n * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n * @return {Array} An array containing the return values of all calls to `fn`.\n * @see R.repeat\n * @example\n *\n *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n * @symb R.times(f, 0) = []\n * @symb R.times(f, 1) = [f(0)]\n * @symb R.times(f, 2) = [f(0), f(1)]\n */\nvar times = /*#__PURE__*/_curry2(function times(fn, n) {\n  var len = Number(n);\n  var idx = 0;\n  var list;\n\n  if (len < 0 || isNaN(len)) {\n    throw new RangeError('n must be a non-negative number');\n  }\n  list = new Array(len);\n  while (idx < len) {\n    list[idx] = fn(idx);\n    idx += 1;\n  }\n  return list;\n});\nexport default times;","import _curry2 from './internal/_curry2';\nimport always from './always';\nimport times from './times';\n\n/**\n * Returns a fixed list of size `n` containing a specified identical value.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig a -> n -> [a]\n * @param {*} value The value to repeat.\n * @param {Number} n The desired size of the output list.\n * @return {Array} A new array containing `n` `value`s.\n * @see R.times\n * @example\n *\n *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n *\n *      var obj = {};\n *      var repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n * @symb R.repeat(a, 0) = []\n * @symb R.repeat(a, 1) = [a]\n * @symb R.repeat(a, 2) = [a, a]\n */\nvar repeat = /*#__PURE__*/_curry2(function repeat(value, n) {\n  return times(always(value), n);\n});\nexport default repeat;","import _curry3 from './internal/_curry3';\n\n/**\n * Replace a substring or regex match in a string with a replacement.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category String\n * @sig RegExp|String -> String -> String -> String\n * @param {RegExp|String} pattern A regular expression or a substring to match.\n * @param {String} replacement The string to replace the matches with.\n * @param {String} str The String to do the search and replacement in.\n * @return {String} The result.\n * @example\n *\n *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *\n *      // Use the \"g\" (global) flag to replace all occurrences:\n *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n */\nvar replace = /*#__PURE__*/_curry3(function replace(regex, replacement, str) {\n  return str.replace(regex, replacement);\n});\nexport default replace;","import _curry3 from './internal/_curry3';\n\n/**\n * Scan is similar to [`reduce`](#reduce), but returns a list of successively\n * reduced values from the left\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> [a]\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {Array} A list of all intermediately reduced values.\n * @see R.reduce\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var factorials = R.scan(R.multiply, 1, numbers); //=> [1, 1, 2, 6, 24]\n * @symb R.scan(f, a, [b, c]) = [a, f(a, b), f(f(a, b), c)]\n */\nvar scan = /*#__PURE__*/_curry3(function scan(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [acc];\n  while (idx < len) {\n    acc = fn(acc, list[idx]);\n    result[idx + 1] = acc;\n    idx += 1;\n  }\n  return result;\n});\nexport default scan;","import _curry2 from './internal/_curry2';\nimport ap from './ap';\nimport map from './map';\nimport prepend from './prepend';\nimport reduceRight from './reduceRight';\n\n/**\n * Transforms a [Traversable](https://github.com/fantasyland/fantasy-land#traversable)\n * of [Applicative](https://github.com/fantasyland/fantasy-land#applicative) into an\n * Applicative of Traversable.\n *\n * Dispatches to the `sequence` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> t (f a) -> f (t a)\n * @param {Function} of\n * @param {*} traversable\n * @return {*}\n * @see R.traverse\n * @example\n *\n *      R.sequence(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n *      R.sequence(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n *\n *      R.sequence(R.of, Just([1, 2, 3])); //=> [Just(1), Just(2), Just(3)]\n *      R.sequence(R.of, Nothing());       //=> [Nothing()]\n */\nvar sequence = /*#__PURE__*/_curry2(function sequence(of, traversable) {\n  return typeof traversable.sequence === 'function' ? traversable.sequence(of) : reduceRight(function (x, acc) {\n    return ap(map(prepend, x), acc);\n  }, of([]), traversable);\n});\nexport default sequence;","import _curry3 from './internal/_curry3';\nimport always from './always';\nimport over from './over';\n\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the given value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> a -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lensProp('x');\n *\n *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}\n *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}\n */\nvar set = /*#__PURE__*/_curry3(function set(lens, v, x) {\n  return over(lens, always(v), x);\n});\nexport default set;","import _curry2 from './internal/_curry2';\n\n/**\n * Returns a copy of the list, sorted according to the comparator function,\n * which should accept two values at a time and return a negative number if the\n * first value is smaller, a positive number if it's larger, and zero if they\n * are equal. Please note that this is a **copy** of the list. It does not\n * modify the original.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, a) -> Number) -> [a] -> [a]\n * @param {Function} comparator A sorting function :: a -> b -> Int\n * @param {Array} list The list to sort\n * @return {Array} a new array with its elements sorted by the comparator function.\n * @example\n *\n *      var diff = function(a, b) { return a - b; };\n *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n */\nvar sort = /*#__PURE__*/_curry2(function sort(comparator, list) {\n  return Array.prototype.slice.call(list, 0).sort(comparator);\n});\nexport default sort;","import _curry2 from './internal/_curry2';\n\n/**\n * Sorts the list according to the supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord b => (a -> b) -> [a] -> [a]\n * @param {Function} fn\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted by the keys generated by `fn`.\n * @example\n *\n *      var sortByFirstItem = R.sortBy(R.prop(0));\n *      var sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n *      var pairs = [[-1, 1], [-2, 2], [-3, 3]];\n *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n *      var alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      var bob = {\n *        name: 'Bob',\n *        age: -10\n *      };\n *      var clara = {\n *        name: 'clara',\n *        age: 314.159\n *      };\n *      var people = [clara, bob, alice];\n *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n */\nvar sortBy = /*#__PURE__*/_curry2(function sortBy(fn, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var aa = fn(a);\n    var bb = fn(b);\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  });\n});\nexport default sortBy;","import _curry2 from './internal/_curry2';\n\n/**\n * Sorts a list according to a list of comparators.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Relation\n * @sig [(a, a) -> Number] -> [a] -> [a]\n * @param {Array} functions A list of comparator functions.\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted according to the comarator functions.\n * @example\n *\n *      var alice = {\n *        name: 'alice',\n *        age: 40\n *      };\n *      var bob = {\n *        name: 'bob',\n *        age: 30\n *      };\n *      var clara = {\n *        name: 'clara',\n *        age: 40\n *      };\n *      var people = [clara, bob, alice];\n *      var ageNameSort = R.sortWith([\n *        R.descend(R.prop('age')),\n *        R.ascend(R.prop('name'))\n *      ]);\n *      ageNameSort(people); //=> [alice, clara, bob]\n */\nvar sortWith = /*#__PURE__*/_curry2(function sortWith(fns, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var result = 0;\n    var i = 0;\n    while (result === 0 && i < fns.length) {\n      result = fns[i](a, b);\n      i += 1;\n    }\n    return result;\n  });\n});\nexport default sortWith;","import invoker from './invoker';\n\n/**\n * Splits a string into an array of strings based on the given\n * separator.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig (String | RegExp) -> String -> [String]\n * @param {String|RegExp} sep The pattern.\n * @param {String} str The string to separate into an array.\n * @return {Array} The array of strings from `str` separated by `str`.\n * @see R.join\n * @example\n *\n *      var pathComponents = R.split('/');\n *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']\n *\n *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']\n */\nvar split = /*#__PURE__*/invoker(1, 'split');\nexport default split;","import _curry2 from './internal/_curry2';\nimport length from './length';\nimport slice from './slice';\n\n/**\n * Splits a given list or string at a given index.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig Number -> [a] -> [[a], [a]]\n * @sig Number -> String -> [String, String]\n * @param {Number} index The index where the array/string is split.\n * @param {Array|String} array The array/string to be split.\n * @return {Array}\n * @example\n *\n *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]\n *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']\n *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']\n */\nvar splitAt = /*#__PURE__*/_curry2(function splitAt(index, array) {\n  return [slice(0, index, array), slice(index, length(array), array)];\n});\nexport default splitAt;","import _curry2 from './internal/_curry2';\nimport slice from './slice';\n\n/**\n * Splits a collection into slices of the specified length.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @sig Number -> String -> [String]\n * @param {Number} n\n * @param {Array} list\n * @return {Array}\n * @example\n *\n *      R.splitEvery(3, [1, 2, 3, 4, 5, 6, 7]); //=> [[1, 2, 3], [4, 5, 6], [7]]\n *      R.splitEvery(3, 'foobarbaz'); //=> ['foo', 'bar', 'baz']\n */\nvar splitEvery = /*#__PURE__*/_curry2(function splitEvery(n, list) {\n  if (n <= 0) {\n    throw new Error('First argument to splitEvery must be a positive integer');\n  }\n  var result = [];\n  var idx = 0;\n  while (idx < list.length) {\n    result.push(slice(idx, idx += n, list));\n  }\n  return result;\n});\nexport default splitEvery;","import _curry2 from './internal/_curry2';\n\n/**\n * Takes a list and a predicate and returns a pair of lists with the following properties:\n *\n *  - the result of concatenating the two output lists is equivalent to the input list;\n *  - none of the elements of the first output list satisfies the predicate; and\n *  - if the second output list is non-empty, its first element satisfies the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [[a], [a]]\n * @param {Function} pred The predicate that determines where the array is split.\n * @param {Array} list The array to be split.\n * @return {Array}\n * @example\n *\n *      R.splitWhen(R.equals(2), [1, 2, 3, 1, 2, 3]);   //=> [[1], [2, 3, 1, 2, 3]]\n */\nvar splitWhen = /*#__PURE__*/_curry2(function splitWhen(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var prefix = [];\n\n  while (idx < len && !pred(list[idx])) {\n    prefix.push(list[idx]);\n    idx += 1;\n  }\n\n  return [prefix, Array.prototype.slice.call(list, idx)];\n});\nexport default splitWhen;","import _curry2 from './internal/_curry2';\nimport equals from './equals';\nimport take from './take';\n\n/**\n * Checks if a list starts with the provided values\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> Boolean\n * @sig String -> Boolean\n * @param {*} prefix\n * @param {*} list\n * @return {Boolean}\n * @example\n *\n *      R.startsWith('a', 'abc')                //=> true\n *      R.startsWith('b', 'abc')                //=> false\n *      R.startsWith(['a'], ['a', 'b', 'c'])    //=> true\n *      R.startsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\nvar startsWith = /*#__PURE__*/_curry2(function (prefix, list) {\n  return equals(take(prefix.length, list), prefix);\n});\nexport default startsWith;","import _curry2 from './internal/_curry2';\n\n/**\n * Subtracts its second argument from its first argument.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a - b`.\n * @see R.add\n * @example\n *\n *      R.subtract(10, 8); //=> 2\n *\n *      var minus5 = R.subtract(R.__, 5);\n *      minus5(17); //=> 12\n *\n *      var complementaryAngle = R.subtract(90);\n *      complementaryAngle(30); //=> 60\n *      complementaryAngle(72); //=> 18\n */\nvar subtract = /*#__PURE__*/_curry2(function subtract(a, b) {\n  return Number(a) - Number(b);\n});\nexport default subtract;","import _curry2 from './internal/_curry2';\nimport concat from './concat';\nimport difference from './difference';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifferenceWith, R.difference, R.differenceWith\n * @example\n *\n *      R.symmetricDifference([1,2,3,4], [7,6,5,4,3]); //=> [1,2,7,6,5]\n *      R.symmetricDifference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5,1,2]\n */\nvar symmetricDifference = /*#__PURE__*/_curry2(function symmetricDifference(list1, list2) {\n  return concat(difference(list1, list2), difference(list2, list1));\n});\nexport default symmetricDifference;","import _curry3 from './internal/_curry3';\nimport concat from './concat';\nimport differenceWith from './differenceWith';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both. Duplication is determined according to the value\n * returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifference, R.difference, R.differenceWith\n * @example\n *\n *      var eqA = R.eqBy(R.prop('a'));\n *      var l1 = [{a: 1}, {a: 2}, {a: 3}, {a: 4}];\n *      var l2 = [{a: 3}, {a: 4}, {a: 5}, {a: 6}];\n *      R.symmetricDifferenceWith(eqA, l1, l2); //=> [{a: 1}, {a: 2}, {a: 5}, {a: 6}]\n */\nvar symmetricDifferenceWith = /*#__PURE__*/_curry3(function symmetricDifferenceWith(pred, list1, list2) {\n  return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));\n});\nexport default symmetricDifferenceWith;","import _curry2 from './internal/_curry2';\nimport slice from './slice';\n\n/**\n * Returns a new list containing the last `n` elements of a given list, passing\n * each value to the supplied predicate function, and terminating when the\n * predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropLastWhile, R.addIndex\n * @example\n *\n *      var isNotOne = x => x !== 1;\n *\n *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]\n *\n *      R.takeLastWhile(x => x !== 'R' , 'Ramda'); //=> 'amda'\n */\nvar takeLastWhile = /*#__PURE__*/_curry2(function takeLastWhile(fn, xs) {\n  var idx = xs.length - 1;\n  while (idx >= 0 && fn(xs[idx])) {\n    idx -= 1;\n  }\n  return slice(idx + 1, Infinity, xs);\n});\nexport default takeLastWhile;","import _curry2 from './_curry2';\nimport _reduced from './_reduced';\nimport _xfBase from './_xfBase';\n\nvar XTakeWhile = /*#__PURE__*/function () {\n  function XTakeWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;\n  XTakeWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);\n  };\n\n  return XTakeWhile;\n}();\n\nvar _xtakeWhile = /*#__PURE__*/_curry2(function _xtakeWhile(f, xf) {\n  return new XTakeWhile(f, xf);\n});\nexport default _xtakeWhile;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xtakeWhile from './internal/_xtakeWhile';\nimport slice from './slice';\n\n/**\n * Returns a new list containing the first `n` elements of a given list,\n * passing each value to the supplied predicate function, and terminating when\n * the predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * Dispatches to the `takeWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropWhile, R.transduce, R.addIndex\n * @example\n *\n *      var isNotFour = x => x !== 4;\n *\n *      R.takeWhile(isNotFour, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3]\n *\n *      R.takeWhile(x => x !== 'd' , 'Ramda'); //=> 'Ram'\n */\nvar takeWhile = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['takeWhile'], _xtakeWhile, function takeWhile(fn, xs) {\n  var idx = 0;\n  var len = xs.length;\n  while (idx < len && fn(xs[idx])) {\n    idx += 1;\n  }\n  return slice(0, idx, xs);\n}));\nexport default takeWhile;","import _curry2 from './_curry2';\nimport _xfBase from './_xfBase';\n\nvar XTap = /*#__PURE__*/function () {\n  function XTap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XTap.prototype['@@transducer/init'] = _xfBase.init;\n  XTap.prototype['@@transducer/result'] = _xfBase.result;\n  XTap.prototype['@@transducer/step'] = function (result, input) {\n    this.f(input);\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XTap;\n}();\n\nvar _xtap = /*#__PURE__*/_curry2(function _xtap(f, xf) {\n  return new XTap(f, xf);\n});\nexport default _xtap;","import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xtap from './internal/_xtap';\n\n/**\n * Runs the given function with the supplied object, then returns the object.\n *\n * Acts as a transducer if a transformer is given as second parameter.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a -> *) -> a -> a\n * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n * @param {*} x\n * @return {*} `x`.\n * @example\n *\n *      var sayX = x => console.log('x is ' + x);\n *      R.tap(sayX, 100); //=> 100\n *      // logs 'x is 100'\n * @symb R.tap(f, a) = a\n */\nvar tap = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xtap, function tap(fn, x) {\n  fn(x);\n  return x;\n}));\nexport default tap;","export default function _isRegExp(x) {\n  return Object.prototype.toString.call(x) === '[object RegExp]';\n}","import _cloneRegExp from './internal/_cloneRegExp';\nimport _curry2 from './internal/_curry2';\nimport _isRegExp from './internal/_isRegExp';\nimport toString from './toString';\n\n/**\n * Determines whether a given string matches a given regular expression.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category String\n * @sig RegExp -> String -> Boolean\n * @param {RegExp} pattern\n * @param {String} str\n * @return {Boolean}\n * @see R.match\n * @example\n *\n *      R.test(/^x/, 'xyz'); //=> true\n *      R.test(/^y/, 'xyz'); //=> false\n */\nvar test = /*#__PURE__*/_curry2(function test(pattern, str) {\n  if (!_isRegExp(pattern)) {\n    throw new TypeError('‘test’ requires a value of type RegExp as its first argument; received ' + toString(pattern));\n  }\n  return _cloneRegExp(pattern).test(str);\n});\nexport default test;","import invoker from './invoker';\n\n/**\n * The lower case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to lower case.\n * @return {String} The lower case version of `str`.\n * @see R.toUpper\n * @example\n *\n *      R.toLower('XYZ'); //=> 'xyz'\n */\nvar toLower = /*#__PURE__*/invoker(0, 'toLowerCase');\nexport default toLower;","import _curry1 from './internal/_curry1';\nimport _has from './internal/_has';\n\n/**\n * Converts an object into an array of key, value arrays. Only the object's\n * own properties are used.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own properties.\n * @see R.fromPairs\n * @example\n *\n *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n */\nvar toPairs = /*#__PURE__*/_curry1(function toPairs(obj) {\n  var pairs = [];\n  for (var prop in obj) {\n    if (_has(prop, obj)) {\n      pairs[pairs.length] = [prop, obj[prop]];\n    }\n  }\n  return pairs;\n});\nexport default toPairs;","import _curry1 from './internal/_curry1';\n\n/**\n * Converts an object into an array of key, value arrays. The object's own\n * properties and prototype properties are used. Note that the order of the\n * output array is not guaranteed to be consistent across different JS\n * platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own\n *         and prototype properties.\n * @example\n *\n *      var F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      var f = new F();\n *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]\n */\nvar toPairsIn = /*#__PURE__*/_curry1(function toPairsIn(obj) {\n  var pairs = [];\n  for (var prop in obj) {\n    pairs[pairs.length] = [prop, obj[prop]];\n  }\n  return pairs;\n});\nexport default toPairsIn;","import invoker from './invoker';\n\n/**\n * The upper case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to upper case.\n * @return {String} The upper case version of `str`.\n * @see R.toLower\n * @example\n *\n *      R.toUpper('abc'); //=> 'ABC'\n */\nvar toUpper = /*#__PURE__*/invoker(0, 'toUpperCase');\nexport default toUpper;","import _reduce from './internal/_reduce';\nimport _xwrap from './internal/_xwrap';\nimport curryN from './curryN';\n\n/**\n * Initializes a transducer using supplied iterator function. Returns a single\n * item by iterating through the list, successively calling the transformed\n * iterator function and passing it an accumulator value and the current value\n * from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It will be\n * wrapped as a transformer to initialize the transducer. A transformer can be\n * passed directly in place of an iterator function. In both cases, iteration\n * may be stopped early with the [`R.reduced`](#reduced) function.\n *\n * A transducer is a function that accepts a transformer and returns a\n * transformer and can be composed directly.\n *\n * A transformer is an an object that provides a 2-arity reducing iterator\n * function, step, 0-arity initial value function, init, and 1-arity result\n * extraction function, result. The step function is used as the iterator\n * function in reduce. The result function is used to convert the final\n * accumulator into the return type and in most cases is\n * [`R.identity`](#identity). The init function can be used to provide an\n * initial accumulator, but is ignored by transduce.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (c -> c) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array. Wrapped as transformer, if necessary, and used to\n *        initialize the transducer\n * @param {*} acc The initial accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced, R.into\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n *      R.transduce(transducer, R.flip(R.append), [], numbers); //=> [2, 3]\n *\n *      var isOdd = (x) => x % 2 === 1;\n *      var firstOddTransducer = R.compose(R.filter(isOdd), R.take(1));\n *      R.transduce(firstOddTransducer, R.flip(R.append), [], R.range(0, 100)); //=> [1]\n */\nvar transduce = /*#__PURE__*/curryN(4, function transduce(xf, fn, acc, list) {\n  return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);\n});\nexport default transduce;","import _curry1 from './internal/_curry1';\n\n/**\n * Transposes the rows and columns of a 2D list.\n * When passed a list of `n` lists of length `x`,\n * returns a list of `x` lists of length `n`.\n *\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [[a]] -> [[a]]\n * @param {Array} list A 2D list\n * @return {Array} A 2D list\n * @example\n *\n *      R.transpose([[1, 'a'], [2, 'b'], [3, 'c']]) //=> [[1, 2, 3], ['a', 'b', 'c']]\n *      R.transpose([[1, 2, 3], ['a', 'b', 'c']]) //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n *\n *      // If some of the rows are shorter than the following rows, their elements are skipped:\n *      R.transpose([[10, 11], [20], [], [30, 31, 32]]) //=> [[10, 20, 30], [11, 31], [32]]\n * @symb R.transpose([[a], [b], [c]]) = [a, b, c]\n * @symb R.transpose([[a, b], [c, d]]) = [[a, c], [b, d]]\n * @symb R.transpose([[a, b], [c]]) = [[a, c], [b]]\n */\nvar transpose = /*#__PURE__*/_curry1(function transpose(outerlist) {\n  var i = 0;\n  var result = [];\n  while (i < outerlist.length) {\n    var innerlist = outerlist[i];\n    var j = 0;\n    while (j < innerlist.length) {\n      if (typeof result[j] === 'undefined') {\n        result[j] = [];\n      }\n      result[j].push(innerlist[j]);\n      j += 1;\n    }\n    i += 1;\n  }\n  return result;\n});\nexport default transpose;","import _curry3 from './internal/_curry3';\nimport map from './map';\nimport sequence from './sequence';\n\n/**\n * Maps an [Applicative](https://github.com/fantasyland/fantasy-land#applicative)-returning\n * function over a [Traversable](https://github.com/fantasyland/fantasy-land#traversable),\n * then uses [`sequence`](#sequence) to transform the resulting Traversable of Applicative\n * into an Applicative of Traversable.\n *\n * Dispatches to the `traverse` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> (a -> f b) -> t a -> f (t b)\n * @param {Function} of\n * @param {Function} f\n * @param {*} traversable\n * @return {*}\n * @see R.sequence\n * @example\n *\n *      // Returns `Nothing` if the given divisor is `0`\n *      safeDiv = n => d => d === 0 ? Nothing() : Just(n / d)\n *\n *      R.traverse(Maybe.of, safeDiv(10), [2, 4, 5]); //=> Just([5, 2.5, 2])\n *      R.traverse(Maybe.of, safeDiv(10), [2, 0, 5]); //=> Nothing\n */\nvar traverse = /*#__PURE__*/_curry3(function traverse(of, f, traversable) {\n  return typeof traversable['fantasy-land/traverse'] === 'function' ? traversable['fantasy-land/traverse'](f, of) : sequence(of, map(f, traversable));\n});\nexport default traverse;","import _curry1 from './internal/_curry1';\n\nvar ws = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\nvar zeroWidth = '\\u200b';\nvar hasProtoTrim = typeof String.prototype.trim === 'function';\n/**\n * Removes (strips) whitespace from both ends of the string.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to trim.\n * @return {String} Trimmed version of `str`.\n * @example\n *\n *      R.trim('   xyz  '); //=> 'xyz'\n *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n */\nvar _trim = !hasProtoTrim || /*#__PURE__*/ws.trim() || ! /*#__PURE__*/zeroWidth.trim() ? function trim(str) {\n  var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n  var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n  return str.replace(beginRx, '').replace(endRx, '');\n} : function trim(str) {\n  return str.trim();\n};\nvar trim = /*#__PURE__*/_curry1(_trim);\nexport default trim;","import _arity from './internal/_arity';\nimport _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\n\n/**\n * `tryCatch` takes two functions, a `tryer` and a `catcher`. The returned\n * function evaluates the `tryer`; if it does not throw, it simply returns the\n * result. If the `tryer` *does* throw, the returned function evaluates the\n * `catcher` function and returns its result. Note that for effective\n * composition with this function, both the `tryer` and `catcher` functions\n * must return the same type of results.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig (...x -> a) -> ((e, ...x) -> a) -> (...x -> a)\n * @param {Function} tryer The function that may throw.\n * @param {Function} catcher The function that will be evaluated if `tryer` throws.\n * @return {Function} A new function that will catch exceptions and send then to the catcher.\n * @example\n *\n *      R.tryCatch(R.prop('x'), R.F)({x: true}); //=> true\n *      R.tryCatch(R.prop('x'), R.F)(null);      //=> false\n */\nvar tryCatch = /*#__PURE__*/_curry2(function _tryCatch(tryer, catcher) {\n  return _arity(tryer.length, function () {\n    try {\n      return tryer.apply(this, arguments);\n    } catch (e) {\n      return catcher.apply(this, _concat([e], arguments));\n    }\n  });\n});\nexport default tryCatch;","import _curry1 from './internal/_curry1';\n\n/**\n * Takes a function `fn`, which takes a single array argument, and returns a\n * function which:\n *\n *   - takes any number of positional arguments;\n *   - passes these arguments to `fn` as an array; and\n *   - returns the result.\n *\n * In other words, `R.unapply` derives a variadic function from a function which\n * takes an array. `R.unapply` is the inverse of [`R.apply`](#apply).\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Function\n * @sig ([*...] -> a) -> (*... -> a)\n * @param {Function} fn\n * @return {Function}\n * @see R.apply\n * @example\n *\n *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'\n * @symb R.unapply(f)(a, b) = f([a, b])\n */\nvar unapply = /*#__PURE__*/_curry1(function unapply(fn) {\n  return function () {\n    return fn(Array.prototype.slice.call(arguments, 0));\n  };\n});\nexport default unapply;","import _curry1 from './internal/_curry1';\nimport nAry from './nAry';\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 1 parameter. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (* -> b) -> (a -> b)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 1.\n * @see R.binary, R.nAry\n * @example\n *\n *      var takesTwoArgs = function(a, b) {\n *        return [a, b];\n *      };\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      var takesOneArg = R.unary(takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only 1 argument is passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.unary(f)(a, b, c) = f(a)\n */\nvar unary = /*#__PURE__*/_curry1(function unary(fn) {\n  return nAry(1, fn);\n});\nexport default unary;","import _curry2 from './internal/_curry2';\nimport curryN from './curryN';\n\n/**\n * Returns a function of arity `n` from a (manually) curried function.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Function\n * @sig Number -> (a -> b) -> (a -> c)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to uncurry.\n * @return {Function} A new function.\n * @see R.curry\n * @example\n *\n *      var addFour = a => b => c => d => a + b + c + d;\n *\n *      var uncurriedAddFour = R.uncurryN(4, addFour);\n *      uncurriedAddFour(1, 2, 3, 4); //=> 10\n */\nvar uncurryN = /*#__PURE__*/_curry2(function uncurryN(depth, fn) {\n  return curryN(depth, function () {\n    var currentDepth = 1;\n    var value = fn;\n    var idx = 0;\n    var endIdx;\n    while (currentDepth <= depth && typeof value === 'function') {\n      endIdx = currentDepth === depth ? arguments.length : idx + value.length;\n      value = value.apply(this, Array.prototype.slice.call(arguments, idx, endIdx));\n      currentDepth += 1;\n      idx = endIdx;\n    }\n    return value;\n  });\n});\nexport default uncurryN;","import _curry2 from './internal/_curry2';\n\n/**\n * Builds a list from a seed value. Accepts an iterator function, which returns\n * either false to stop iteration or an array of length 2 containing the value\n * to add to the resulting list and the seed to be used in the next call to the\n * iterator function.\n *\n * The iterator function receives one argument: *(seed)*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig (a -> [b]) -> * -> [b]\n * @param {Function} fn The iterator function. receives one argument, `seed`, and returns\n *        either false to quit iteration or an array of length two to proceed. The element\n *        at index 0 of this array will be added to the resulting array, and the element\n *        at index 1 will be passed to the next call to `fn`.\n * @param {*} seed The seed value.\n * @return {Array} The final list.\n * @example\n *\n *      var f = n => n > 50 ? false : [-n, n + 10];\n *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]\n * @symb R.unfold(f, x) = [f(x)[0], f(f(x)[1])[0], f(f(f(x)[1])[1])[0], ...]\n */\nvar unfold = /*#__PURE__*/_curry2(function unfold(fn, seed) {\n  var pair = fn(seed);\n  var result = [];\n  while (pair && pair.length) {\n    result[result.length] = pair[0];\n    pair = fn(pair[1]);\n  }\n  return result;\n});\nexport default unfold;","import _concat from './internal/_concat';\nimport _curry2 from './internal/_curry2';\nimport compose from './compose';\nimport uniq from './uniq';\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @example\n *\n *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n */\nvar union = /*#__PURE__*/_curry2( /*#__PURE__*/compose(uniq, _concat));\nexport default union;","import _containsWith from './internal/_containsWith';\nimport _curry2 from './internal/_curry2';\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied predicate to\n * two list elements. Prefers the first item if two items compare equal based\n * on the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      var strEq = R.eqBy(String);\n *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n */\nvar uniqWith = /*#__PURE__*/_curry2(function uniqWith(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var item;\n  while (idx < len) {\n    item = list[idx];\n    if (!_containsWith(pred, item, result)) {\n      result[result.length] = item;\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default uniqWith;","import _concat from './internal/_concat';\nimport _curry3 from './internal/_curry3';\nimport uniqWith from './uniqWith';\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list. Duplication is determined according to the value returned by\n * applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [*] -> [*] -> [*]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @see R.union\n * @example\n *\n *      var l1 = [{a: 1}, {a: 2}];\n *      var l2 = [{a: 1}, {a: 4}];\n *      R.unionWith(R.eqBy(R.prop('a')), l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]\n */\nvar unionWith = /*#__PURE__*/_curry3(function unionWith(pred, list1, list2) {\n  return uniqWith(pred, _concat(list1, list2));\n});\nexport default unionWith;","import _curry3 from './internal/_curry3';\n\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is not satisfied, the function will return the result of\n * calling the `whenFalseFn` function with the same argument. If the predicate\n * is satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred        A predicate function\n * @param {Function} whenFalseFn A function to invoke when the `pred` evaluates\n *                               to a falsy value.\n * @param {*}        x           An object to test with the `pred` function and\n *                               pass to `whenFalseFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenFalseFn`.\n * @see R.ifElse, R.when\n * @example\n *\n *      let safeInc = R.unless(R.isNil, R.inc);\n *      safeInc(null); //=> null\n *      safeInc(1); //=> 2\n */\nvar unless = /*#__PURE__*/_curry3(function unless(pred, whenFalseFn, x) {\n  return pred(x) ? x : whenFalseFn(x);\n});\nexport default unless;","import _identity from './internal/_identity';\nimport chain from './chain';\n\n/**\n * Shorthand for `R.chain(R.identity)`, which removes one level of nesting from\n * any [Chain](https://github.com/fantasyland/fantasy-land#chain).\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain c => c (c a) -> c a\n * @param {*} list\n * @return {*}\n * @see R.flatten, R.chain\n * @example\n *\n *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]\n *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]\n */\nvar unnest = /*#__PURE__*/chain(_identity);\nexport default unnest;","import _curry3 from './internal/_curry3';\n\n/**\n * Takes a predicate, a transformation function, and an initial value,\n * and returns a value of the same type as the initial value.\n * It does so by applying the transformation until the predicate is satisfied,\n * at which point it returns the satisfactory value.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred A predicate function\n * @param {Function} fn The iterator function\n * @param {*} init Initial value\n * @return {*} Final value that satisfies predicate\n * @example\n *\n *      R.until(R.gt(R.__, 100), R.multiply(2))(1) // => 128\n */\nvar until = /*#__PURE__*/_curry3(function until(pred, fn, init) {\n  var val = init;\n  while (!pred(val)) {\n    val = fn(val);\n  }\n  return val;\n});\nexport default until;","import _curry1 from './internal/_curry1';\n\n/**\n * Returns a list of all the properties, including prototype properties, of the\n * supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own and prototype properties.\n * @see R.values, R.keysIn\n * @example\n *\n *      var F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      var f = new F();\n *      R.valuesIn(f); //=> ['X', 'Y']\n */\nvar valuesIn = /*#__PURE__*/_curry1(function valuesIn(obj) {\n  var prop;\n  var vs = [];\n  for (prop in obj) {\n    vs[vs.length] = obj[prop];\n  }\n  return vs;\n});\nexport default valuesIn;","import _curry2 from './internal/_curry2';\n\n// `Const` is a functor that effectively ignores the function given to `map`.\nvar Const = function (x) {\n  return { value: x, 'fantasy-land/map': function () {\n      return this;\n    } };\n};\n\n/**\n * Returns a \"view\" of the given data structure, determined by the given lens.\n * The lens's focus determines which portion of the data structure is visible.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> s -> a\n * @param {Lens} lens\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});  //=> 1\n *      R.view(xLens, {x: 4, y: 2});  //=> 4\n */\nvar view = /*#__PURE__*/_curry2(function view(lens, x) {\n  // Using `Const` effectively ignores the setter function of the `lens`,\n  // leaving the value returned by the getter function unmodified.\n  return lens(Const)(x).value;\n});\nexport default view;","import _curry3 from './internal/_curry3';\n\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is satisfied, the function will return the result of calling\n * the `whenTrueFn` function with the same argument. If the predicate is not\n * satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred       A predicate function\n * @param {Function} whenTrueFn A function to invoke when the `condition`\n *                              evaluates to a truthy value.\n * @param {*}        x          An object to test with the `pred` function and\n *                              pass to `whenTrueFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenTrueFn`.\n * @see R.ifElse, R.unless\n * @example\n *\n *      // truncate :: String -> String\n *      var truncate = R.when(\n *        R.propSatisfies(R.gt(R.__, 10), 'length'),\n *        R.pipe(R.take(10), R.append('…'), R.join(''))\n *      );\n *      truncate('12345');         //=> '12345'\n *      truncate('0123456789ABC'); //=> '0123456789…'\n */\nvar when = /*#__PURE__*/_curry3(function when(pred, whenTrueFn, x) {\n  return pred(x) ? whenTrueFn(x) : x;\n});\nexport default when;","import _curry2 from './internal/_curry2';\nimport _has from './internal/_has';\n\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec. Each of the spec's own properties must be a predicate function.\n * Each predicate is applied to the value of the corresponding property of the\n * test object. `where` returns true if all the predicates return true, false\n * otherwise.\n *\n * `where` is well suited to declaratively expressing constraints for other\n * functions such as [`filter`](#filter) and [`find`](#find).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Object\n * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propSatisfies, R.whereEq\n * @example\n *\n *      // pred :: Object -> Boolean\n *      var pred = R.where({\n *        a: R.equals('foo'),\n *        b: R.complement(R.equals('bar')),\n *        x: R.gt(R.__, 10),\n *        y: R.lt(R.__, 20)\n *      });\n *\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 19}); //=> true\n *      pred({a: 'xxx', b: 'xxx', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'bar', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 10, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> false\n */\nvar where = /*#__PURE__*/_curry2(function where(spec, testObj) {\n  for (var prop in spec) {\n    if (_has(prop, spec) && !spec[prop](testObj[prop])) {\n      return false;\n    }\n  }\n  return true;\n});\nexport default where;","import _curry2 from './internal/_curry2';\nimport equals from './equals';\nimport map from './map';\nimport where from './where';\n\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec, false otherwise. An object satisfies the spec if, for each of the\n * spec's own properties, accessing that property of the object gives the same\n * value (in [`R.equals`](#equals) terms) as accessing that property of the\n * spec.\n *\n * `whereEq` is a specialization of [`where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @sig {String: *} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propEq, R.where\n * @example\n *\n *      // pred :: Object -> Boolean\n *      var pred = R.whereEq({a: 1, b: 2});\n *\n *      pred({a: 1});              //=> false\n *      pred({a: 1, b: 2});        //=> true\n *      pred({a: 1, b: 2, c: 3});  //=> true\n *      pred({a: 1, b: 1});        //=> false\n */\nvar whereEq = /*#__PURE__*/_curry2(function whereEq(spec, testObj) {\n  return where(map(equals, spec), testObj);\n});\nexport default whereEq;","import _contains from './internal/_contains';\nimport _curry2 from './internal/_curry2';\nimport flip from './flip';\nimport reject from './reject';\n\n/**\n * Returns a new list without values in the first argument.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @param {Array} list1 The values to be removed from `list2`.\n * @param {Array} list2 The array to remove values from.\n * @return {Array} The new array without values in `list1`.\n * @see R.transduce, R.difference\n * @example\n *\n *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\n */\nvar without = /*#__PURE__*/_curry2(function (xs, list) {\n  return reject(flip(_contains)(xs), list);\n});\nexport default without;","import _curry2 from './internal/_curry2';\n\n/**\n * Creates a new list out of the two supplied by creating each possible pair\n * from the lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The list made by combining each possible pair from\n *         `as` and `bs` into pairs (`[a, b]`).\n * @example\n *\n *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n * @symb R.xprod([a, b], [c, d]) = [[a, c], [a, d], [b, c], [b, d]]\n */\nvar xprod = /*#__PURE__*/_curry2(function xprod(a, b) {\n  // = xprodWith(prepend); (takes about 3 times as long...)\n  var idx = 0;\n  var ilen = a.length;\n  var j;\n  var jlen = b.length;\n  var result = [];\n  while (idx < ilen) {\n    j = 0;\n    while (j < jlen) {\n      result[result.length] = [a[idx], b[j]];\n      j += 1;\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default xprod;","import _curry2 from './internal/_curry2';\n\n/**\n * Creates a new list out of the two supplied by pairing up equally-positioned\n * items from both lists. The returned list is truncated to the length of the\n * shorter of the two input lists.\n * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\n * @example\n *\n *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n * @symb R.zip([a, b, c], [d, e, f]) = [[a, d], [b, e], [c, f]]\n */\nvar zip = /*#__PURE__*/_curry2(function zip(a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n  while (idx < len) {\n    rv[idx] = [a[idx], b[idx]];\n    idx += 1;\n  }\n  return rv;\n});\nexport default zip;","import _curry2 from './internal/_curry2';\n\n/**\n * Creates a new object out of a list of keys and a list of values.\n * Key/value pairing is truncated to the length of the shorter of the two lists.\n * Note: `zipObj` is equivalent to `pipe(zip, fromPairs)`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [String] -> [*] -> {String: *}\n * @param {Array} keys The array that will be properties on the output object.\n * @param {Array} values The list of values on the output object.\n * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n * @example\n *\n *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n */\nvar zipObj = /*#__PURE__*/_curry2(function zipObj(keys, values) {\n  var idx = 0;\n  var len = Math.min(keys.length, values.length);\n  var out = {};\n  while (idx < len) {\n    out[keys[idx]] = values[idx];\n    idx += 1;\n  }\n  return out;\n});\nexport default zipObj;","import _curry3 from './internal/_curry3';\n\n/**\n * Creates a new list out of the two supplied by applying the function to each\n * equally-positioned pair in the lists. The returned list is truncated to the\n * length of the shorter of the two input lists.\n *\n * @function\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> c) -> [a] -> [b] -> [c]\n * @param {Function} fn The function used to combine the two elements into one value.\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`\n *         using `fn`.\n * @example\n *\n *      var f = (x, y) => {\n *        // ...\n *      };\n *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);\n *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]\n * @symb R.zipWith(fn, [a, b, c], [d, e, f]) = [fn(a, d), fn(b, e), fn(c, f)]\n */\nvar zipWith = /*#__PURE__*/_curry3(function zipWith(fn, a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n  while (idx < len) {\n    rv[idx] = fn(a[idx], b[idx]);\n    idx += 1;\n  }\n  return rv;\n});\nexport default zipWith;","export { default as F } from './F';\nexport { default as T } from './T';\nexport { default as __ } from './__';\nexport { default as add } from './add';\nexport { default as addIndex } from './addIndex';\nexport { default as adjust } from './adjust';\nexport { default as all } from './all';\nexport { default as allPass } from './allPass';\nexport { default as always } from './always';\nexport { default as and } from './and';\nexport { default as any } from './any';\nexport { default as anyPass } from './anyPass';\nexport { default as ap } from './ap';\nexport { default as aperture } from './aperture';\nexport { default as append } from './append';\nexport { default as apply } from './apply';\nexport { default as applySpec } from './applySpec';\nexport { default as applyTo } from './applyTo';\nexport { default as ascend } from './ascend';\nexport { default as assoc } from './assoc';\nexport { default as assocPath } from './assocPath';\nexport { default as binary } from './binary';\nexport { default as bind } from './bind';\nexport { default as both } from './both';\nexport { default as call } from './call';\nexport { default as chain } from './chain';\nexport { default as clamp } from './clamp';\nexport { default as clone } from './clone';\nexport { default as comparator } from './comparator';\nexport { default as complement } from './complement';\nexport { default as compose } from './compose';\nexport { default as composeK } from './composeK';\nexport { default as composeP } from './composeP';\nexport { default as concat } from './concat';\nexport { default as cond } from './cond';\nexport { default as construct } from './construct';\nexport { default as constructN } from './constructN';\nexport { default as contains } from './contains';\nexport { default as converge } from './converge';\nexport { default as countBy } from './countBy';\nexport { default as curry } from './curry';\nexport { default as curryN } from './curryN';\nexport { default as dec } from './dec';\nexport { default as defaultTo } from './defaultTo';\nexport { default as descend } from './descend';\nexport { default as difference } from './difference';\nexport { default as differenceWith } from './differenceWith';\nexport { default as dissoc } from './dissoc';\nexport { default as dissocPath } from './dissocPath';\nexport { default as divide } from './divide';\nexport { default as drop } from './drop';\nexport { default as dropLast } from './dropLast';\nexport { default as dropLastWhile } from './dropLastWhile';\nexport { default as dropRepeats } from './dropRepeats';\nexport { default as dropRepeatsWith } from './dropRepeatsWith';\nexport { default as dropWhile } from './dropWhile';\nexport { default as either } from './either';\nexport { default as empty } from './empty';\nexport { default as endsWith } from './endsWith';\nexport { default as eqBy } from './eqBy';\nexport { default as eqProps } from './eqProps';\nexport { default as equals } from './equals';\nexport { default as evolve } from './evolve';\nexport { default as filter } from './filter';\nexport { default as find } from './find';\nexport { default as findIndex } from './findIndex';\nexport { default as findLast } from './findLast';\nexport { default as findLastIndex } from './findLastIndex';\nexport { default as flatten } from './flatten';\nexport { default as flip } from './flip';\nexport { default as forEach } from './forEach';\nexport { default as forEachObjIndexed } from './forEachObjIndexed';\nexport { default as fromPairs } from './fromPairs';\nexport { default as groupBy } from './groupBy';\nexport { default as groupWith } from './groupWith';\nexport { default as gt } from './gt';\nexport { default as gte } from './gte';\nexport { default as has } from './has';\nexport { default as hasIn } from './hasIn';\nexport { default as head } from './head';\nexport { default as identical } from './identical';\nexport { default as identity } from './identity';\nexport { default as ifElse } from './ifElse';\nexport { default as inc } from './inc';\nexport { default as indexBy } from './indexBy';\nexport { default as indexOf } from './indexOf';\nexport { default as init } from './init';\nexport { default as innerJoin } from './innerJoin';\nexport { default as insert } from './insert';\nexport { default as insertAll } from './insertAll';\nexport { default as intersection } from './intersection';\nexport { default as intersperse } from './intersperse';\nexport { default as into } from './into';\nexport { default as invert } from './invert';\nexport { default as invertObj } from './invertObj';\nexport { default as invoker } from './invoker';\nexport { default as is } from './is';\nexport { default as isEmpty } from './isEmpty';\nexport { default as isNil } from './isNil';\nexport { default as join } from './join';\nexport { default as juxt } from './juxt';\nexport { default as keys } from './keys';\nexport { default as keysIn } from './keysIn';\nexport { default as last } from './last';\nexport { default as lastIndexOf } from './lastIndexOf';\nexport { default as length } from './length';\nexport { default as lens } from './lens';\nexport { default as lensIndex } from './lensIndex';\nexport { default as lensPath } from './lensPath';\nexport { default as lensProp } from './lensProp';\nexport { default as lift } from './lift';\nexport { default as liftN } from './liftN';\nexport { default as lt } from './lt';\nexport { default as lte } from './lte';\nexport { default as map } from './map';\nexport { default as mapAccum } from './mapAccum';\nexport { default as mapAccumRight } from './mapAccumRight';\nexport { default as mapObjIndexed } from './mapObjIndexed';\nexport { default as match } from './match';\nexport { default as mathMod } from './mathMod';\nexport { default as max } from './max';\nexport { default as maxBy } from './maxBy';\nexport { default as mean } from './mean';\nexport { default as median } from './median';\nexport { default as memoize } from './memoize';\nexport { default as memoizeWith } from './memoizeWith';\nexport { default as merge } from './merge';\nexport { default as mergeAll } from './mergeAll';\nexport { default as mergeDeepLeft } from './mergeDeepLeft';\nexport { default as mergeDeepRight } from './mergeDeepRight';\nexport { default as mergeDeepWith } from './mergeDeepWith';\nexport { default as mergeDeepWithKey } from './mergeDeepWithKey';\nexport { default as mergeWith } from './mergeWith';\nexport { default as mergeWithKey } from './mergeWithKey';\nexport { default as min } from './min';\nexport { default as minBy } from './minBy';\nexport { default as modulo } from './modulo';\nexport { default as multiply } from './multiply';\nexport { default as nAry } from './nAry';\nexport { default as negate } from './negate';\nexport { default as none } from './none';\nexport { default as not } from './not';\nexport { default as nth } from './nth';\nexport { default as nthArg } from './nthArg';\nexport { default as o } from './o';\nexport { default as objOf } from './objOf';\nexport { default as of } from './of';\nexport { default as omit } from './omit';\nexport { default as once } from './once';\nexport { default as or } from './or';\nexport { default as over } from './over';\nexport { default as pair } from './pair';\nexport { default as partial } from './partial';\nexport { default as partialRight } from './partialRight';\nexport { default as partition } from './partition';\nexport { default as path } from './path';\nexport { default as pathEq } from './pathEq';\nexport { default as pathOr } from './pathOr';\nexport { default as pathSatisfies } from './pathSatisfies';\nexport { default as pick } from './pick';\nexport { default as pickAll } from './pickAll';\nexport { default as pickBy } from './pickBy';\nexport { default as pipe } from './pipe';\nexport { default as pipeK } from './pipeK';\nexport { default as pipeP } from './pipeP';\nexport { default as pluck } from './pluck';\nexport { default as prepend } from './prepend';\nexport { default as product } from './product';\nexport { default as project } from './project';\nexport { default as prop } from './prop';\nexport { default as propEq } from './propEq';\nexport { default as propIs } from './propIs';\nexport { default as propOr } from './propOr';\nexport { default as propSatisfies } from './propSatisfies';\nexport { default as props } from './props';\nexport { default as range } from './range';\nexport { default as reduce } from './reduce';\nexport { default as reduceBy } from './reduceBy';\nexport { default as reduceRight } from './reduceRight';\nexport { default as reduceWhile } from './reduceWhile';\nexport { default as reduced } from './reduced';\nexport { default as reject } from './reject';\nexport { default as remove } from './remove';\nexport { default as repeat } from './repeat';\nexport { default as replace } from './replace';\nexport { default as reverse } from './reverse';\nexport { default as scan } from './scan';\nexport { default as sequence } from './sequence';\nexport { default as set } from './set';\nexport { default as slice } from './slice';\nexport { default as sort } from './sort';\nexport { default as sortBy } from './sortBy';\nexport { default as sortWith } from './sortWith';\nexport { default as split } from './split';\nexport { default as splitAt } from './splitAt';\nexport { default as splitEvery } from './splitEvery';\nexport { default as splitWhen } from './splitWhen';\nexport { default as startsWith } from './startsWith';\nexport { default as subtract } from './subtract';\nexport { default as sum } from './sum';\nexport { default as symmetricDifference } from './symmetricDifference';\nexport { default as symmetricDifferenceWith } from './symmetricDifferenceWith';\nexport { default as tail } from './tail';\nexport { default as take } from './take';\nexport { default as takeLast } from './takeLast';\nexport { default as takeLastWhile } from './takeLastWhile';\nexport { default as takeWhile } from './takeWhile';\nexport { default as tap } from './tap';\nexport { default as test } from './test';\nexport { default as times } from './times';\nexport { default as toLower } from './toLower';\nexport { default as toPairs } from './toPairs';\nexport { default as toPairsIn } from './toPairsIn';\nexport { default as toString } from './toString';\nexport { default as toUpper } from './toUpper';\nexport { default as transduce } from './transduce';\nexport { default as transpose } from './transpose';\nexport { default as traverse } from './traverse';\nexport { default as trim } from './trim';\nexport { default as tryCatch } from './tryCatch';\nexport { default as type } from './type';\nexport { default as unapply } from './unapply';\nexport { default as unary } from './unary';\nexport { default as uncurryN } from './uncurryN';\nexport { default as unfold } from './unfold';\nexport { default as union } from './union';\nexport { default as unionWith } from './unionWith';\nexport { default as uniq } from './uniq';\nexport { default as uniqBy } from './uniqBy';\nexport { default as uniqWith } from './uniqWith';\nexport { default as unless } from './unless';\nexport { default as unnest } from './unnest';\nexport { default as until } from './until';\nexport { default as update } from './update';\nexport { default as useWith } from './useWith';\nexport { default as values } from './values';\nexport { default as valuesIn } from './valuesIn';\nexport { default as view } from './view';\nexport { default as when } from './when';\nexport { default as where } from './where';\nexport { default as whereEq } from './whereEq';\nexport { default as without } from './without';\nexport { default as xprod } from './xprod';\nexport { default as zip } from './zip';\nexport { default as zipObj } from './zipObj';\nexport { default as zipWith } from './zipWith';","/*\nDifferent stuff collected over time. Most of it used in one project or another\nin the past.\n */\n\nimport {curry, memoize} from 'ramda';\n\nexport const $ = (selector, context) => {\n  return (context || document).querySelector(selector);\n};\n\nexport const $$ = (selector, context) => {\n  return (context || document).querySelectorAll(selector);\n};\n\nexport const getElStyle = el => window.getComputedStyle(el);\n\nexport const getElStyleProp = memoize(curry((el, prop) => getElStyle(el).getPropertyValue(prop)));\n\n// converts a style value from '##px' to '##'\nexport const pxToInt = str => parseInt(str.substr(0, str.length - 2));\n\n// http://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport\n// element must be entirely on screen\nexport const isElementEntirelyInViewport = el => {\n  let rect = el.getBoundingClientRect();\n  return (\n    rect.top >= 0 &&\n    rect.left >= 0 &&\n    rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\n    rect.right <= (window.innerWidth || document.documentElement.clientWidth)\n  );\n};\n\n// element may be partially on screen\nexport const isElementInViewport = el => {\n  let rect = el.getBoundingClientRect();\n  return rect.bottom > 0 &&\n    rect.right > 0 &&\n    rect.left < (window.innerWidth || document.documentElement.clientWidth) &&\n    rect.top < (window.innerHeight || document.documentElement.clientHeight);\n};\n\nexport const isDomObj = (obj) => {\n  return !!(obj.nodeType || (obj === window));\n};\n\nexport const position = el => {\n  return {\n    left: el.offsetLeft,\n    top : el.offsetTop\n  };\n};\n\n// from http://jsperf.com/jquery-offset-vs-offsetparent-loop\nexport const offset = el => {\n  let ol = 0,\n      ot = 0;\n  if (el.offsetParent) {\n    do {\n      ol += el.offsetLeft;\n      ot += el.offsetTop;\n      el = el.offsetParent;\n    } while (el); // jshint ignore:line\n  }\n  return {\n    left: ol,\n    top : ot\n  };\n};\n\nexport const removeAllElements = el => {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n};\n\nexport const removeElement = el => {\n  if (el && el.parentNode) {\n    el.parentNode.removeChild(el);\n  }\n};\n\nexport const appendElement = (root, el) => {\n  let parent = isDomObj(root) ? root : document.querySelector(root);\n  if (parent) {\n    parent.appendChild(el);\n  } else {\n    console.warn('Can\\'t append element, selector not found: ', root);\n  }\n};\n\nexport const replaceElement = (root, el) => {\n  if (el.parentElement) {\n    let parent      = isDomObj(root) ? root : document.querySelector(root),\n        nextSibling = el.nextSibling;\n    if (parent) {\n      parent.removeChild(el);\n      parent.insertBefore(el, nextSibling);\n    } else {\n      console.warn('Can\\'t append element, selector not found: ', root);\n    }\n  } else {\n    appendElement(el, root);\n  }\n  return el;\n};\n\nexport const replaceElementWith = (oldEl, newEl, parentEl) => {\n  let parent = parentEl || oldEl.parentElement;\n  if (parent) {\n    let nextSibling = oldEl.nextSibling;\n    parent.removeChild(oldEl);\n    parent.insertBefore(newEl, nextSibling);\n    return newEl;\n  }\n  console.warn('Can\\'t replace element, no parent found', parent);\n  return false;\n};\n\nexport const escapeHTML = str => String(str).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n\n//https://davidwalsh.name/convert-html-stings-dom-nodes\nexport const HTMLStrToNode = str => {\n  return document.createRange().createContextualFragment(str);\n};\n\nexport const wrapElement = (wrapperStr, el) => {\n  let wrapperEl = HTMLStrToNode(wrapperStr),\n      elParent  = el.parentNode;\n\n  wrapperEl.appendChild(el);\n  elParent.appendChild(wrapperEl);\n  return wrapperEl;\n};\n\n// http://stackoverflow.com/questions/15329167/closest-ancestor-matching-selector-using-native-dom\nexport const closest = (root, el) => {\n  let matchesSelector = el.matches || el.webkitMatchesSelector || el.mozMatchesSelector || el.msMatchesSelector;\n  while (el) {\n    if (matchesSelector.bind(el)(root)) {\n      return el;\n    } else {\n      el = el.parentElement;\n    }\n  }\n  return false;\n};\n\n// from youmightnotneedjquery.com\nexport const hasClass = (className, el) => {\n  if (el.classList) {\n    el.classList.contains(className);\n  } else {\n    new RegExp('(^| )' + className + '( |$)', 'gi').test(el.className);\n  }\n};\n\nexport const addClass = (el, className) => {\n  if (el.classList) {\n    el.classList.add(className);\n  } else {\n    el.className += ' ' + className;\n  }\n};\n\nexport const removeClass = (el, className) => {\n  if (el.classList) {\n    el.classList.remove(className);\n  } else {\n    el.className = el.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n  }\n};\n\nexport const toggleClass = (el, className) => {\n  if (this.hasClass(el, className)) {\n    this.removeClass(el, className);\n  } else {\n    this.addClass(el, className);\n  }\n};\n\n// From impress.js\nexport const applyCSS = (el, props) => {\n  let key;\n  for (key in props) {\n    if (props.hasOwnProperty(key)) {\n      el.style[key] = props[key];\n    }\n  }\n  return el;\n};\n\n// from impress.js\n// `computeWindowScale` counts the scale factor between window size and size\n// defined for the presentation in the config.\nexport const computeWindowScale = config => {\n  let hScale = window.innerHeight / config.height,\n      wScale = window.innerWidth / config.width,\n      scale  = hScale > wScale ? wScale : hScale;\n\n  if (config.maxScale && scale > config.maxScale) {\n    scale = config.maxScale;\n  }\n\n  if (config.minScale && scale < config.minScale) {\n    scale = config.minScale;\n  }\n\n  return scale;\n};\n\n/**\n * Get an array of elements in the container returned as Array instead of a Node list\n */\nexport const querySelectorAllAsArray = (el, cls) => {\n  return Array.prototype.slice.call(el.querySelectorAll(cls), 0);\n};\n\nexport const centerElementInViewPort = el => {\n  let vpH = window.innerHeight,\n      vpW = window.innerWidth,\n      elR = el.getBoundingClientRect(),\n      elH = elR.height,\n      elW = elR.width;\n\n  el.style.left = (vpW / 2) - (elW / 2) + 'px';\n  el.style.top  = (vpH / 2) - (elH / 2) + 'px';\n};","import {enqueueDidMount, performDidMountQueue} from './LifecycleQueue';\nimport {\n  renderVDOM,\n  removeComponentInstance\n} from \"./Nori\";\nimport {removeAllElements} from \"./browser/DOMToolbox\";\n\n/*\n______________ ______________ ________   ________      _____      ________________________ _________________________\n\\__    ___/   |   \\_   _____/ \\______ \\  \\_____  \\    /     \\    /   _____/\\__    ___/    |   \\_   _____/\\_   _____/\n  |    | /    ~    \\    __)_   |    |  \\  /   |   \\  /  \\ /  \\   \\_____  \\   |    |  |    |   /|    __)   |    __)\n  |    | \\    Y    /        \\  |    `   \\/    |    \\/    Y    \\  /        \\  |    |  |    |  / |     \\    |     \\\n  |____|  \\___|_  /_______  / /_______  /\\_______  /\\____|__  / /_______  /  |____|  |______/  \\___  /    \\___  /\n                \\/        \\/          \\/         \\/         \\/          \\/                         \\/         \\/\n\nALL THE THINGS THAT TOUCH THE DOM ...\n\n */\n\nconst ID_KEY        = 'data-nori-id';\nconst isEvent       = event => /^on/.test(event);\nconst getEventName  = event => event.slice(2).toLowerCase();\n// \"Special props should be updated as new props are added to components.\nconst specialProps  = ['tweens', 'state', 'actions', 'children', 'element', 'min', 'max', 'mode', 'key'];\nconst isSpecialProp = test => specialProps.includes(test);\n\nlet eventMap = {},\n    $documentHostNode;\n\nexport const render = (component, hostNode) => {\n  console.time('render');\n  removeAllElements(hostNode);\n\n  let vdom = renderVDOM(component);\n\n  $documentHostNode = hostNode;\n\n  patch(vdom, null);\n  // $documentHostNode.appendChild(createElement(vdom));\n  performDidMountQueue();\n  console.timeEnd('render');\n};\n\nconst correlateVDOMNode = (vdomNode, $domRoot) => {\n  if (vdomNode === null) {\n    return $domRoot;\n  } else {\n    let $element = document.querySelector(`[${ID_KEY}=\"${vdomNode.props.id}\"]`);\n    if (!$element) {\n      console.warn(`correlateVDOMNode : Couldn't get [${ID_KEY}=\"${vdomNode.props.id}\"]`);\n    }\n    return $element;\n  }\n};\n\nexport const patch = (newvdom, currentvdom) => {\n  let patches = [];\n  updateDOM($documentHostNode, newvdom, currentvdom, 0, patches);\n  return patches;\n};\n\nconst updateDOM = ($element, newvdom, currentvdom, index = 0, patches) => {\n  if (currentvdom !== 0 && !currentvdom) {\n    const $newElement = createElement(newvdom);\n    $element.appendChild($newElement);\n    patches.push({\n      type  : 'APPEND',\n      node  : $newElement,\n      parent: $element,\n      vnode : newvdom\n    });\n  } else if (!newvdom) {\n    let $toRemove = correlateVDOMNode(currentvdom, $element);\n    patches.push({\n      type  : 'REMOVE',\n      node  : $toRemove,\n      parent: $element,\n      vnode : currentvdom\n    });\n    if ($toRemove) {\n      removeComponentInstance(currentvdom);\n      $element.removeChild($toRemove);\n    }\n  } else if (changed(newvdom, currentvdom)) {\n    // TODO need to test for a component and fix this!\n    const $newElement = createElement(newvdom);\n    removeComponentInstance(currentvdom);\n\n    patches.push({\n      type   : 'REPLACE',\n      oldNode: $element.childNodes[index],\n      node   : $newElement,\n      parent : $element,\n      vnode  : newvdom\n    });\n\n    $element.replaceChild($newElement, $element.childNodes[index]);\n  } else if (newvdom.type) {\n    // !== currentvdom.type\n    updateProps(\n      $element.childNodes[index],\n      newvdom.props,\n      currentvdom.props\n    );\n\n    patches.push({\n      type  : 'NEW',\n      node  : $element.childNodes[index],\n      parent: $element,\n      vnode : newvdom\n    });\n\n    const newLength = newvdom.children.length;\n    const oldLength = currentvdom.children.length;\n    for (let i = 0; i < newLength || i < oldLength; i++) {\n      updateDOM($element.childNodes[index], newvdom.children[i], currentvdom.children[i], i, patches);\n    }\n  }\n};\n\nconst changed = (newNode, oldNode) => {\n  return typeof newNode !== typeof oldNode ||\n    (typeof newNode === 'string' || typeof newNode === 'number' || typeof newNode === 'boolean') && newNode !== oldNode ||\n    newNode.type !== oldNode.type\n};\n\nconst createElement = node => {\n  let $element,\n      ownerComp = node.owner !== null && node.owner !== undefined ? node.owner : null;\n\n  // This shouldn't happen ... but just in case ...\n  if (node == null || node == undefined) {\n    console.warn(`createElement: Error, ${node} was undefined`);\n    return createTextNode(`createElement: Error, ${node} was undefined`);\n  }\n\n  if (typeof node === 'string' || typeof node === 'number') {\n    // Plain text value\n    $element = createTextNode(node);\n  } else if (typeof node.type === 'function') {\n    // Stateless functional component\n    $element = createElement(new node.type(node.props, node.children));\n  } else if (typeof node === 'object' && typeof node.type === 'string') {\n    $element = document.createElement(node.type);\n    if (node.hasOwnProperty('children')) {\n      node.children\n        .map(createElement)\n        .forEach($element.appendChild.bind($element));\n    }\n  } else if (typeof node === 'function') {\n    return createTextNode('createElement : expected vdom, node is a function', node);\n  } else {\n    return createTextNode(`createElement: Unknown node type ${node} : ${node.type}`);\n  }\n\n  if (ownerComp) {\n    ownerComp.current = $element;\n    if (typeof ownerComp.componentDidMount === 'function') {\n      enqueueDidMount(ownerComp.componentDidMount); //.bind(ownerComp)\n    }\n  }\n\n  setProps($element, node.props || {});\n  setEvents(node, $element);\n  return $element;\n};\n\nconst createTextNode = string => document.createTextNode(string);\n\n//------------------------------------------------------------------------------\n//EVENTSEVENTSEVENTSEVENTSEVENTSEVENTSEVENTSEVENTSEVENTSEVENTSEVENTSEVENTSEVENTS\n//------------------------------------------------------------------------------\n\nconst setEvents = (node, $element) => {\n  const props = node.props || {};\n  mapActions(props).forEach(evt => {\n    if (evt.type === 'event') {\n      const nodeId        = node.props.id;\n      evt.internalHandler = handleEventTrigger(evt, $element);\n      $element.addEventListener(evt.event, evt.internalHandler);\n      if (!eventMap.hasOwnProperty(nodeId)) {\n        eventMap[nodeId] = [];\n      }\n      eventMap[nodeId].push(() => $element.removeEventListener(evt.event, evt.internalHandler));\n    }\n  });\n};\n\nconst mapActions = props => Object.keys(props).reduce((acc, key) => {\n  let value = props[key],\n      evt   = isEvent(key) ? getEventName(key) : null;\n\n  if (evt !== null) {\n    acc.push({\n      type           : 'event',\n      event          : evt,\n      externalHandler: value,\n      internalHandler: null\n    });\n  }\n  return acc;\n}, []);\n\nconst handleEventTrigger = (evt, $element) => e => evt.externalHandler(createEventObject(e, $element));\n\n// Nori calls this\nexport const removeEvents = id => {\n  if (eventMap.hasOwnProperty(id)) {\n    eventMap[id].map(fn => {\n      fn();\n      return null;\n    });\n    delete eventMap[id];\n  }\n};\n\nconst createEventObject = (e, $element = null) => ({\n  event : e,\n  target: $element\n});\n\n//------------------------------------------------------------------------------\n//PROPSPROPSPROPSPROPSPROPSPROPSPROPSPROPSPROPSPROPSPROPSPROPSPROPSPROPSPROPSPRO\n//------------------------------------------------------------------------------\n\nconst updateProps = ($element, newProps, oldProps = {}) => {\n  let props = Object.assign({}, newProps, oldProps);\n  Object.keys(props).forEach(key => {\n    updateProp($element, key, newProps[key], oldProps[key]);\n  });\n};\n\nconst updateProp = ($element, key, newValue, oldValue) => {\n  if (!newValue) {\n    removeProp($element, key, oldValue);\n  } else if (!oldValue || newValue !== oldValue) {\n    setProp($element, key, newValue);\n  }\n};\n\nconst setProps = ($element, props) => Object.keys(props).forEach(key => {\n  let value = props[key];\n  setProp($element, key, value);\n  return $element;\n});\n\nconst setProp = ($element, key, value) => {\n  if (!isSpecialProp(key) && !isEvent(key)) {\n    if (key === 'className') {\n      key = 'class';\n    } else if (key === 'id') {\n      key = ID_KEY;\n    }\n    if (typeof value === 'boolean') {\n      setBooleanProp($element, key, value);\n    } else {\n      $element.setAttribute(key, value);\n    }\n  }\n};\n\nconst setBooleanProp = ($element, key, value) => {\n  if (value) {\n    $element.setAttribute(key, value);\n    $element[key] = true;\n  } else {\n    $element[key] = false;\n  }\n};\n\nconst removeProp = ($element, key, value) => {\n  if (!isSpecialProp(key)) {\n    if (key === 'className') {\n      key = 'class';\n    } else if (key === 'id') {\n      key = 'data-nid';\n    }\n    if (typeof value === 'boolean') {\n      removeBooleanProp($element, key);\n    } else {\n      $element.removeAttribute(key);\n    }\n  }\n};\n\nconst removeBooleanProp = ($element, key) => {\n  $element.removeAttribute(key);\n  $element[key] = false;\n};",";(function(root, factory) { // eslint-disable-line no-extra-semi\n  var deepDiff = factory(root);\n  // eslint-disable-next-line no-undef\n  if (typeof define === 'function' && define.amd) {\n      // AMD\n      define('DeepDiff', function() { // eslint-disable-line no-undef\n          return deepDiff;\n      });\n  } else if (typeof exports === 'object' || typeof navigator === 'object' && navigator.product.match(/ReactNative/i)) {\n      // Node.js or ReactNative\n      module.exports = deepDiff;\n  } else {\n      // Browser globals\n      var _deepdiff = root.DeepDiff;\n      deepDiff.noConflict = function() {\n          if (root.DeepDiff === deepDiff) {\n              root.DeepDiff = _deepdiff;\n          }\n          return deepDiff;\n      };\n      root.DeepDiff = deepDiff;\n  }\n}(this, function(root) {\n  var validKinds = ['N', 'E', 'A', 'D'];\n\n  // nodejs compatible on server side and in the browser.\n  function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  }\n\n  function Diff(kind, path) {\n    Object.defineProperty(this, 'kind', {\n      value: kind,\n      enumerable: true\n    });\n    if (path && path.length) {\n      Object.defineProperty(this, 'path', {\n        value: path,\n        enumerable: true\n      });\n    }\n  }\n\n  function DiffEdit(path, origin, value) {\n    DiffEdit.super_.call(this, 'E', path);\n    Object.defineProperty(this, 'lhs', {\n      value: origin,\n      enumerable: true\n    });\n    Object.defineProperty(this, 'rhs', {\n      value: value,\n      enumerable: true\n    });\n  }\n  inherits(DiffEdit, Diff);\n\n  function DiffNew(path, value) {\n    DiffNew.super_.call(this, 'N', path);\n    Object.defineProperty(this, 'rhs', {\n      value: value,\n      enumerable: true\n    });\n  }\n  inherits(DiffNew, Diff);\n\n  function DiffDeleted(path, value) {\n    DiffDeleted.super_.call(this, 'D', path);\n    Object.defineProperty(this, 'lhs', {\n      value: value,\n      enumerable: true\n    });\n  }\n  inherits(DiffDeleted, Diff);\n\n  function DiffArray(path, index, item) {\n    DiffArray.super_.call(this, 'A', path);\n    Object.defineProperty(this, 'index', {\n      value: index,\n      enumerable: true\n    });\n    Object.defineProperty(this, 'item', {\n      value: item,\n      enumerable: true\n    });\n  }\n  inherits(DiffArray, Diff);\n\n  function arrayRemove(arr, from, to) {\n    var rest = arr.slice((to || from) + 1 || arr.length);\n    arr.length = from < 0 ? arr.length + from : from;\n    arr.push.apply(arr, rest);\n    return arr;\n  }\n\n  function realTypeOf(subject) {\n    var type = typeof subject;\n    if (type !== 'object') {\n      return type;\n    }\n\n    if (subject === Math) {\n      return 'math';\n    } else if (subject === null) {\n      return 'null';\n    } else if (Array.isArray(subject)) {\n      return 'array';\n    } else if (Object.prototype.toString.call(subject) === '[object Date]') {\n      return 'date';\n    } else if (typeof subject.toString === 'function' && /^\\/.*\\//.test(subject.toString())) {\n      return 'regexp';\n    }\n    return 'object';\n  }\n\n  // http://werxltd.com/wp/2010/05/13/javascript-implementation-of-javas-string-hashcode-method/\n  function hashThisString(string) {\n    var hash = 0;\n    if (string.length === 0) { return hash; }\n    for (var i = 0; i < string.length; i++) {\n      var char = string.charCodeAt(i);\n      hash = ((hash << 5) - hash) + char;\n      hash = hash & hash; // Convert to 32bit integer\n    }\n    return hash;\n  }\n\n  // Gets a hash of the given object in an array order-independent fashion\n  // also object key order independent (easier since they can be alphabetized)\n  function getOrderIndependentHash(object) {\n    var accum = 0;\n    var type = realTypeOf(object);\n\n    if (type === 'array') {\n      object.forEach(function (item) {\n        // Addition is commutative so this is order indep\n        accum += getOrderIndependentHash(item);\n      });\n\n      var arrayString = '[type: array, hash: ' + accum + ']';\n      return accum + hashThisString(arrayString);\n    }\n\n    if (type === 'object') {\n      for (var key in object) {\n        if (object.hasOwnProperty(key)) {\n          var keyValueString = '[ type: object, key: ' + key + ', value hash: ' + getOrderIndependentHash(object[key]) + ']';\n          accum += hashThisString(keyValueString);\n        }\n      }\n\n      return accum;\n    }\n\n    // Non object, non array...should be good?\n    var stringToHash = '[ type: ' + type + ' ; value: ' + object + ']';\n    return accum + hashThisString(stringToHash);\n  }\n\n  function deepDiff(lhs, rhs, changes, prefilter, path, key, stack, orderIndependent) {\n    changes = changes || [];\n    path = path || [];\n    stack = stack || [];\n    var currentPath = path.slice(0);\n    if (typeof key !== 'undefined' && key !== null) {\n      if (prefilter) {\n        if (typeof (prefilter) === 'function' && prefilter(currentPath, key)) {\n          return;\n        } else if (typeof (prefilter) === 'object') {\n          if (prefilter.prefilter && prefilter.prefilter(currentPath, key)) {\n            return;\n          }\n          if (prefilter.normalize) {\n            var alt = prefilter.normalize(currentPath, key, lhs, rhs);\n            if (alt) {\n              lhs = alt[0];\n              rhs = alt[1];\n            }\n          }\n        }\n      }\n      currentPath.push(key);\n    }\n\n    // Use string comparison for regexes\n    if (realTypeOf(lhs) === 'regexp' && realTypeOf(rhs) === 'regexp') {\n      lhs = lhs.toString();\n      rhs = rhs.toString();\n    }\n\n    var ltype = typeof lhs;\n    var rtype = typeof rhs;\n    var i, j, k, other;\n\n    var ldefined = ltype !== 'undefined' ||\n      (stack && (stack.length > 0) && stack[stack.length - 1].lhs &&\n        Object.getOwnPropertyDescriptor(stack[stack.length - 1].lhs, key));\n    var rdefined = rtype !== 'undefined' ||\n      (stack && (stack.length > 0) && stack[stack.length - 1].rhs &&\n        Object.getOwnPropertyDescriptor(stack[stack.length - 1].rhs, key));\n\n    if (!ldefined && rdefined) {\n      changes.push(new DiffNew(currentPath, rhs));\n    } else if (!rdefined && ldefined) {\n      changes.push(new DiffDeleted(currentPath, lhs));\n    } else if (realTypeOf(lhs) !== realTypeOf(rhs)) {\n      changes.push(new DiffEdit(currentPath, lhs, rhs));\n    } else if (realTypeOf(lhs) === 'date' && (lhs - rhs) !== 0) {\n      changes.push(new DiffEdit(currentPath, lhs, rhs));\n    } else if (ltype === 'object' && lhs !== null && rhs !== null) {\n      for (i = stack.length - 1; i > -1; --i) {\n        if (stack[i].lhs === lhs) {\n          other = true;\n          break;\n        }\n      }\n      if (!other) {\n        stack.push({ lhs: lhs, rhs: rhs });\n        if (Array.isArray(lhs)) {\n          // If order doesn't matter, we need to sort our arrays\n          if (orderIndependent) {\n            lhs.sort(function (a, b) {\n              return getOrderIndependentHash(a) - getOrderIndependentHash(b);\n            });\n\n            rhs.sort(function (a, b) {\n              return getOrderIndependentHash(a) - getOrderIndependentHash(b);\n            });\n          }\n          i = rhs.length - 1;\n          j = lhs.length - 1;\n          while (i > j) {\n            changes.push(new DiffArray(currentPath, i, new DiffNew(undefined, rhs[i--])));\n          }\n          while (j > i) {\n            changes.push(new DiffArray(currentPath, j, new DiffDeleted(undefined, lhs[j--])));\n          }\n          for (; i >= 0; --i) {\n            deepDiff(lhs[i], rhs[i], changes, prefilter, currentPath, i, stack, orderIndependent);\n          }\n        } else {\n          var akeys = Object.keys(lhs);\n          var pkeys = Object.keys(rhs);\n          for (i = 0; i < akeys.length; ++i) {\n            k = akeys[i];\n            other = pkeys.indexOf(k);\n            if (other >= 0) {\n              deepDiff(lhs[k], rhs[k], changes, prefilter, currentPath, k, stack, orderIndependent);\n              pkeys[other] = null;\n            } else {\n              deepDiff(lhs[k], undefined, changes, prefilter, currentPath, k, stack, orderIndependent);\n            }\n          }\n          for (i = 0; i < pkeys.length; ++i) {\n            k = pkeys[i];\n            if (k) {\n              deepDiff(undefined, rhs[k], changes, prefilter, currentPath, k, stack, orderIndependent);\n            }\n          }\n        }\n        stack.length = stack.length - 1;\n      } else if (lhs !== rhs) {\n        // lhs is contains a cycle at this element and it differs from rhs\n        changes.push(new DiffEdit(currentPath, lhs, rhs));\n      }\n    } else if (lhs !== rhs) {\n      if (!(ltype === 'number' && isNaN(lhs) && isNaN(rhs))) {\n        changes.push(new DiffEdit(currentPath, lhs, rhs));\n      }\n    }\n  }\n\n  function observableDiff(lhs, rhs, observer, prefilter, orderIndependent) {\n    var changes = [];\n    deepDiff(lhs, rhs, changes, prefilter, null, null, null, orderIndependent);\n    if (observer) {\n      for (var i = 0; i < changes.length; ++i) {\n        observer(changes[i]);\n      }\n    }\n    return changes;\n  }\n\n  function orderIndependentDeepDiff(lhs, rhs, changes, prefilter, path, key, stack) {\n    return deepDiff(lhs, rhs, changes, prefilter, path, key, stack, true);\n  }\n\n  function accumulateDiff(lhs, rhs, prefilter, accum) {\n    var observer = (accum) ?\n      function (difference) {\n        if (difference) {\n          accum.push(difference);\n        }\n      } : undefined;\n    var changes = observableDiff(lhs, rhs, observer, prefilter);\n    return (accum) ? accum : (changes.length) ? changes : undefined;\n  }\n\n  function accumulateOrderIndependentDiff(lhs, rhs, prefilter, accum) {\n    var observer = (accum) ?\n      function (difference) {\n        if (difference) {\n          accum.push(difference);\n        }\n      } : undefined;\n    var changes = observableDiff(lhs, rhs, observer, prefilter, true);\n    return (accum) ? accum : (changes.length) ? changes : undefined;\n  }\n\n  function applyArrayChange(arr, index, change) {\n    if (change.path && change.path.length) {\n      var it = arr[index],\n        i, u = change.path.length - 1;\n      for (i = 0; i < u; i++) {\n        it = it[change.path[i]];\n      }\n      switch (change.kind) {\n        case 'A':\n          applyArrayChange(it[change.path[i]], change.index, change.item);\n          break;\n        case 'D':\n          delete it[change.path[i]];\n          break;\n        case 'E':\n        case 'N':\n          it[change.path[i]] = change.rhs;\n          break;\n      }\n    } else {\n      switch (change.kind) {\n        case 'A':\n          applyArrayChange(arr[index], change.index, change.item);\n          break;\n        case 'D':\n          arr = arrayRemove(arr, index);\n          break;\n        case 'E':\n        case 'N':\n          arr[index] = change.rhs;\n          break;\n      }\n    }\n    return arr;\n  }\n\n  function applyChange(target, source, change) {\n    if (typeof change === 'undefined' && source && ~validKinds.indexOf(source.kind)) {\n      change = source;\n    }\n    if (target && change && change.kind) {\n      var it = target,\n        i = -1,\n        last = change.path ? change.path.length - 1 : 0;\n      while (++i < last) {\n        if (typeof it[change.path[i]] === 'undefined') {\n          it[change.path[i]] = (typeof change.path[i + 1] !== 'undefined' && typeof change.path[i + 1] === 'number') ? [] : {};\n        }\n        it = it[change.path[i]];\n      }\n      switch (change.kind) {\n        case 'A':\n          if (change.path && typeof it[change.path[i]] === 'undefined') {\n            it[change.path[i]] = [];\n          }\n          applyArrayChange(change.path ? it[change.path[i]] : it, change.index, change.item);\n          break;\n        case 'D':\n          delete it[change.path[i]];\n          break;\n        case 'E':\n        case 'N':\n          it[change.path[i]] = change.rhs;\n          break;\n      }\n    }\n  }\n\n  function revertArrayChange(arr, index, change) {\n    if (change.path && change.path.length) {\n      // the structure of the object at the index has changed...\n      var it = arr[index],\n        i, u = change.path.length - 1;\n      for (i = 0; i < u; i++) {\n        it = it[change.path[i]];\n      }\n      switch (change.kind) {\n        case 'A':\n          revertArrayChange(it[change.path[i]], change.index, change.item);\n          break;\n        case 'D':\n          it[change.path[i]] = change.lhs;\n          break;\n        case 'E':\n          it[change.path[i]] = change.lhs;\n          break;\n        case 'N':\n          delete it[change.path[i]];\n          break;\n      }\n    } else {\n      // the array item is different...\n      switch (change.kind) {\n        case 'A':\n          revertArrayChange(arr[index], change.index, change.item);\n          break;\n        case 'D':\n          arr[index] = change.lhs;\n          break;\n        case 'E':\n          arr[index] = change.lhs;\n          break;\n        case 'N':\n          arr = arrayRemove(arr, index);\n          break;\n      }\n    }\n    return arr;\n  }\n\n  function revertChange(target, source, change) {\n    if (target && source && change && change.kind) {\n      var it = target,\n        i, u;\n      u = change.path.length - 1;\n      for (i = 0; i < u; i++) {\n        if (typeof it[change.path[i]] === 'undefined') {\n          it[change.path[i]] = {};\n        }\n        it = it[change.path[i]];\n      }\n      switch (change.kind) {\n        case 'A':\n          // Array was modified...\n          // it will be an array...\n          revertArrayChange(it[change.path[i]], change.index, change.item);\n          break;\n        case 'D':\n          // Item was deleted...\n          it[change.path[i]] = change.lhs;\n          break;\n        case 'E':\n          // Item was edited...\n          it[change.path[i]] = change.lhs;\n          break;\n        case 'N':\n          // Item is new...\n          delete it[change.path[i]];\n          break;\n      }\n    }\n  }\n\n  function applyDiff(target, source, filter) {\n    if (target && source) {\n      var onChange = function (change) {\n        if (!filter || filter(target, source, change)) {\n          applyChange(target, source, change);\n        }\n      };\n      observableDiff(target, source, onChange);\n    }\n  }\n\n  Object.defineProperties(accumulateDiff, {\n\n    diff: {\n      value: accumulateDiff,\n      enumerable: true\n    },\n    orderIndependentDiff: {\n      value: accumulateOrderIndependentDiff,\n      enumerable: true\n    },\n    observableDiff: {\n      value: observableDiff,\n      enumerable: true\n    },\n    orderIndependentObservableDiff: {\n      value: orderIndependentDeepDiff,\n      enumerable: true\n    },\n    orderIndepHash: {\n      value: getOrderIndependentHash,\n      enumerable: true\n    },\n    applyDiff: {\n      value: applyDiff,\n      enumerable: true\n    },\n    applyChange: {\n      value: applyChange,\n      enumerable: true\n    },\n    revertChange: {\n      value: revertChange,\n      enumerable: true\n    },\n    isConflict: {\n      value: function () {\n        return typeof $conflict !== 'undefined';\n      },\n      enumerable: true\n    }\n  });\n\n  // hackish...\n  accumulateDiff.DeepDiff = accumulateDiff;\n  // ...but works with:\n  // import DeepDiff from 'deep-diff'\n  // import { DeepDiff } from 'deep-diff'\n  // const DeepDiff = require('deep-diff');\n  // const { DeepDiff } = require('deep-diff');\n\n  if (root) {\n    root.DeepDiff = accumulateDiff;\n  }\n\n  return accumulateDiff;\n}));\n","/*\nTODO\n  - if there is a key value, set the dom element ID?\n  - Element or wrapper for text nodes\n  - use ImmutableJS data structures\n  - test fn as prop value\n  - test my mouse renderprops\n  - what happens if an update is enququed while the update loop is updating vdom?\n  - in component constructor, call super w/ only props\n  - Memoize? https://blog.javascripting.com/2016/10/05/building-your-own-react-clone-in-five-easy-steps/\n */\n\n\nimport {flatten} from \"./util/ArrayUtils\";\nimport {getNextId} from \"./util/ElementIDCreator\";\nimport {cloneDeep} from 'lodash';\nimport {\n  enqueueDidUpdate,\n  getDidUpdateQueue,\n  performDidMountQueue,\n  performDidUpdateQueue\n} from './LifecycleQueue';\nimport {patch, removeEvents, applyPatch} from './NoriDOM';\nimport {diff} from 'deep-diff';\n\nlet currentHostTree,\n    componentInstanceMap = {},\n    updateTimeOut;\n\nexport const isNoriComponent    = test => test.$$typeof && Symbol.keyFor(test.$$typeof) === 'nori.component';\nexport const setCurrentHostTree = tree => currentHostTree = tree;\nexport const getCurrentHostTree = _ => cloneNode(currentHostTree);\nconst isVDOMNode                = node => typeof node === 'object' && node.hasOwnProperty('type') && node.hasOwnProperty('props') && node.hasOwnProperty('children');\nconst cloneNode                 = node => cloneDeep(node); // Warning: Potentially expensive\nconst hasOwnerComponent         = node => node.hasOwnProperty('owner') && node.owner !== null;\n\nconst STAGE_UNITIALIZED = 'uninitialized';\nconst STAGE_RENDERING = 'rendering';\nconst STAGE_UPDATING = 'updating';\nconst STAGE_STEADY = 'steady';\n\nlet currentStage = STAGE_UNITIALIZED;\n\nexport const isInitialized  = _ => currentStage !== STAGE_UNITIALIZED;\nexport const isRendering = _ => currentStage === STAGE_RENDERING;\nexport const isUpdating = _ => currentStage === STAGE_UPDATING;\nexport const isSteady = _ => currentStage === STAGE_STEADY;\n\n//------------------------------------------------------------------------------\n//PUBLICPUBLICPUBLICPUBLICPUBLICPUBLICPUBLICPUBLICPUBLICPUBLICPUBLICPUBLICPUBLIC\n//------------------------------------------------------------------------------\n\n// Create VDOM from JSX. Used by the Babel/JSX transpiler\nexport const h = (type, props, ...args) => {\n  props = props || {};\n  // TODO fix this\n  if (props.key === 0) {\n    console.warn(`Component key can't be '0' : ${type} ${props}`)\n  }\n  return {\n    type, props, children: args.length ? flatten(args) : [], owner: null\n  };\n};\n\n// Called from NoriDOM to render the first vdom\nexport const renderVDOM = node => {\n  currentStage = STAGE_RENDERING;\n  const vdom = renderComponentVDOM(node);\n  setCurrentHostTree(vdom);\n  currentStage = STAGE_STEADY;\n  return vdom;\n};\n\n//------------------------------------------------------------------------------\n//STATEUPDATESTATEUPDATESTATEUPDATESTATEUPDATESTATEUPDATESTATEUPDATESTATEUPDATES\n//------------------------------------------------------------------------------\n\n// Queue updates from components and batch update every so often\n// Called from NoriComponent set state\nexport const enqueueUpdate = (id) => {\n  enqueueDidUpdate(id);\n  if (!updateTimeOut) {\n    updateTimeOut = setTimeout(performUpdates, 10);\n  }\n};\n\nconst performUpdates = () => {\n  if(isRendering()) {\n    console.log(`>>> Update called while rendering`);\n    return;\n  }\n\n  // console.time('update');\n  clearTimeout(updateTimeOut);\n  updateTimeOut = null;\n\n  currentStage = STAGE_RENDERING;\n  let updatedVDOMTree = getCurrentHostTree();\n  getDidUpdateQueue().forEach(id => {\n    updatedVDOMTree = updateComponentVDOM(updatedVDOMTree, id);\n  });\n  patch(updatedVDOMTree, getCurrentHostTree());\n\n  setCurrentHostTree(updatedVDOMTree);\n  performDidMountQueue();\n\n  currentStage = STAGE_UPDATING;\n  performDidUpdateQueue(componentInstanceMap);\n  // console.timeEnd('update');\n  currentStage = STAGE_STEADY;\n};\n\n//------------------------------------------------------------------------------\n//CREATIONCREATIONCREATIONCREATIONCREATIONCREATIONCREATIONCREATIONCREATIONCREATI\n//------------------------------------------------------------------------------\n\n// Renders out components to get a vdom tree for the first render of a component or tree\nconst renderComponentVDOM = node => {\n  node = cloneNode(node);\n  if (typeof node === 'object' && typeof node.type === 'function') {\n    node = renderComponentNode(instantiateNewComponent(node));\n    node.children = renderChildFunctions(node).map(child => renderComponentVDOM(child));\n  }\n  return node;\n};\n\n// Updates the vdom rerendering only the nodes that match an id\nconst updateComponentVDOM = (node, id) => {\n  node = cloneNode(node);\n  if (typeof node === 'object') {\n    if (hasOwnerComponent(node) && node.owner.props.id === id) { //\n      //console.log(`Updating ${node.owner.props.id}`, node);\n      node = renderComponentNode(instantiateNewComponent(node)); // node\n    } else if (typeof node.type === 'function') {\n      console.log('New component', node);\n      node = renderComponentVDOM(node); // new component added\n    }\n    node.children = renderChildFunctions(node).map(child => updateComponentVDOM(child, id));\n  }\n  return node;\n};\n\n// If children are an inline fn, render and insert the resulting children in to the\n// child array at the location of the fn\n// works backwards so the insertion indices are correct\nconst renderChildFunctions = node => {\n  let children    = node.children,\n      result      = [],\n      resultIndex = [],\n      index       = 0;\n\n  children.forEach((child, i) => {\n    if (typeof child === 'function') {\n      let childResult = child(node);\n      childResult.forEach((c, i) => {\n        if (typeof c === 'object' && !c.props.id) {\n          c.props.id = c.props.id ? c.props.id : node.props.id + `.${i}.${index++}`;\n        }\n      });\n      result.unshift(childResult);\n      resultIndex.unshift(i);\n    }\n  });\n  resultIndex.forEach((idx, i) => {\n    children.splice(idx, 1, ...result[i]);\n  });\n  return children;\n};\n\nconst getNodeKeyOrID = node => node.props.key ? '' + node.props.key : node.props.id;\n\nconst instantiateNewComponent = node => {\n  let instance;\n  if (componentInstanceMap.hasOwnProperty(node.props.id)) {\n    instance = componentInstanceMap[node.props.id];\n  } else {\n    instance                            = new node.type(node.props, node.children);\n    componentInstanceMap[node.props.id] = instance;\n  }\n  return instance;\n};\n\n// const instantiateNewComponent = node => {\n//   const ID = getNodeKeyOrID(node);\n//   if (componentInstanceMap.hasOwnProperty(ID)) {\n//     console.log(`instantiateNewComponent : REUSE ${node.props.id} ${getNodeKeyOrID(node)}`);\n//     return componentInstanceMap[ID];\n//   } else if(typeof node.type === 'function') {\n//     console.log(`instantiateNewComponent : CREATE ${ID}`);\n//     let instance                            = new node.type(node.props, node.children);\n//     componentInstanceMap[ID] = instance;\n//     return instance;\n//   } else if (hasOwnerComponent(node)) {\n//     console.log('node has an owner',ID, node);\n//     console.log('>>>> ',componentInstanceMap.hasOwnProperty(ID));\n//     return node.owner;\n//   }\n//   console.log(`instantiateNewComponent : NODE? `,node);\n//\n//   return node;\n// };\n\n\nconst renderComponentNode = instance => {\n  if (typeof instance.internalRender === 'function') {\n    let node = instance.internalRender();\n    // Assign the instance id on to the node if it didn't have one\n    if (!node.props.hasOwnProperty('id') || node.props.id.indexOf('element-id-') === 0) {\n      node.props.id = instance.props.id;\n    }\n    node.children.forEach((child, i) => {\n      if (typeof child === 'object' && !child.props.id) {\n        child.props.id = child.props.id ? child.props.id : node.props.id + `.${i}`;\n      }\n    });\n    instance.vdom = node;\n    node.owner    = instance;\n    return node;\n  } else if (isVDOMNode(instance)) {\n    // SFC\n    if (!instance.props.id) {\n      // instance.props.id = nodeIDorKey(instance)\n      instance.props.id = instance.props.key ? '' + instance.props.key : getNextId();\n    }\n    return instance;\n  } else {\n    console.warn(`renderComponentNode : No render() on instance`);\n    return null;\n  }\n};\n\n//------------------------------------------------------------------------------\n//UPDATESUPDATESUPDATESUPDATESUPDATESUPDATESUPDATESUPDATESUPDATESUPDATESUPDATESU\n//------------------------------------------------------------------------------\n\n// TODO what if about component children of components?\nexport const removeComponentInstance = (node) => {\n  if (hasOwnerComponent(node)) {\n    let id = node.owner.props.id;\n    if (node.owner === componentInstanceMap[id]) {\n      if (typeof componentInstanceMap[id].componentWillUnmount === 'function') {\n        componentInstanceMap[id].componentWillUnmount();\n      }\n      // TODO can I get the ID a better way?\n      removeEvents(node.owner.vdom.props.id);\n      delete componentInstanceMap[id];\n    }\n  }\n};","export default {\n  existy     : function (x) {\n    return x !== null;\n  },\n  truthy     : function (x) {\n    return (x !== false) && this.existy(x);\n  },\n  falsey     : function (x) {\n    return !this.truthy(x);\n  },\n  func       : function (object) {\n    return typeof object === \"function\";\n  },\n  object     : function (object) {\n    return Object.prototype.toString.call(object) === \"[object Object]\";\n  },\n  objectEmpty: function (object) {\n    for (var key in object) {\n      if (object.hasOwnProperty(key)) {\n        return false;\n      }\n    }\n    return true;\n  },\n  string     : function (object) {\n    return Object.prototype.toString.call(object) === \"[object String]\";\n  },\n  array      : function (object) {\n    return Array.isArray(object);\n    //return Object.prototype.toString.call(object) === '[object Array]';\n  },\n  promise    : function (promise) {\n    return promise && typeof promise.then === 'function';\n  },\n  observable : function (observable) {\n    return observable && typeof observable.subscribe === 'function';\n  },\n  element    : function (obj) {\n    return typeof HTMLElement === 'object' ?\n      obj instanceof HTMLElement || obj instanceof DocumentFragment : //DOM2\n      obj && typeof obj === 'object' && obj !== null &&\n      (obj.nodeType === 1 || obj.nodeType === 11) &&\n      typeof obj.nodeName === 'string';\n  },\n  integer    : function (str) {\n    return (/^-?\\d+$/.test(str));\n  }\n};","import Is from './util/is';\nimport {equals} from \"ramda\";\nimport {getNextId} from './util/ElementIDCreator';\nimport {enqueueUpdate} from \"./Nori\";\n\nexport default class NoriComponent {\n\n  constructor(type, props, children) {\n    this.type            = type;\n    this.props           = props || {};\n    this.props.id        = props.key ? props.key : getNextId();\n    this.props.children  = Is.array(children) ? children : [children];\n    this.tweens          = props.hasOwnProperty('tweens') ? props.tweens : {};\n    this.internalState   = props.hasOwnProperty('state') ? props.state : {};\n    this.isDirty         = true;\n    this.internalCurrent = null;\n    this.internalVDOM    = null;\n    this.memoRenderResult = null;\n    this.$$typeof        = Symbol.for('nori.component');\n  }\n\n  set state(nextState) {\n    if (!Is.object(nextState)) {\n      console.warn('Component state must be an object');\n      return;\n    }\n\n    if (this.shouldComponentUpdate({}, nextState)) {\n      this.internalState = Object.assign({}, this.internalState, nextState);\n      if (typeof this.componentWillUpdate === 'function') {\n        this.componentWillUpdate();\n      }\n      this.isDirty = true;\n      enqueueUpdate(this.props.id);\n    }\n  }\n\n  get state() {\n    return Object.assign({}, this.internalState);\n  }\n\n  set current(el) {\n    this.internalCurrent = el;\n  }\n\n  get current() {\n    return this.internalCurrent;\n  }\n\n  set vdom(v) {\n    this.internalVDOM = v;\n  }\n\n  get vdom() {\n    return this.internalVDOM;\n  }\n\n  //https://reactjs.org/docs/shallow-compare.html\n  shouldComponentUpdate(nextProps, nextState) {\n    // Deep compare\n    // return !equals(nextState, this.internalState); //equals is from Ramda\n    // Shallow compare\n    return !(nextState === this.internalState) || !(nextProps === this.props);\n  }\n\n  forceUpdate() {\n    enqueueUpdate(this.props.id);\n  }\n\n  // Memoize last render result and return if not dirty?\n  internalRender() {\n\n    if (typeof this.render === 'function') {\n      //console.log(`${this.props.id} internalRender ${this.isDirty}`);\n      if(this.isDirty) {\n        this.memoRenderResult =  this.render();\n        this.isDirty = false;\n      }\n      return this.memoRenderResult;\n    } else {\n      console.error(`Component ${this.props.id} has no render()!`)\n    }\n  }\n\n  remove() {\n    this.internalCurrent = null;\n    this.internalVDOM    = null;\n  }\n\n}","/* @jsx h */\n\n/**\n * Simple wrapper component. I'll extend this with more functionality later\n */\n\nimport {h} from \"../nori/Nori\";\nimport NoriComponent from '../nori/NoriComponent';\n\nexport default class Box extends NoriComponent {\n\n  constructor(props, children) {\n    super('div', props, children);\n  }\n\n  render() {\n    let {children, ...rest} = this.props;\n    return <div {...rest}>{children}</div>;\n  }\n}","export const capitalizeFirstLetter = (str) => {\n  return str.charAt(0).toUpperCase() + str.substring(1);\n};\n\nexport const toTitleCase = (str) => {\n  return str.replace(/\\w\\S*/g, function (txt) {\n    return txt.charAt(0).toUpperCase() + txt.substr(1);\n  });\n};\n\n\nexport const ellipses = (len) => {\n  return (this.length > len) ? this.substr(0, len) + \"...\" : this;\n};\n\n// From https://github.com/sstephenson/prototype/blob/d9411e5/src/prototype/lang/string.js#L426\n// export const removeTags2 = (str) => {\n//   return str.replace(/<\\w+(\\s+(\"[^\"]*\"|'[^']*'|[^>])+)?>|<\\/\\w+>/gi, '');\n// };\n\nexport const removeTags = (str) => {\n  return str.replace(/(<([^>]+)>)/ig, '');\n};\n\nexport const removeEntities = (str) => {\n  return str.replace(/(&(#?)(?:[a-z\\d]+|#\\d+|#x[a-f\\d]+);)/ig, '');\n};\n\n// From https://github.com/sstephenson/prototype/blob/d9411e5/src/prototype/lang/string.js#L426\nexport const unescapeHTML = (str) => {\n  // Warning: In 1.7 String#unescapeHTML will no longer call String#stripTags.\n  return removeTags(str).replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&amp;/g, '&');\n};\n\nexport const capitalize = (str) => {\n  return str.charAt(0).toUpperCase() + this.substring(1).toLowerCase();\n};\n\nexport const underscore = (str) => {\n  return str.replace(/::/g, '/')\n    .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\n    .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\n    .replace(/-/g, '_')\n    .toLowerCase();\n};\n\nexport const dasherize = (str) => {\n  return str.replace(/_/g, '-');\n};\n\nexport const DOMtoCSSStyle = (str) => {\n  return dasherize(underscore(str));\n};\n\nexport const removeWhiteSpace = (str) => {\n  return str.replace(/(\\r\\n|\\n|\\r|\\t|\\s)/gm, '').replace(/>\\s+</g, '><');\n};\n\n\nexport const slugify = str => str.split(' ').map(s => s.toLowerCase()).join('_');\n\nexport const unslugify = str => str.split('_').map(s => s.charAt(0).toUpperCase() + s.substring(1)).join(' ');","import {rndNumber} from './NumberUtils';\nimport {toTitleCase, capitalizeFirstLetter} from \"./StringUtils\";\nimport {rndElement} from \"./ArrayUtils\";\n\nlet _currentText      = [],\n    _defaultTextSet,\n    _maleFirstNames   = [],\n    _femaleFirstNames = [],\n    _lastNames        = [],\n    _punctuation      = [],\n    _months,\n    _days;\n\n_defaultTextSet = 'Perhaps a re-engineering of your current world view will re-energize your online nomenclature to enable a new holistic interactive enterprise internet communication solution Upscaling the resurgent networking exchange solutions achieving a breakaway systemic electronic data interchange system synchronization thereby exploiting technical environments for mission critical broad based capacity constrained systems Fundamentally transforming well designed actionable information whose semantic content is virtually null To more fully clarify the current exchange a few aggregate issues will require addressing to facilitate this distributed communication venue In integrating non-aligned structures into existing legacy systems a holistic gateway blueprint is a backward compatible packaging tangible';\n\n_lastNames = 'Smith Johnson Williams Jones Brown Davis Miller Wilson Moore Taylor Anderson Thomas Jackson White Harris Martin Thompson Garcia Martinez Robinson Clark Rodriguez Lewis Lee Walker Hall Allen Young Hernandez King Wright Lopez Hill Scott Green Adams Baker Gonzalez Nelson Carter Mitchell Perez Roberts Turner Phillips Campbell Parker Evans Edwards Collins Stewart Sanchez Morris Rogers Reed Cook Morgan Bell Murphy'.split(' ');\n\n_maleFirstNames = 'Thomas Arthur Lewis Clarence Leonard Albert Paul Carl Ralph Roy Earl Samuel Howard Richard Francis Laurence Herbert Elmer Ernest Theodore David Alfred Donald Russell Eugene Andrew Kenneth Herman Jesse Lester Floyd Michael Edwin Clifford Benjamin Clyde Glen Oscar Daniel'.split(' ');\n\n_femaleFirstNames = 'Elizabeth Ann Helen Margaret Ellen Catherine Lily Florence Ada Lou Ethel Emily Ruth Rose Frances Alice Bertha Clara Mabel Minnie Grace Jane Evelyn Gertrude Edna Pearl Laura Hazel Edith Esther Harriet Sarah May Matilda Martha Myrtle Josephine Maud Agnes Keri Julia Irene Mildred Cora'.split(' ');\n\n_punctuation = ['.', '.', '.', '.', '?', '!'];\n\n_months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n_days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];\n\n_currentText = _defaultTextSet.toLowerCase().split(' ');\n\nfunction rNumber(min, max) {\n  return rndNumber(min, max);\n}\n\nfunction oneOf(arry) {\n  return arry[rNumber(0, arry.length - 1)];\n}\n\nfunction severalOf(num, arry) {\n  if (num >= arry.length) {\n    return arry;\n  }\n  let res = [];\n  for (let i = 0; i < num; i++) {\n    res.push(oneOf(arry));\n  }\n  return res;\n}\n\nfunction sentence(min, max) {\n  return capitalizeFirstLetter(text(min, max)) + oneOf(_punctuation);\n}\n\nfunction title(min, max) {\n  return toTitleCase(text(min, max));\n}\n\nfunction paragraph(min, max) {\n  var str   = '',\n      delim = ' ',\n      len   = rNumber(min, max),\n      i     = 0;\n\n  for (; i < len; i++) {\n    if (i === len - 1) {\n      delim = '';\n    }\n    str += sentence(1, 10) + delim;\n  }\n\n  return str;\n}\n\nfunction text(min, max) {\n  var str   = '',\n      delim = ' ',\n      len   = rNumber(min, max),\n      i     = 0;\n\n  for (; i < len; i++) {\n    if (i === len - 1) {\n      delim = '';\n    }\n    str += oneOf(_currentText) + delim;\n  }\n\n  return str;\n}\n\nfunction getFirstName() {\n  return rNumber(0, 1) ? oneOf(_maleFirstNames) : oneOf(_femaleFirstNames);\n}\n\nfunction getLastName() {\n  return oneOf(_lastNames);\n}\n\nfunction firstLastName() {\n  return getFirstName() + ' ' + getLastName();\n}\n\nfunction lastFirstName() {\n  return getLastName() + ', ' + getFirstName();\n}\n\n/**\n * Better implementation http://stackoverflow.com/questions/9035627/elegant-method-to-generate-array-of-random-dates-within-two-dates\n * @returns {{monthNumber: *, monthName: *, monthDay, weekDayNumber: *, weekDay: *, year}}\n */\nfunction date() {\n  var month = rNumber(0, 11),\n      wkday = rNumber(0, 4),\n      date  = {\n        monthNumber  : month + 1,\n        monthName    : _months[month],\n        monthDay     : rNumber(1, 28),\n        weekDayNumber: wkday + 1,\n        weekDay      : _days[wkday],\n        year         : oneOf(['2018','2019','2020'])\n      };\n\n  date.string = date.monthName + ' ' + date.monthDay + ', ' + date.year;\n\n  return date;\n}\n\n/**\n * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n * @returns {string}\n */\nfunction guid() {\n  function s4() {\n    return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  }\n\n  return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n}\n\nmodule.exports = {\n  rNumber,\n  oneOf,\n  severalOf,\n  text,\n  sentence,\n  title,\n  paragraph,\n  firstLastName,\n  lastFirstName,\n  date,\n  guid\n};","/* @jsx h */\n\n/**\n * Example component that returns some dummy text for mockups and testing\n */\n\nimport {h} from \"../nori/Nori\";\nimport * as L from '../nori/util/Lorem';\nimport NoriComponent from '../nori/NoriComponent';\n\nexport default class Lorem extends NoriComponent {\n\n  TEXT = 'text';\n\n  // Default state\n  internalState = {lorem: 'Lorem ipsum dolor sit amet ...'};\n\n  constructor(props, children = []) {\n    const baseElement = props.element || 'span';\n\n    const min = props.min || 3;\n    const max = props.max || 5;\n    const mode = props.mode || 'text';\n\n    let lorem = L.text(min, max);\n\n    switch (mode) {\n      case 'paragraph':\n        lorem = L.paragraph(min, max);\n        break;\n      case 'title':\n        lorem = L.title(min, max);\n        break;\n      case 'sentence':\n        lorem = L.sentence(min, max);\n        break;\n      case 'date':\n        lorem = L.date().string;\n        break;\n      case 'fullNameFL':\n        lorem = L.firstLastName();\n        break;\n    }\n\n    super(baseElement, props, []);\n\n    // have to call super first\n    this.internalState = {lorem};\n  }\n\n  render() {\n    // const min = this.props.min || 3;\n    // const max = this.props.max || 5;\n    // const mode = this.props.mode || 'text';\n    //\n    // let lorem = L.text(min, max);\n    //\n    // switch (mode) {\n    //   case 'paragraph':\n    //     lorem = L.paragraph(min, max);\n    //     break;\n    //   case 'title':\n    //     lorem = L.title(min, max);\n    //     break;\n    //   case 'sentence':\n    //     lorem = L.sentence(min, max);\n    //     break;\n    //   case 'date':\n    //     lorem = L.date().string;\n    //     break;\n    //   case 'fullNameFL':\n    //     lorem = L.firstLastName();\n    //     break;\n    // }\n\n    // Return an array or each letter will be created as an individual element\n    // The base element in the constructor determines what dom element it gets wrapped in\n    return <span>{this.state.lorem}</span>;\n  }\n\n}\n\nLorem.TEXT = 'text';\nLorem.PARAGRAPH = 'paragraph';\nLorem.TITLE = 'title';\nLorem.SENTENCE = 'sentence';\nLorem.DATE = 'date';\nLorem.FULLNAMEFL= 'fullNameFL';","/* @jsx h */\n\n/**\n * Example component that supports lifecycle hooks and state updating\n */\n\nimport NoriComponent from '../nori/NoriComponent';\nimport {h} from \"../nori/Nori\";\nimport {css} from 'emotion';\n\nconst red = css`color: red;`;\n\nexport default class Ticker extends NoriComponent {\n\n  // Subclasses should only take passed props and children\n  constructor(props, children) {\n    super('h1', props, []);\n    this.tickerID = null;\n    this.state = {counter: 1};\n  }\n\n  componentDidMount = () => {\n    this.tickerID = setInterval(this.$updateTicker, 1000)\n  };\n\n  $updateTicker = _ => {\n    //console.log('Ticker update!', this.props.id, this.current);\n    this.state = {counter: ++this.state.counter}\n  };\n\n  componentDidUpdate = () => {\n    //console.log('Ticker update', this.state);\n  };\n\n  componentWillUnmount = () => {\n    clearInterval(this.tickerID);\n  };\n\n  render() {\n    return <h3>The count is <strong className={red}>{this.internalState.counter}</strong> ticks.</h3>;\n  }\n}","/* @jsx h */\n\n/**\n * Example component that supports action triggers, lifecycle hooks and state updating\n */\n\nimport NoriComponent from '../nori/NoriComponent';\nimport {h} from \"../nori/Nori\";\nimport * as L from '../nori/util/Lorem';\nimport {css} from 'emotion';\n\nconst blue = css`color: blue;`;\n\nexport default class Greeter extends NoriComponent {\n\n  // Subclasses should only take passed props and children\n  constructor(props, children) {\n    super('h1', props, []);\n    this.state = {name: L.firstLastName()};\n  }\n\n  $onClick = evt => {\n    this.state = {name:L.firstLastName()};\n  };\n\n  $onRender = evt => {\n    //console.log('Greet rendered!', evt);\n  };\n\n  componentDidMount   = () => {\n    // console.log('Greet did mount');\n  };\n\n  componentWillUnmount = () => {\n    //console.log('Greet will remove');\n  };\n\n  componentWillUpdate  = () => {\n    //console.log('Greet will update', this.state.name);\n  };\n\n  componentDidUpdate   = () => {\n    // console.log('Greet did update');\n  };\n\n  onOver = (e) => {\n    //console.log('Greeter over', e, this);\n  };\n\n  onOut = () => {\n    //console.log('Greeter out');\n  };\n\n  render() {\n    //console.log(`Greeter ${this.props.id} render with ${this.state.name}`);\n    return <h1 onClick={this.$onClick} onMouseOver={this.onOver} onMouseOut={this.onOut}>Hello, <em className={blue}>{this.state.name}</em></h1>;\n  }\n}","/* @jsx h */\n\n/**\n * Example component that supports lifecycle hooks and state updating\n */\n\nimport NoriComponent from '../nori/NoriComponent';\nimport {h} from \"../nori/Nori\";\nimport {css} from 'emotion';\nimport {modularScale} from \"../theme/Theme\";\nimport {range} from \"../nori/util/ArrayUtils\";\nimport Ticker from './Ticker';\nimport Greeter from './Greeter';\n\nconst bordered = css`\nborder: 1px solid #ccc;\nbackground-color: #eee;\npadding: ${modularScale.ms0}\n`;\n\nexport default class Lister extends NoriComponent {\n\n  // Subclasses should only take passed props and children\n  constructor(props, children) {\n    super('h1', props, []);\n    this.state = {counter: 1};\n  }\n\n  componentDidMount = () => {\n    //console.log('Ticker did mount');\n  };\n\n  componentDidUpdate = () => {\n    // console.log('Lister update', this.state);\n  };\n\n  componentWillUnmount = () => {\n    //console.log('Lister will unmount');\n  };\n\n  $onAddClick = e => {\n    this.state = {counter: ++this.state.counter}\n  };\n\n  $onRemoveClick = e => {\n    let current = this.state.counter;\n    if(current < 2) {\n      return;\n    }\n    this.state = {counter: --current}\n  };\n\n\n\n// <ul>\n// {range(this.state.counter).map(i => <li>Item {i+1}</li>)}\n// </ul>\n  //return <Greeter key={'listitem-'+i}/>;\n\n  /*\n  {() => (range(this.state.counter).map(i => {\n        return <Greeter key={'listitem-'+i}/>;\n      }))}\n      <hr/>\n      {() => (range(this.state.counter).map(i => {\n        return <Greeter key={'listitem-2'+i}/>;\n      }))}\n  */\n\n  render() {\n    //console.log('render lister');\n    return <div className={bordered} key={this.props.id}>\n      <button onClick={this.$onAddClick}>Add</button><button onClick={this.$onRemoveClick}>Remove</button>\n      <hr/>\n      {range(this.state.counter).map(i => {\n        return <Greeter key={'listitem-'+i}/>;\n      })}\n      <hr/>\n      {() => (range(this.state.counter).map(i => {\n        return <Greeter key={'listitem-2'+i}/>;\n      }))}\n    </div>;\n  }\n}","/* @jsx h */\n\nimport {Global} from './theme/Global';\nimport {theme} from './theme/Theme';\nimport {css} from 'emotion';\nimport {h} from './nori/Nori';\nimport {render} from './nori/NoriDOM';\nimport Box from './components/Box';\nimport Lorem from './components/Lorem';\nimport Ticker from './components/Ticker';\nimport Greeter from './components/Greeter';\nimport Lister from './components/Lister';\n\n// ${tme.gradients['premium-white']};\nconst appContainerBG = require('../img/pattern/shattered.png');\nconst appContainer   = css`\n  position: absolute;\n  overflow: auto;\n  display: grid;\n  grid-template: 1fr / 1fr;\n  align-items: center;\n  justify-items: center;\n  width: 100%;\n  height: 100%;\n  background-image: url(${appContainerBG});\n  border: 1rem solid rgb(255,255,255);\n  box-shadow: 0 0 50px inset rgba(0,0,0,.1);\n`;\n\nconst whiteBox = css`\n  display: block;\n  padding: 1rem;\n  color: #000;\n  overflow: hidden;\n  background-image: ${theme.gradients['premium-white']};\n  box-shadow: ${theme.shadows.dropShadow.bigsoft};\n`;\n\nconst blackBox = css`\n  display: block;\n  padding: 1rem;\n  color: #fff;\n  overflow: hidden;\n  background-image: ${theme.gradients['premium-dark']};\n  box-shadow: ${theme.shadows.dropShadow.bigsoft};\n`;\n\n\nconst Sfc = _ => <h1>I'm a stateless functional component</h1>;\n\n\n\nlet testBox = <Box key='main' className={appContainer}>\n  <Box className={blackBox}>\n    <Lorem mode={Lorem.TITLE}/>\n    <Box className={whiteBox}>\n      <Sfc/>\n      <Ticker/>\n      <Greeter/>\n      <Lister/>\n    </Box>\n  </Box>\n</Box>;\n\nrender(testBox, document.querySelector('#js-application'));\n"]}